<?xml version="1.0"?>
<doc>
    <assembly>
        <name>JetBrains.PsiFeatures.VisualStudio.Core</name>
    </assembly>
    <members>
        <member name="T:JetBrains.PsiFeatures.VisualStudio.Core.Resources.Clipart.PsiFeaturesVisualStudioClipart">
            <summary>
              A strongly-typed resource class, for looking up localized strings, etc.
            </summary>
        </member>
        <member name="P:JetBrains.PsiFeatures.VisualStudio.Core.Resources.Clipart.PsiFeaturesVisualStudioClipart.ResourceManager">
            <summary>
              Returns the cached ResourceManager instance used by this class.
            </summary>
        </member>
        <member name="P:JetBrains.PsiFeatures.VisualStudio.Core.Resources.Clipart.PsiFeaturesVisualStudioClipart.Culture">
            <summary>
              Overrides the current thread's CurrentUICulture property for all
              resource lookups using this strongly typed resource class.
            </summary>
        </member>
        <member name="P:JetBrains.PsiFeatures.VisualStudio.Core.Resources.Clipart.PsiFeaturesVisualStudioClipart.ReSharperMisbehaves">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="T:JetBrains.PsiFeatures.VisualStudio.Core.Resources.PsiFeaturesVisualStudioCoreThemedIcons">
             <summary>
            	<para>
            		<para>Autogenerated identifier classes and identifier objects to Themed Icons registered with <see cref="T:JetBrains.Application.Icons.IThemedIconManager"></see>.</para>
            		<para>Identifier classes should be used in attributes, XAML, or generic parameters. Where an <see cref="T:JetBrains.UI.Icons.IconId"></see> value is expected, use the identifier object in the <c>Id</c> field of the identifier class.</para>
            	</para>
            </summary>
            <remarks>
            	<para>This code was compile-time generated to support Themed Icons in the JetBrains application.</para>
            	<para>It has two primary goals: load the icons of this assembly to be registered with <see cref="T:JetBrains.Application.Icons.IThemedIconManager"></see> so that they were WPF-accessible and theme-sensitive; and emit early-bound accessors for referencing icons in codebehind in a compile-time-validated manner.</para>
            	<h1>XAML</h1>
            	<para>For performance reasons, the icons are not individually exposed with application resources. There is a custom markup extension to bind an image source in markup.</para>
            	<para>To use an icon from XAML, set an <see cref="T:System.Windows.Media.ImageSource"></see> property to the <see cref="T:System.CodeDom.CodeTypeReference"></see> markup extension, which takes an icon identifier class (nested in <see cref="T:JetBrains.PsiFeatures.VisualStudio.Core.Resources.PsiFeaturesVisualStudioCoreThemedIcons"></see> class) as a parameter.</para>
            	<para>Example:</para>
            	<code>&lt;Image Source="{icons:ThemedIcon myres:PsiFeaturesVisualStudioCoreThemedIcons+Trinity}" /&gt;</code>
            	<h1>Attributes</h1>
            	<para>Sometimes you have to reference an icon from a type attriute when you're defining objects in code. Typical examples are Options pages and Tool Windows.</para>
            	<para>To avoid the use of string IDs which are not validated very well, we've emitted identifier classes to be used with <c>typeof()</c> expression, one per each icon. Use the attribute overload which takes a <see cref="T:System.Type"></see> for an image, and choose your icon class from nested classes in the <see cref="T:JetBrains.PsiFeatures.VisualStudio.Core.Resources.PsiFeaturesVisualStudioCoreThemedIcons"></see> class.</para>
            	<para>Example:</para>
            	<code>[Item(Name="Sample", Icon=typeof(PsiFeaturesVisualStudioCoreThemedIcons.Trinity))]</code>
            	<h1>CodeBehind</h1>
            	<para>In codebehind, we have two distinct tasks: (a) specify some icon in the APIs and (b) render icon images onscreen.</para>
            	<para>On the APIs stage you should only manipulate icon identifier objects (of type <see cref="T:JetBrains.UI.Icons.IconId"></see>, statically defined in <see cref="T:JetBrains.PsiFeatures.VisualStudio.Core.Resources.PsiFeaturesVisualStudioCoreThemedIcons"></see> in <c>Id</c> fields). Icon identifier classes (nested in <see cref="T:JetBrains.PsiFeatures.VisualStudio.Core.Resources.PsiFeaturesVisualStudioCoreThemedIcons"></see>) should be turned into icon identifier objects as early as possible. Rendering is about getting an <see cref="T:System.Windows.Media.ImageSource"></see> to assign to WPF, or <see cref="T:System.Drawing.Bitmap"></see> to use with GDI+ / Windows Forms.</para>
            	<para>You should turn an identifier object into a rendered image as late as possible. The identifier is static and lightweight and does not depend on the current theme, while the image is themed and has to be loaded or generated/rasterized. You need an <see cref="T:JetBrains.Application.Icons.IThemedIconManager"></see> instance to get the image out of an icon identifier object. Once you got the image, you should take care to change it with theme changes — either by using a live image property, or by listening to the theme change event. See <see cref="T:JetBrains.Application.Icons.IThemedIconManager"></see> and its extensions for the related facilities.</para>
            	<para>Example:</para>
            	<code>// Getting IconId identifier object to use with APIs
            IconId iconid = PsiFeaturesVisualStudioCoreThemedIcons.Trinity.Id;</code>
            	<code>// Getting IconId out of an Icon Identifier Class type
            IconId iconid = new JetBrains.Application.Icons.CompiledIconsCs.CompiledIconCsId(typeof(PsiFeaturesVisualStudioCoreThemedIcons.Trinity));</code>
            	<code>// Getting image for screen rendering by IconId
            themediconmanager.Icons[icnoid]</code>
            	<code>// Getting image for screen rendering by Icon Identifier Class
            themediconmanager.GetIcon&lt;PsiFeaturesVisualStudioCoreThemedIcons.Trinity&gt;()</code>
            	<h1>Icons Origin</h1>
            	<para>This code was generated by a pre-compile build task from a set of input files which are XAML files adhering to a certain convention, as convenient for exporting them from the Illustrator workspace, plus separate PNG files with raster icons. In the projects, these files are designated with <c>ThemedIconsXamlV3</c> and <c>ThemedIconPng</c> build actions and do not themselves get into the output assembly. All of such files are processed, vector images for different themes of the same icon are split and combined into the single list of icons in this assembly. This list is then written into the genearted XAML file (compiled into BAML within assembly), and serves as the source for this generated code.</para>
            </remarks>
        </member>
        <member name="T:JetBrains.PsiFeatures.VisualStudio.Core.Resources.PsiFeaturesVisualStudioCoreThemedIcons.FolderOpened2">
             <summary>
            	<para>
            		<para>FolderOpened2 Themed Icon generated identifiers:</para>
            		<para>— <see cref="T:JetBrains.PsiFeatures.VisualStudio.Core.Resources.PsiFeaturesVisualStudioCoreThemedIcons.FolderOpened2"></see> identifier class, for use in attributes, XAML, and generic parameters;</para>
            		<para>— <see cref="F:JetBrains.PsiFeatures.VisualStudio.Core.Resources.PsiFeaturesVisualStudioCoreThemedIcons.FolderOpened2.Id"></see> identifier object, as a field in the identifier class, for use where an <see cref="T:JetBrains.UI.Icons.IconId"></see> value is expected.</para>
            		<para>
            			<code>
                                             
                               :+************
                             ,\;.          LL
               rrrrrrrrrrrrrr!'            rr
               TT``````````````````````````TT
               zz``````````````````````````zz
               ii--??????????????????????--ii
               11..7777777777777777777777..11
               II''iiiiiiiiiiiiiiiiiiiiii''II
               55''}}}}}}}}}}}}}}}}}}}}}}''55
               jj__5555555555555555555555__jj
               yy::EEEEEEEEEEEEEEEEEEEEEE::yy
               PP,,PPPPPPPPPPPPPPPPPPPPPP,,PP
               99~~~~~~~~~~~~~~~~~~~~~~~~~~99
               GGGGGGGGGGGGGGGGGGGGGGGGGGGGGG
                                             
            </code>
            		</para>
            	</para>
            </summary>
            <remarks>
            	<para>For details on Themed Icons and their use, see Remarks on the outer class.</para>
            </remarks>
            <example>
            	<code>&lt;Image Source="{icons:ThemedIcon myres:PsiFeaturesVisualStudioCoreThemedIcons+FolderOpened2}" /&gt;        &lt;!-- XAML --&gt;</code>
            </example>
            <example>
            	<code>[Item(Name="Sample", Icon=typeof(PsiFeaturesVisualStudioCoreThemedIcons.FolderOpened2))]        // C# Type attribute</code>
            </example>
            <example>
            	<code>IconId iconid = PsiFeaturesVisualStudioCoreThemedIcons.FolderOpened2.Id;        // IconId identifier object</code>
            </example>
            <example>
            	<code>themediconmanager.GetIcon&lt;PsiFeaturesVisualStudioCoreThemedIcons.FolderOpened2&gt;()        // Icon image for rendering</code>
            </example>
        </member>
        <member name="F:JetBrains.PsiFeatures.VisualStudio.Core.Resources.PsiFeaturesVisualStudioCoreThemedIcons.FolderOpened2.Id">
            <inheritdoc cref="T:JetBrains.PsiFeatures.VisualStudio.Core.Resources.PsiFeaturesVisualStudioCoreThemedIcons.FolderOpened2">identifier class</inheritdoc>
        </member>
        <member name="M:JetBrains.PsiFeatures.VisualStudio.Core.Resources.PsiFeaturesVisualStudioCoreThemedIcons.FolderOpened2.Load_Color">
            <summary>Loads the image for Themed Icon FolderOpened2 theme aspect Color.</summary>
        </member>
        <member name="M:JetBrains.PsiFeatures.VisualStudio.Core.Resources.PsiFeaturesVisualStudioCoreThemedIcons.FolderOpened2.Load_Gray">
            <summary>Loads the image for Themed Icon FolderOpened2 theme aspect Gray.</summary>
        </member>
        <member name="M:JetBrains.PsiFeatures.VisualStudio.Core.Resources.PsiFeaturesVisualStudioCoreThemedIcons.FolderOpened2.Load_GrayDark">
            <summary>Loads the image for Themed Icon FolderOpened2 theme aspect GrayDark.</summary>
        </member>
        <member name="M:JetBrains.PsiFeatures.VisualStudio.Core.Resources.PsiFeaturesVisualStudioCoreThemedIcons.FolderOpened2.GetThemeImages">
            <summary>Returns the set of theme images for Themed Icon FolderOpened2.</summary>
        </member>
        <member name="T:JetBrains.PsiFeatures.VisualStudio.Core.Resources.PsiFeaturesVisualStudioCoreThemedIcons.GeneralOptionsPage">
             <summary>
            	<para>
            		<para>GeneralOptionsPage Themed Icon generated identifiers:</para>
            		<para>— <see cref="T:JetBrains.PsiFeatures.VisualStudio.Core.Resources.PsiFeaturesVisualStudioCoreThemedIcons.GeneralOptionsPage"></see> identifier class, for use in attributes, XAML, and generic parameters;</para>
            		<para>— <see cref="F:JetBrains.PsiFeatures.VisualStudio.Core.Resources.PsiFeaturesVisualStudioCoreThemedIcons.GeneralOptionsPage.Id"></see> identifier object, as a field in the identifier class, for use where an <see cref="T:JetBrains.UI.Icons.IconId"></see> value is expected.</para>
            		<para>
            			<code>
             XXXXXXXXXXXXXXXXXXXXXXXXXXXX    
             66~~~~~~~~~~~~~~~~~~~~~~~~66    
             ww========================ww    
             ww====                ====wwwwww
             bb====          !$$)  ====bb~~bb
             pp;;;;         !$$)   ;;;;pp==pp
             GG!!!!        !$$)    !!!!GG==GG
             AA!!!!   )$$!!$$)     !!!!AA;;AA
             mm////    )$$$$)      ////mm!!mm
             RR\\\\     )$$)       \\\\RR!!RR
             RR++++                ++++RR//RR
             DD++++++++++++++++++++++++DD//DD
             DDrrrrrrrrrrrrrrrrrrrrrrrrDD++DD
             DDDDDDDDDDDDDDDDDDDDDDDDDDDD++DD
                   88rrrrrrrrrrrrrrrrrrrrrr88
                   88888888888888888888888888
            </code>
            		</para>
            	</para>
            </summary>
            <remarks>
            	<para>For details on Themed Icons and their use, see Remarks on the outer class.</para>
            </remarks>
            <example>
            	<code>&lt;Image Source="{icons:ThemedIcon myres:PsiFeaturesVisualStudioCoreThemedIcons+GeneralOptionsPage}" /&gt;        &lt;!-- XAML --&gt;</code>
            </example>
            <example>
            	<code>[Item(Name="Sample", Icon=typeof(PsiFeaturesVisualStudioCoreThemedIcons.GeneralOptionsPage))]        // C# Type attribute</code>
            </example>
            <example>
            	<code>IconId iconid = PsiFeaturesVisualStudioCoreThemedIcons.GeneralOptionsPage.Id;        // IconId identifier object</code>
            </example>
            <example>
            	<code>themediconmanager.GetIcon&lt;PsiFeaturesVisualStudioCoreThemedIcons.GeneralOptionsPage&gt;()        // Icon image for rendering</code>
            </example>
        </member>
        <member name="F:JetBrains.PsiFeatures.VisualStudio.Core.Resources.PsiFeaturesVisualStudioCoreThemedIcons.GeneralOptionsPage.Id">
            <inheritdoc cref="T:JetBrains.PsiFeatures.VisualStudio.Core.Resources.PsiFeaturesVisualStudioCoreThemedIcons.GeneralOptionsPage">identifier class</inheritdoc>
        </member>
        <member name="M:JetBrains.PsiFeatures.VisualStudio.Core.Resources.PsiFeaturesVisualStudioCoreThemedIcons.GeneralOptionsPage.Load_Color">
            <summary>Loads the image for Themed Icon GeneralOptionsPage theme aspect Color.</summary>
        </member>
        <member name="M:JetBrains.PsiFeatures.VisualStudio.Core.Resources.PsiFeaturesVisualStudioCoreThemedIcons.GeneralOptionsPage.Load_Gray">
            <summary>Loads the image for Themed Icon GeneralOptionsPage theme aspect Gray.</summary>
        </member>
        <member name="M:JetBrains.PsiFeatures.VisualStudio.Core.Resources.PsiFeaturesVisualStudioCoreThemedIcons.GeneralOptionsPage.Load_GrayDark">
            <summary>Loads the image for Themed Icon GeneralOptionsPage theme aspect GrayDark.</summary>
        </member>
        <member name="M:JetBrains.PsiFeatures.VisualStudio.Core.Resources.PsiFeaturesVisualStudioCoreThemedIcons.GeneralOptionsPage.GetThemeImages">
            <summary>Returns the set of theme images for Themed Icon GeneralOptionsPage.</summary>
        </member>
        <member name="T:JetBrains.PsiFeatures.VisualStudio.Core.Resources.PsiFeaturesVisualStudioCoreThemedIcons.History">
             <summary>
            	<para>
            		<para>History Themed Icon generated identifiers:</para>
            		<para>— <see cref="T:JetBrains.PsiFeatures.VisualStudio.Core.Resources.PsiFeaturesVisualStudioCoreThemedIcons.History"></see> identifier class, for use in attributes, XAML, and generic parameters;</para>
            		<para>— <see cref="F:JetBrains.PsiFeatures.VisualStudio.Core.Resources.PsiFeaturesVisualStudioCoreThemedIcons.History.Id"></see> identifier object, as a field in the identifier class, for use where an <see cref="T:JetBrains.UI.Icons.IconId"></see> value is expected.</para>
            		<para>
            			<code>
             RRR7.    .;?7IaXX5}|+=_         
             RR^a#T^)PG{r!~:--_^!rlHH{~      
             RR``^aHt=``````````````^7dbr`   
             OO`````````~TtoEEj}T=`````!wU,  
             AA```````!wAAAAAAAAAAb7_```'SH" 
             GG````````~eGGGGGGGGGGGb!```-KH'
             HH``````````~oHHHHHHHHHHH+```=Ht
             dddddddddddddd        ddd6```.d4
             ab_```ybbbbbbb  bbbbbbbbb9```.b9
             |b!```/bbbbbbb  bbbbbbbbbc```~b[
             .6E-...+4wwwww  wwwwwwwwL...'5w-
              "6j-...^uwwwwwwwwwwwwu=...'Cw= 
               ,kV;...._+tuV44kut+_....^eZ~  
                `rha?"..............:+jX)`   
                  `={XaL!~,-..-:~;roXI!`     
                     `"!rTf2UU5C7?!^`        
            </code>
            		</para>
            	</para>
            </summary>
            <remarks>
            	<para>For details on Themed Icons and their use, see Remarks on the outer class.</para>
            </remarks>
            <example>
            	<code>&lt;Image Source="{icons:ThemedIcon myres:PsiFeaturesVisualStudioCoreThemedIcons+History}" /&gt;        &lt;!-- XAML --&gt;</code>
            </example>
            <example>
            	<code>[Item(Name="Sample", Icon=typeof(PsiFeaturesVisualStudioCoreThemedIcons.History))]        // C# Type attribute</code>
            </example>
            <example>
            	<code>IconId iconid = PsiFeaturesVisualStudioCoreThemedIcons.History.Id;        // IconId identifier object</code>
            </example>
            <example>
            	<code>themediconmanager.GetIcon&lt;PsiFeaturesVisualStudioCoreThemedIcons.History&gt;()        // Icon image for rendering</code>
            </example>
        </member>
        <member name="F:JetBrains.PsiFeatures.VisualStudio.Core.Resources.PsiFeaturesVisualStudioCoreThemedIcons.History.Id">
            <inheritdoc cref="T:JetBrains.PsiFeatures.VisualStudio.Core.Resources.PsiFeaturesVisualStudioCoreThemedIcons.History">identifier class</inheritdoc>
        </member>
        <member name="M:JetBrains.PsiFeatures.VisualStudio.Core.Resources.PsiFeaturesVisualStudioCoreThemedIcons.History.Load_Color">
            <summary>Loads the image for Themed Icon History theme aspect Color.</summary>
        </member>
        <member name="M:JetBrains.PsiFeatures.VisualStudio.Core.Resources.PsiFeaturesVisualStudioCoreThemedIcons.History.Load_Gray">
            <summary>Loads the image for Themed Icon History theme aspect Gray.</summary>
        </member>
        <member name="M:JetBrains.PsiFeatures.VisualStudio.Core.Resources.PsiFeaturesVisualStudioCoreThemedIcons.History.Load_GrayDark">
            <summary>Loads the image for Themed Icon History theme aspect GrayDark.</summary>
        </member>
        <member name="M:JetBrains.PsiFeatures.VisualStudio.Core.Resources.PsiFeaturesVisualStudioCoreThemedIcons.History.GetThemeImages">
            <summary>Returns the set of theme images for Themed Icon History.</summary>
        </member>
        <member name="T:JetBrains.PsiFeatures.VisualStudio.Core.Resources.PsiFeaturesVisualStudioCoreThemedIcons.NewFolder">
             <summary>
            	<para>
            		<para>NewFolder Themed Icon generated identifiers:</para>
            		<para>— <see cref="T:JetBrains.PsiFeatures.VisualStudio.Core.Resources.PsiFeaturesVisualStudioCoreThemedIcons.NewFolder"></see> identifier class, for use in attributes, XAML, and generic parameters;</para>
            		<para>— <see cref="F:JetBrains.PsiFeatures.VisualStudio.Core.Resources.PsiFeaturesVisualStudioCoreThemedIcons.NewFolder.Id"></see> identifier object, as a field in the identifier class, for use where an <see cref="T:JetBrains.UI.Icons.IconId"></see> value is expected.</para>
            		<para>
            			<code>
                                             
                              `"r????????????
                            `~T\_``````````TT
               ||||||||||||||L:------------||
               FF''''''''''''''''''''''''''FF
               CC''''''''''''''''''''''''''CC
               II__||||||||||||||||||||||__II
               55^_lCCCC1l1llllllllllllll__55
               YtCi}C^:C}tCtf[[[[[[[[[[[[::jj
              _}l__*1'`CL:'FtY22222222222""yy
             ;;ICC;``  ``=1C3YYSSSSSSSSSS~~PP
             CC::-``     ``::CCPPPPPPPPPP^^VV
             LL[CCL`    `+CC{55KKKKKKKKKK==kk
              'Yl,'=i.`l;'_FFL;;;;;;;;;;;;;ww
              `Et|fYC~_CYfiCu4XXXXXXXXXXXXXXX
                `_`'CCCC: _-                 
            </code>
            		</para>
            	</para>
            </summary>
            <remarks>
            	<para>For details on Themed Icons and their use, see Remarks on the outer class.</para>
            </remarks>
            <example>
            	<code>&lt;Image Source="{icons:ThemedIcon myres:PsiFeaturesVisualStudioCoreThemedIcons+NewFolder}" /&gt;        &lt;!-- XAML --&gt;</code>
            </example>
            <example>
            	<code>[Item(Name="Sample", Icon=typeof(PsiFeaturesVisualStudioCoreThemedIcons.NewFolder))]        // C# Type attribute</code>
            </example>
            <example>
            	<code>IconId iconid = PsiFeaturesVisualStudioCoreThemedIcons.NewFolder.Id;        // IconId identifier object</code>
            </example>
            <example>
            	<code>themediconmanager.GetIcon&lt;PsiFeaturesVisualStudioCoreThemedIcons.NewFolder&gt;()        // Icon image for rendering</code>
            </example>
        </member>
        <member name="F:JetBrains.PsiFeatures.VisualStudio.Core.Resources.PsiFeaturesVisualStudioCoreThemedIcons.NewFolder.Id">
            <inheritdoc cref="T:JetBrains.PsiFeatures.VisualStudio.Core.Resources.PsiFeaturesVisualStudioCoreThemedIcons.NewFolder">identifier class</inheritdoc>
        </member>
        <member name="M:JetBrains.PsiFeatures.VisualStudio.Core.Resources.PsiFeaturesVisualStudioCoreThemedIcons.NewFolder.Load_Color">
            <summary>Loads the image for Themed Icon NewFolder theme aspect Color.</summary>
        </member>
        <member name="M:JetBrains.PsiFeatures.VisualStudio.Core.Resources.PsiFeaturesVisualStudioCoreThemedIcons.NewFolder.Load_Gray">
            <summary>Loads the image for Themed Icon NewFolder theme aspect Gray.</summary>
        </member>
        <member name="M:JetBrains.PsiFeatures.VisualStudio.Core.Resources.PsiFeaturesVisualStudioCoreThemedIcons.NewFolder.Load_GrayDark">
            <summary>Loads the image for Themed Icon NewFolder theme aspect GrayDark.</summary>
        </member>
        <member name="M:JetBrains.PsiFeatures.VisualStudio.Core.Resources.PsiFeaturesVisualStudioCoreThemedIcons.NewFolder.GetThemeImages">
            <summary>Returns the set of theme images for Themed Icon NewFolder.</summary>
        </member>
        <member name="T:JetBrains.PsiFeatures.VisualStudio.Core.Resources.PsiFeaturesVisualStudioCoreThemedIcons.RuleCreate">
             <summary>
            	<para>
            		<para>RuleCreate Themed Icon generated identifiers:</para>
            		<para>— <see cref="T:JetBrains.PsiFeatures.VisualStudio.Core.Resources.PsiFeaturesVisualStudioCoreThemedIcons.RuleCreate"></see> identifier class, for use in attributes, XAML, and generic parameters;</para>
            		<para>— <see cref="F:JetBrains.PsiFeatures.VisualStudio.Core.Resources.PsiFeaturesVisualStudioCoreThemedIcons.RuleCreate.Id"></see> identifier object, as a field in the identifier class, for use where an <see cref="T:JetBrains.UI.Icons.IconId"></see> value is expected.</para>
            		<para>
            			<code>
                            `!o5+`           
                          `/5IrrIy+`         
                        `/yuL!!!!LuVr`       
                      `*Voc////////coEr`     
                    `+Pa|////=''=////|ahL`   
                  `+XVT++++;'    ';++++TV6L. 
                 r6k7++++!-        -!++++7k9c
                 idyTrrrr -"!    !"- rrrrTydF
                 llllllllLLLL    LLLLLL7VAx_ 
                 tt````ttcccc    ccccsE#I_   
             CCCCCC''''CCCCCC))))))lhRu_     
             II------------IITTTTt6Do_       
             oo____________oowFFw85:         
             eeeeee,,,,eeeeeeI88a:           
                 SS^^^^SS                    
                 kkkkkkkk                    
            </code>
            		</para>
            	</para>
            </summary>
            <remarks>
            	<para>For details on Themed Icons and their use, see Remarks on the outer class.</para>
            </remarks>
            <example>
            	<code>&lt;Image Source="{icons:ThemedIcon myres:PsiFeaturesVisualStudioCoreThemedIcons+RuleCreate}" /&gt;        &lt;!-- XAML --&gt;</code>
            </example>
            <example>
            	<code>[Item(Name="Sample", Icon=typeof(PsiFeaturesVisualStudioCoreThemedIcons.RuleCreate))]        // C# Type attribute</code>
            </example>
            <example>
            	<code>IconId iconid = PsiFeaturesVisualStudioCoreThemedIcons.RuleCreate.Id;        // IconId identifier object</code>
            </example>
            <example>
            	<code>themediconmanager.GetIcon&lt;PsiFeaturesVisualStudioCoreThemedIcons.RuleCreate&gt;()        // Icon image for rendering</code>
            </example>
        </member>
        <member name="F:JetBrains.PsiFeatures.VisualStudio.Core.Resources.PsiFeaturesVisualStudioCoreThemedIcons.RuleCreate.Id">
            <inheritdoc cref="T:JetBrains.PsiFeatures.VisualStudio.Core.Resources.PsiFeaturesVisualStudioCoreThemedIcons.RuleCreate">identifier class</inheritdoc>
        </member>
        <member name="M:JetBrains.PsiFeatures.VisualStudio.Core.Resources.PsiFeaturesVisualStudioCoreThemedIcons.RuleCreate.Load_Color">
            <summary>Loads the image for Themed Icon RuleCreate theme aspect Color.</summary>
        </member>
        <member name="M:JetBrains.PsiFeatures.VisualStudio.Core.Resources.PsiFeaturesVisualStudioCoreThemedIcons.RuleCreate.Load_Gray">
            <summary>Loads the image for Themed Icon RuleCreate theme aspect Gray.</summary>
        </member>
        <member name="M:JetBrains.PsiFeatures.VisualStudio.Core.Resources.PsiFeaturesVisualStudioCoreThemedIcons.RuleCreate.Load_GrayDark">
            <summary>Loads the image for Themed Icon RuleCreate theme aspect GrayDark.</summary>
        </member>
        <member name="M:JetBrains.PsiFeatures.VisualStudio.Core.Resources.PsiFeaturesVisualStudioCoreThemedIcons.RuleCreate.GetThemeImages">
            <summary>Returns the set of theme images for Themed Icon RuleCreate.</summary>
        </member>
        <member name="T:JetBrains.PsiFeatures.VisualStudio.Core.Resources.PsiFeaturesVisualStudioCoreThemedIcons.RuleDelete1">
             <summary>
            	<para>
            		<para>RuleDelete1 Themed Icon generated identifiers:</para>
            		<para>— <see cref="T:JetBrains.PsiFeatures.VisualStudio.Core.Resources.PsiFeaturesVisualStudioCoreThemedIcons.RuleDelete1"></see> identifier class, for use in attributes, XAML, and generic parameters;</para>
            		<para>— <see cref="F:JetBrains.PsiFeatures.VisualStudio.Core.Resources.PsiFeaturesVisualStudioCoreThemedIcons.RuleDelete1.Id"></see> identifier object, as a field in the identifier class, for use where an <see cref="T:JetBrains.UI.Icons.IconId"></see> value is expected.</para>
            		<para>
            			<code>
                            `!o5+`           
                          `/5IrrIy+`         
                        `/yuL!!!!LuVr`       
                      `*Voc////////coEr`     
                    `+Pa|////=''=////|ahL`   
                `=JO88t++++;'   -7ODDDITV6L. 
               _dH)!rkDx+!-  ,TE37V4t++++7k9c
               -hp+;;;iGV`rEbuLrVOc- rrrrTydF
                 ;Uac**rkboT*ckk^LLLLLL7VAx_ 
                   "VkTrrrrTkV"  ccccsE#I_   
                   ~}E{))))CwGl))))lhRu_     
                _|UytTTlSE[Tsap6Tt6Do_       
              =S6otJJtaX;,5UulChOB5:         
             }6ottt}2XF.   ,jX5Fj6)`         
             rXu{CoPE=       ,[UauVk;        
              ~lVZur`          :FZZZZ1_      
            </code>
            		</para>
            	</para>
            </summary>
            <remarks>
            	<para>For details on Themed Icons and their use, see Remarks on the outer class.</para>
            </remarks>
            <example>
            	<code>&lt;Image Source="{icons:ThemedIcon myres:PsiFeaturesVisualStudioCoreThemedIcons+RuleDelete1}" /&gt;        &lt;!-- XAML --&gt;</code>
            </example>
            <example>
            	<code>[Item(Name="Sample", Icon=typeof(PsiFeaturesVisualStudioCoreThemedIcons.RuleDelete1))]        // C# Type attribute</code>
            </example>
            <example>
            	<code>IconId iconid = PsiFeaturesVisualStudioCoreThemedIcons.RuleDelete1.Id;        // IconId identifier object</code>
            </example>
            <example>
            	<code>themediconmanager.GetIcon&lt;PsiFeaturesVisualStudioCoreThemedIcons.RuleDelete1&gt;()        // Icon image for rendering</code>
            </example>
        </member>
        <member name="F:JetBrains.PsiFeatures.VisualStudio.Core.Resources.PsiFeaturesVisualStudioCoreThemedIcons.RuleDelete1.Id">
            <inheritdoc cref="T:JetBrains.PsiFeatures.VisualStudio.Core.Resources.PsiFeaturesVisualStudioCoreThemedIcons.RuleDelete1">identifier class</inheritdoc>
        </member>
        <member name="M:JetBrains.PsiFeatures.VisualStudio.Core.Resources.PsiFeaturesVisualStudioCoreThemedIcons.RuleDelete1.Load_Color">
            <summary>Loads the image for Themed Icon RuleDelete1 theme aspect Color.</summary>
        </member>
        <member name="M:JetBrains.PsiFeatures.VisualStudio.Core.Resources.PsiFeaturesVisualStudioCoreThemedIcons.RuleDelete1.Load_Gray">
            <summary>Loads the image for Themed Icon RuleDelete1 theme aspect Gray.</summary>
        </member>
        <member name="M:JetBrains.PsiFeatures.VisualStudio.Core.Resources.PsiFeaturesVisualStudioCoreThemedIcons.RuleDelete1.Load_GrayDark">
            <summary>Loads the image for Themed Icon RuleDelete1 theme aspect GrayDark.</summary>
        </member>
        <member name="M:JetBrains.PsiFeatures.VisualStudio.Core.Resources.PsiFeaturesVisualStudioCoreThemedIcons.RuleDelete1.GetThemeImages">
            <summary>Returns the set of theme images for Themed Icon RuleDelete1.</summary>
        </member>
        <member name="T:JetBrains.PsiFeatures.VisualStudio.Core.Resources.PsiFeaturesVisualStudioCoreThemedIcons.RuleDelete2">
             <summary>
            	<para>
            		<para>RuleDelete2 Themed Icon generated identifiers:</para>
            		<para>— <see cref="T:JetBrains.PsiFeatures.VisualStudio.Core.Resources.PsiFeaturesVisualStudioCoreThemedIcons.RuleDelete2"></see> identifier class, for use in attributes, XAML, and generic parameters;</para>
            		<para>— <see cref="F:JetBrains.PsiFeatures.VisualStudio.Core.Resources.PsiFeaturesVisualStudioCoreThemedIcons.RuleDelete2.Id"></see> identifier object, as a field in the identifier class, for use where an <see cref="T:JetBrains.UI.Icons.IconId"></see> value is expected.</para>
            		<para>
            			<code>
                            `!o5+`           
                          `/5IrrIy+`         
                        `/yuL!!!!LuVr`       
                      `*Voc////////coEr`     
                    `+Pa|////=''=////|ahL`   
                `=JO88t++++;'   -7ODDDITV6L. 
               _dH)!rkDx+!-  ,TE37V4t++++7k9c
               -hp+;;;iGV`rEbuLrVOc- rrrrTydF
                 ;Uac**rkboT*ckk^LLLLLL7VAx_ 
                   "VkTrrrrTkV"  ccccsE#I_   
                   ~}E{))))CwGl))))lhRu_     
                _|UytTTlSE[Tsap6Tt6Do_       
              =S6otJJtaX;,5UulChOB5:         
             }6ottt}2XF.   ,jX5Fj6)`         
             rXu{CoPE=       ,[UauVk;        
              ~lVZur`          :FZZZZ1_      
            </code>
            		</para>
            	</para>
            </summary>
            <remarks>
            	<para>For details on Themed Icons and their use, see Remarks on the outer class.</para>
            </remarks>
            <example>
            	<code>&lt;Image Source="{icons:ThemedIcon myres:PsiFeaturesVisualStudioCoreThemedIcons+RuleDelete2}" /&gt;        &lt;!-- XAML --&gt;</code>
            </example>
            <example>
            	<code>[Item(Name="Sample", Icon=typeof(PsiFeaturesVisualStudioCoreThemedIcons.RuleDelete2))]        // C# Type attribute</code>
            </example>
            <example>
            	<code>IconId iconid = PsiFeaturesVisualStudioCoreThemedIcons.RuleDelete2.Id;        // IconId identifier object</code>
            </example>
            <example>
            	<code>themediconmanager.GetIcon&lt;PsiFeaturesVisualStudioCoreThemedIcons.RuleDelete2&gt;()        // Icon image for rendering</code>
            </example>
        </member>
        <member name="F:JetBrains.PsiFeatures.VisualStudio.Core.Resources.PsiFeaturesVisualStudioCoreThemedIcons.RuleDelete2.Id">
            <inheritdoc cref="T:JetBrains.PsiFeatures.VisualStudio.Core.Resources.PsiFeaturesVisualStudioCoreThemedIcons.RuleDelete2">identifier class</inheritdoc>
        </member>
        <member name="M:JetBrains.PsiFeatures.VisualStudio.Core.Resources.PsiFeaturesVisualStudioCoreThemedIcons.RuleDelete2.Load_Color">
            <summary>Loads the image for Themed Icon RuleDelete2 theme aspect Color.</summary>
        </member>
        <member name="M:JetBrains.PsiFeatures.VisualStudio.Core.Resources.PsiFeaturesVisualStudioCoreThemedIcons.RuleDelete2.Load_Gray">
            <summary>Loads the image for Themed Icon RuleDelete2 theme aspect Gray.</summary>
        </member>
        <member name="M:JetBrains.PsiFeatures.VisualStudio.Core.Resources.PsiFeaturesVisualStudioCoreThemedIcons.RuleDelete2.Load_GrayDark">
            <summary>Loads the image for Themed Icon RuleDelete2 theme aspect GrayDark.</summary>
        </member>
        <member name="M:JetBrains.PsiFeatures.VisualStudio.Core.Resources.PsiFeaturesVisualStudioCoreThemedIcons.RuleDelete2.GetThemeImages">
            <summary>Returns the set of theme images for Themed Icon RuleDelete2.</summary>
        </member>
        <member name="T:JetBrains.PsiFeatures.VisualStudio.Core.ExternalSources.ContextNavigation.GotoDeclarationVsDelegator">
            <summary>
            Allows to perform common VS goto definition (F12).
            </summary>
        </member>
        <member name="F:JetBrains.PsiFeatures.VisualStudio.Core.Intentions.QuickFixes.MVC.MvcUtilVS.ourUIAutiomationData">
            For MenuGroup guids look at <see cref="!:Microsoft.VisualStudio.Web.Mvc.Interop.MenuGuids"/>
            For IDs make lookup by some UI Automation tool
        </member>
        <member name="T:JetBrains.PsiFeatures.VisualStudio.Core.Interop.VsPsiLanguageAsxx">
            <summary>
            Until VS11 Asp, Html and Razor share the same language service.
            Since VS12 Html and Razor get a new language service, and Asp keeps the old one. <see cref="T:JetBrains.PsiFeatures.VisualStudio.Core.Interop.VsPsiLanguageHtml"/>
            </summary>
        </member>
        <member name="T:JetBrains.PsiFeatures.VisualStudio.Core.Interop.VsPsiLanguageAsp">
            <summary>
            Until VS11 Asp, Html and Razor share the same language service.
            Since VS12 Html and Razor get a new language service, and Asp keeps the old one. <see cref="T:JetBrains.PsiFeatures.VisualStudio.Core.Interop.VsPsiLanguageHtml"/>
            </summary>
        </member>
        <member name="T:JetBrains.PsiFeatures.VisualStudio.Core.Interop.IVsPsiLanguageJson">
            <summary>
            An interface for Json which is introduced in VS14.
            </summary>
        </member>
        <member name="T:JetBrains.PsiFeatures.VisualStudio.Core.Interop.IVsPsiLanguageJsx">
            <summary>
            An interface for JSX which is introduced in VS14.
            </summary>
        </member>
        <member name="T:JetBrains.PsiFeatures.VisualStudio.Core.Interop.IVsPsiLanguageTypeScript">
            <summary>
            An interface for TypeScript which is introduced in VS12.
            </summary>
        </member>
        <member name="M:JetBrains.PsiFeatures.VisualStudio.Core.Interop.VsPsiLanguages.#ctor(System.Collections.Generic.IEnumerable{JetBrains.PsiFeatures.VisualStudio.Core.Interop.IVsPsiLanguage})">
            <summary>
            (DK) Please note that one VS language could be associated with more than one R# Psi languages.
            </summary>
        </member>
        <member name="T:JetBrains.PsiFeatures.VisualStudio.Core.LocalHistory.UI.FileSystemHistoryItemView">
            <summary>
            Interaction logic for FileSystemHistoryItemView.xaml
            </summary>
            <summary>
            FileSystemHistoryItemView
            </summary>
        </member>
        <member name="M:JetBrains.PsiFeatures.VisualStudio.Core.LocalHistory.UI.FileSystemHistoryItemView.InitializeComponent">
            <summary>
            InitializeComponent
            </summary>
        </member>
        <member name="P:JetBrains.PsiFeatures.VisualStudio.Core.LocalHistory.Providers.FileSystem.FileSystemHistoryItem.IsReversible">
            <summary>
              Indicates whether this change is reversible. Project addition/removal are, for instance, irreversible changes.
            </summary>
        </member>
        <member name="T:JetBrains.PsiFeatures.VisualStudio.Core.Options.Intellisense.IntellisenseEnabledListView2">
            <summary>
            IntellisenseEnabledListView2
            </summary>
        </member>
        <member name="M:JetBrains.PsiFeatures.VisualStudio.Core.Options.Intellisense.IntellisenseEnabledListView2.InitializeComponent">
            <summary>
            InitializeComponent
            </summary>
        </member>
        <member name="F:JetBrains.PsiFeatures.VisualStudio.Core.ProjectModel.PropertiesExtender.WebProperties.UI.PathMappingControl.components">
            <summary> 
            Required designer variable.
            </summary>
        </member>
        <member name="M:JetBrains.PsiFeatures.VisualStudio.Core.ProjectModel.PropertiesExtender.WebProperties.UI.PathMappingControl.Dispose(System.Boolean)">
            <summary> 
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:JetBrains.PsiFeatures.VisualStudio.Core.ProjectModel.PropertiesExtender.WebProperties.UI.PathMappingControl.InitializeComponent">
            <summary> 
            Required method for Designer support - do not modify 
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="F:JetBrains.PsiFeatures.VisualStudio.Core.ProjectModel.PropertiesExtender.WebProperties.UI.SinglePathControl.components">
            <summary> 
            Required designer variable.
            </summary>
        </member>
        <member name="M:JetBrains.PsiFeatures.VisualStudio.Core.ProjectModel.PropertiesExtender.WebProperties.UI.SinglePathControl.Dispose(System.Boolean)">
            <summary> 
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:JetBrains.PsiFeatures.VisualStudio.Core.ProjectModel.PropertiesExtender.WebProperties.UI.SinglePathControl.InitializeComponent">
            <summary> 
            Required method for Designer support - do not modify 
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="F:JetBrains.PsiFeatures.VisualStudio.Core.ProjectModel.PropertiesExtender.WebProperties.UI.WebPathMappingForm.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:JetBrains.PsiFeatures.VisualStudio.Core.ProjectModel.PropertiesExtender.WebProperties.UI.WebPathMappingForm.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:JetBrains.PsiFeatures.VisualStudio.Core.ProjectModel.PropertiesExtender.WebProperties.UI.WebPathMappingForm.InitializeComponent(JetBrains.Application.Icons.IThemedIconManager)">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
            <param name="themedIconManager"> </param>
        </member>
        <member name="T:JetBrains.PsiFeatures.VisualStudio.Core.SolutionBuilder.VSWindowsTool.ActivityLogType">
            <summary>
            This enumeration declares the types of log entries that can be used for activity
            log. We use this types instead of __ACTIVITYLOG_ENTRYTYPE constants.
            </summary>
        </member>
        <member name="T:JetBrains.PsiFeatures.VisualStudio.Core.SolutionBuilder.VSWindowsTool.ActivityLogItem">
            <summary>
            This class defines an activity log entry with its all possible user defined
            properties.
            </summary>
        </member>
        <member name="M:JetBrains.PsiFeatures.VisualStudio.Core.SolutionBuilder.VSWindowsTool.ActivityLogItem.#ctor">
            <summary>
            Creates an empty log entry using default property values.
            </summary>
        </member>
        <member name="M:JetBrains.PsiFeatures.VisualStudio.Core.SolutionBuilder.VSWindowsTool.ActivityLogItem.#ctor(System.String)">
            <summary>
            Creates a log entry with the specified message.
            </summary>
            <param name="message">Message string</param>
        </member>
        <member name="M:JetBrains.PsiFeatures.VisualStudio.Core.SolutionBuilder.VSWindowsTool.ActivityLogItem.#ctor(System.String,System.String)">
            <summary>
            Creates a log entry with the specified source and message.
            </summary>
            <param name="source">Source string</param>
            <param name="message">Message string</param>
        </member>
        <member name="M:JetBrains.PsiFeatures.VisualStudio.Core.SolutionBuilder.VSWindowsTool.ActivityLogItem.#ctor(JetBrains.PsiFeatures.VisualStudio.Core.SolutionBuilder.VSWindowsTool.ActivityLogType,System.String)">
            <summary>
            Creates a log entry with the specified type and message.
            </summary>
            <param name="type">Type of the log entry</param>
            <param name="message">Message string</param>
        </member>
        <member name="M:JetBrains.PsiFeatures.VisualStudio.Core.SolutionBuilder.VSWindowsTool.ActivityLogItem.#ctor(JetBrains.PsiFeatures.VisualStudio.Core.SolutionBuilder.VSWindowsTool.ActivityLogType,System.String,System.String)">
            <summary>
            Creates a log entry with the specified type, source and message.
            </summary>
            <param name="type">Type of the log entry</param>
            <param name="source">Source string</param>
            <param name="message">Message string</param>
        </member>
        <member name="P:JetBrains.PsiFeatures.VisualStudio.Core.SolutionBuilder.VSWindowsTool.ActivityLogItem.Guid">
            <summary>
            Gets or sets the PaneGUID of the log entry.
            </summary>
        </member>
        <member name="P:JetBrains.PsiFeatures.VisualStudio.Core.SolutionBuilder.VSWindowsTool.ActivityLogItem.Hr">
            <summary>
            Gets or sets the HRESULT of the log entry.
            </summary>
        </member>
        <member name="P:JetBrains.PsiFeatures.VisualStudio.Core.SolutionBuilder.VSWindowsTool.ActivityLogItem.Message">
            <summary>
            Gets or sets the message of the log entry.
            </summary>
        </member>
        <member name="P:JetBrains.PsiFeatures.VisualStudio.Core.SolutionBuilder.VSWindowsTool.ActivityLogItem.Path">
            <summary>
            Gets or sets the path of the log entry.
            </summary>
        </member>
        <member name="P:JetBrains.PsiFeatures.VisualStudio.Core.SolutionBuilder.VSWindowsTool.ActivityLogItem.Source">
            <summary>
            Gets or sets the source of the log entry.
            </summary>
        </member>
        <member name="P:JetBrains.PsiFeatures.VisualStudio.Core.SolutionBuilder.VSWindowsTool.ActivityLogItem.Type">
            <summary>
            Gets or sets the type of the log entry.
            </summary>
        </member>
        <member name="T:JetBrains.PsiFeatures.VisualStudio.Core.SolutionBuilder.VSWindowsTool.ActivityLog">
            <summary>
            This static class provides methods to create VS activity log entries.
            </summary>
        </member>
        <member name="M:JetBrains.PsiFeatures.VisualStudio.Core.SolutionBuilder.VSWindowsTool.ActivityLog.Print(JetBrains.PsiFeatures.VisualStudio.Core.SolutionBuilder.VSWindowsTool.ActivityLogItem)">
            <summary>
            Creates an activity logentry by the specified ActivityLogItem instance.
            </summary>
            <param name="item">Instance describing the log enrty properties</param>
        </member>
        <member name="M:JetBrains.PsiFeatures.VisualStudio.Core.SolutionBuilder.VSWindowsTool.ActivityLog.Print(System.String,System.String)">
            <summary>
            Creates an activity log entry with the specified source and message.
            </summary>
            <param name="source">Event source</param>
            <param name="message">Event message</param>
        </member>
        <member name="M:JetBrains.PsiFeatures.VisualStudio.Core.SolutionBuilder.VSWindowsTool.ActivityLog.Print(System.String,System.String,System.Guid)">
            <summary>
            Creates an activity log entry with the specified source, message and PaneGUID.
            </summary>
            <param name="source">Event source</param>
            <param name="message">Event message</param>
            <param name="guid">PaneGUID of the entry</param>
        </member>
        <member name="M:JetBrains.PsiFeatures.VisualStudio.Core.SolutionBuilder.VSWindowsTool.ActivityLog.Print(System.String,System.String,System.Guid,System.Int32)">
            <summary>
            Creates an activity log entry with the specified source, message, PaneGUID 
            and HRESULT.
            </summary>
            <param name="source">Event source</param>
            <param name="message">Event message</param>
            <param name="guid">PaneGUID of the entry</param>
            <param name="hr">HRESULT of the entry</param>
        </member>
        <member name="M:JetBrains.PsiFeatures.VisualStudio.Core.SolutionBuilder.VSWindowsTool.ActivityLog.Print(System.String,System.String,System.Int32)">
            <summary>
            Creates an activity log entry with the specified source, message and HRESULT.
            </summary>
            <param name="source">Event source</param>
            <param name="message">Event message</param>
            <param name="hr">HRESULT of the entry</param>
        </member>
        <member name="M:JetBrains.PsiFeatures.VisualStudio.Core.SolutionBuilder.VSWindowsTool.ActivityLog.Print(System.String,System.String,System.Guid,System.Int32,System.String)">
            <summary>
            Creates an activity log entry with the specified source, message, PaneGUID, 
            HRESULT and path.
            </summary>
            <param name="source">Event source</param>
            <param name="message">Event message</param>
            <param name="guid">PaneGUID of the entry</param>
            <param name="hr">HRESULT of the entry</param>
            <param name="path">Path of the message</param>
        </member>
        <member name="M:JetBrains.PsiFeatures.VisualStudio.Core.SolutionBuilder.VSWindowsTool.ActivityLog.Print(System.String,System.String,System.Guid,System.String)">
            <summary>
            Creates an activity log entry with the specified source, message, PaneGUID
            and path.
            </summary>
            <param name="source">Event source</param>
            <param name="message">Event message</param>
            <param name="guid">PaneGUID of the entry</param>
            <param name="path">Path of the message</param>
        </member>
        <member name="M:JetBrains.PsiFeatures.VisualStudio.Core.SolutionBuilder.VSWindowsTool.ActivityLog.Print(System.String,System.String,System.Int32,System.String)">
            <summary>
            Creates an activity log entry with the specified source, message, HRESULT 
            and path.
            </summary>
            <param name="source">Event source</param>
            <param name="message">Event message</param>
            <param name="hr">HRESULT of the entry</param>
            <param name="path">Path of the message</param>
        </member>
        <member name="M:JetBrains.PsiFeatures.VisualStudio.Core.SolutionBuilder.VSWindowsTool.ActivityLog.Print(System.String,System.String,System.String)">
            <summary>
            Creates an activity log entry with the specified source, message and path.
            </summary>
            <param name="source">Event source</param>
            <param name="message">Event message</param>
            <param name="path">Path of the message</param>
        </member>
        <member name="M:JetBrains.PsiFeatures.VisualStudio.Core.SolutionBuilder.VSWindowsTool.ActivityLog.Print(JetBrains.PsiFeatures.VisualStudio.Core.SolutionBuilder.VSWindowsTool.ActivityLogType,System.String,System.String)">
            <summary>
            Creates an activity log entry with the specified type, source and message.
            </summary>
            <param name="type">Entry type</param>
            <param name="source">Event source</param>
            <param name="message">Event message</param>
        </member>
        <member name="M:JetBrains.PsiFeatures.VisualStudio.Core.SolutionBuilder.VSWindowsTool.ActivityLog.Print(JetBrains.PsiFeatures.VisualStudio.Core.SolutionBuilder.VSWindowsTool.ActivityLogType,System.String,System.String,System.Guid)">
            <summary>
            Creates an activity log entry with the specified type, source, message 
            and PaneGUID.
            </summary>
            <param name="type">Entry type</param>
            <param name="source">Event source</param>
            <param name="message">Event message</param>
            <param name="guid">PaneGUID of the entry</param>
        </member>
        <member name="M:JetBrains.PsiFeatures.VisualStudio.Core.SolutionBuilder.VSWindowsTool.ActivityLog.Print(JetBrains.PsiFeatures.VisualStudio.Core.SolutionBuilder.VSWindowsTool.ActivityLogType,System.String,System.String,System.Guid,System.Int32)">
            <summary>
            Creates an activity log entry with the specified type, source, message, PaneGUID 
            and HRESULT.
            </summary>
            <param name="type">Entry type</param>
            <param name="source">Event source</param>
            <param name="message">Event message</param>
            <param name="guid">PaneGUID of the entry</param>
            <param name="hr">HRESULT of the entry</param>
        </member>
        <member name="M:JetBrains.PsiFeatures.VisualStudio.Core.SolutionBuilder.VSWindowsTool.ActivityLog.Print(JetBrains.PsiFeatures.VisualStudio.Core.SolutionBuilder.VSWindowsTool.ActivityLogType,System.String,System.String,System.Int32)">
            <summary>
            Creates an activity log entry with the specified type, source, message 
            and HRESULT.
            </summary>
            <param name="type">Entry type</param>
            <param name="source">Event source</param>
            <param name="message">Event message</param>
            <param name="hr">HRESULT of the entry</param>
        </member>
        <member name="M:JetBrains.PsiFeatures.VisualStudio.Core.SolutionBuilder.VSWindowsTool.ActivityLog.Print(JetBrains.PsiFeatures.VisualStudio.Core.SolutionBuilder.VSWindowsTool.ActivityLogType,System.String,System.String,System.Guid,System.Int32,System.String)">
            <summary>
            Creates an activity log entry with the specified type, source, message, PaneGUID, 
            HRESULT and path.
            </summary>
            <param name="type">Entry type</param>
            <param name="source">Event source</param>
            <param name="message">Event message</param>
            <param name="guid">PaneGUID of the entry</param>
            <param name="hr">HRESULT of the entry</param>
            <param name="path">Path of the message</param>
        </member>
        <member name="M:JetBrains.PsiFeatures.VisualStudio.Core.SolutionBuilder.VSWindowsTool.ActivityLog.Print(JetBrains.PsiFeatures.VisualStudio.Core.SolutionBuilder.VSWindowsTool.ActivityLogType,System.String,System.String,System.Guid,System.String)">
            <summary>
            Creates an activity log entry with the specified type, source, message, PaneGUID
            and path.
            </summary>
            <param name="type">Entry type</param>
            <param name="source">Event source</param>
            <param name="message">Event message</param>
            <param name="guid">PaneGUID of the entry</param>
            <param name="path">Path of the message</param>
        </member>
        <member name="M:JetBrains.PsiFeatures.VisualStudio.Core.SolutionBuilder.VSWindowsTool.ActivityLog.Print(JetBrains.PsiFeatures.VisualStudio.Core.SolutionBuilder.VSWindowsTool.ActivityLogType,System.String,System.String,System.Int32,System.String)">
            <summary>
            Creates an activity log entry with the specified type, source, message, HRESULT 
            and path.
            </summary>
            <param name="type">Entry type</param>
            <param name="source">Event source</param>
            <param name="message">Event message</param>
            <param name="hr">HRESULT of the entry</param>
            <param name="path">Path of the message</param>
        </member>
        <member name="M:JetBrains.PsiFeatures.VisualStudio.Core.SolutionBuilder.VSWindowsTool.ActivityLog.Print(JetBrains.PsiFeatures.VisualStudio.Core.SolutionBuilder.VSWindowsTool.ActivityLogType,System.String,System.String,System.String)">
            <summary>
            Creates an activity log entry with the specified type, source, message 
            and path.
            </summary>
            <param name="type">Entry type</param>
            <param name="source">Event source</param>
            <param name="message">Event message</param>
            <param name="path">Path of the message</param>
        </member>
        <member name="T:JetBrains.PsiFeatures.VisualStudio.Core.SolutionBuilder.VSWindowsTool.Core.BoolAttribute">
            <summary>
            This abstract class defines an attribute with a simple boolean value.
            </summary>
            <remarks>
            The class is intended to derive new attributes having a simple bool value. 
            Do not use this class to add other properties to the attribute!
            </remarks>
        </member>
        <member name="M:JetBrains.PsiFeatures.VisualStudio.Core.SolutionBuilder.VSWindowsTool.Core.BoolAttribute.#ctor(System.Boolean)">
            <summary>
            Creates a new instance of this attribute and sets its initial value.
            </summary>
            <param name="value">Initial attribute value.</param>
        </member>
        <member name="P:JetBrains.PsiFeatures.VisualStudio.Core.SolutionBuilder.VSWindowsTool.Core.BoolAttribute.Value">
            <summary>
            Gets the value of this attribute.
            </summary>
        </member>
        <member name="M:JetBrains.PsiFeatures.VisualStudio.Core.SolutionBuilder.VSWindowsTool.Core.LaunchPadHelper.ParsePlainStringForTaskItem(System.String,System.String[]@,System.UInt32[]@,System.String[]@,System.Int32[]@)">
            <summary>
            parse string and save its details in out parameters
            </summary>
            <param name="buildMessage">message to parse</param>
            <param name="fileName"></param>
            <param name="lineNumber"></param>
            <param name="taskItemText"></param>
            <param name="taskItemFound"></param>
            <returns></returns>
        </member>
        <member name="T:JetBrains.PsiFeatures.VisualStudio.Core.SolutionBuilder.VSWindowsTool.Core.OutputPaneHandling">
            <summary>
            This class defines how output window pane exceptions should be handled.
            </summary>
        </member>
        <member name="F:JetBrains.PsiFeatures.VisualStudio.Core.SolutionBuilder.VSWindowsTool.Core.OutputPaneHandling.Silent">
            <summary>
            Exceptions should be caught and never raised.
            </summary>
        </member>
        <member name="F:JetBrains.PsiFeatures.VisualStudio.Core.SolutionBuilder.VSWindowsTool.Core.OutputPaneHandling.ThrowException">
            <summary>
            Exceptions should be raised.
            </summary>
        </member>
        <member name="F:JetBrains.PsiFeatures.VisualStudio.Core.SolutionBuilder.VSWindowsTool.Core.OutputPaneHandling.RedirectToGeneral">
            <summary>
            In case of exceptions, output should be redirected to the General pane.
            </summary>
        </member>
        <member name="F:JetBrains.PsiFeatures.VisualStudio.Core.SolutionBuilder.VSWindowsTool.Core.OutputPaneHandling.RedirectToDebug">
            <summary>
            In case of exceptions, output should be redirected to the Debug pane.
            </summary>
        </member>
        <member name="T:JetBrains.PsiFeatures.VisualStudio.Core.SolutionBuilder.VSWindowsTool.Core.StringAttribute">
            <summary>
            This abstract class defines an attribute with a simple string value.
            </summary>
            <remarks>
            The class is intended to derive new attributes having a simple string value. 
            Do not use this class to add other properties to the attribute!
            </remarks>
        </member>
        <member name="M:JetBrains.PsiFeatures.VisualStudio.Core.SolutionBuilder.VSWindowsTool.Core.StringAttribute.#ctor(System.String)">
            <summary>
            Creates a new instance of this attribute and sets its initial value.
            </summary>
            <param name="value">Initial attribute value.</param>
        </member>
        <member name="P:JetBrains.PsiFeatures.VisualStudio.Core.SolutionBuilder.VSWindowsTool.Core.StringAttribute.Value">
            <summary>
            Gets the value of this attribute.
            </summary>
        </member>
        <member name="T:JetBrains.PsiFeatures.VisualStudio.Core.SolutionBuilder.VSWindowsTool.Core.WindowPaneNotFoundException">
            <summary>
            This class defines an exception describing that a Windows pane has not been found.
            </summary>
        </member>
        <member name="M:JetBrains.PsiFeatures.VisualStudio.Core.SolutionBuilder.VSWindowsTool.Core.WindowPaneNotFoundException.#ctor(System.String)">
            <summary>
            Creates a new instance of the exception with the specified message.
            </summary>
            <param name="message">Exception message</param>
        </member>
        <member name="M:JetBrains.PsiFeatures.VisualStudio.Core.SolutionBuilder.VSWindowsTool.Core.WindowPaneNotFoundException.#ctor(System.Type)">
            <summary>
            Creates a new instance of the exception with a message related to the specified
            type.
            </summary>
            <param name="type">Type related to the exception</param>
        </member>
        <member name="M:JetBrains.PsiFeatures.VisualStudio.Core.SolutionBuilder.VSWindowsTool.Core.WindowPaneNotFoundException.#ctor(System.Type,System.Exception)">
            <summary>
            Creates a new instance of the exception with a message related to the specified
            type and an inner exception..
            </summary>
            <param name="type">Type related to the exception</param>
            <param name="innerException">Inner exception instance.</param>
        </member>
        <member name="M:JetBrains.PsiFeatures.VisualStudio.Core.SolutionBuilder.VSWindowsTool.Core.WindowPaneNotFoundException.#ctor(System.String,System.Exception)">
            <summary>
            Creates a new instance of the exception with the specified message and inner
            exception.
            </summary>
            <param name="message">Exception message</param>
            <param name="innerException">Inner exception instance.</param>
        </member>
        <member name="M:JetBrains.PsiFeatures.VisualStudio.Core.SolutionBuilder.VSWindowsTool.Core.WindowPaneNotFoundException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Deserialization constructor for the exception instance.
            </summary>
            <param name="info">Serialization information</param>
            <param name="context">Streaming context information</param>
        </member>
        <member name="M:JetBrains.PsiFeatures.VisualStudio.Core.SolutionBuilder.VSWindowsTool.Core.WindowPaneNotFoundException.MessageString(System.Type)">
            <summary>
            Creates a message string for the specified type.
            </summary>
            <param name="type">Type to create a message for.</param>
            <returns>Exception message.</returns>
        </member>
        <member name="T:JetBrains.PsiFeatures.VisualStudio.Core.SolutionBuilder.VSWindowsTool.PaneNameAttribute">
            <summary>
            This attribute declares the name of the output window pane.
            </summary>
        </member>
        <member name="T:JetBrains.PsiFeatures.VisualStudio.Core.SolutionBuilder.VSWindowsTool.InitiallyVisibleAttribute">
            <summary>
            This attribute declares the initial visibility of the output window pane.
            </summary>
        </member>
        <member name="T:JetBrains.PsiFeatures.VisualStudio.Core.SolutionBuilder.VSWindowsTool.ClearWithSolutionAttribute">
            <summary>
            This attribute declares if the output window pane should be cleared when the
            current solutiopn is closed.
            </summary>
        </member>
        <member name="T:JetBrains.PsiFeatures.VisualStudio.Core.SolutionBuilder.VSWindowsTool.ThreadSafeAttribute">
            <summary>
            This attribute declares if writes to the output window panes should be thread 
            safe or not.
            </summary>
        </member>
        <member name="T:JetBrains.PsiFeatures.VisualStudio.Core.SolutionBuilder.VSWindowsTool.OutputPaneDefinition">
            <summary>
            This abstract class is intended to be a base class for uotput window pane 
            definitions.
            </summary>
        </member>
        <member name="M:JetBrains.PsiFeatures.VisualStudio.Core.SolutionBuilder.VSWindowsTool.OutputPaneDefinition.#ctor">
            <summary>
            Creates an instance of the class by obtaining the attributes decorating the 
            class.
            </summary>
        </member>
        <member name="P:JetBrains.PsiFeatures.VisualStudio.Core.SolutionBuilder.VSWindowsTool.OutputPaneDefinition.ClearWithSolution">
            <summary>
            Gets the flag indicating if the output window pane is to be cleared when the
            current solution is closed.
            </summary>
        </member>
        <member name="P:JetBrains.PsiFeatures.VisualStudio.Core.SolutionBuilder.VSWindowsTool.OutputPaneDefinition.InitiallyVisible">
            <summary>
            Gets the flag indicating if the output window pane is initially visible or not.
            </summary>
        </member>
        <member name="P:JetBrains.PsiFeatures.VisualStudio.Core.SolutionBuilder.VSWindowsTool.OutputPaneDefinition.IsSilent">
            <summary>
            Gets or internally sets the flag indicating if this output window pane is a 
            silent pane or not.
            </summary>
            <remarks>
            Silent panes do not provide output.
            </remarks>
        </member>
        <member name="P:JetBrains.PsiFeatures.VisualStudio.Core.SolutionBuilder.VSWindowsTool.OutputPaneDefinition.Name">
            <summary>
            Gets the default name of the output window pane.
            </summary>
        </member>
        <member name="P:JetBrains.PsiFeatures.VisualStudio.Core.SolutionBuilder.VSWindowsTool.OutputPaneDefinition.PaneGUID">
            <summary>
            Gets the PaneGUID of the output window pane.
            </summary>
        </member>
        <member name="P:JetBrains.PsiFeatures.VisualStudio.Core.SolutionBuilder.VSWindowsTool.OutputPaneDefinition.ThreadSafe">
            <summary>
            Gets the flag indicating if writes to the output window pane are thread safe
            or not.
            </summary>
        </member>
        <member name="T:JetBrains.PsiFeatures.VisualStudio.Core.SolutionBuilder.VSWindowsTool.OutputWindowAdapter">
            <summary>
            This static class is responsible for obtaining built-in output window panen and
            managing (creating, obtaining and deleting) window panes through output pane 
            definition types.
            </summary>
        </member>
        <member name="P:JetBrains.PsiFeatures.VisualStudio.Core.SolutionBuilder.VSWindowsTool.OutputWindowAdapter.Build">
            <summary>
            Gets the Build window pane instance.
            </summary>
        </member>
        <member name="P:JetBrains.PsiFeatures.VisualStudio.Core.SolutionBuilder.VSWindowsTool.OutputWindowAdapter.Debug">
            <summary>
            Gets the Debug window pane instance.
            </summary>
        </member>
        <member name="P:JetBrains.PsiFeatures.VisualStudio.Core.SolutionBuilder.VSWindowsTool.OutputWindowAdapter.General">
            <summary>
            Gets the General window pane instance.
            </summary>
        </member>
        <member name="P:JetBrains.PsiFeatures.VisualStudio.Core.SolutionBuilder.VSWindowsTool.OutputWindowAdapter.OutputPaneHandling">
            <summary>
            This property defines how output pane management exceptions should be handled.
            </summary>
        </member>
        <member name="P:JetBrains.PsiFeatures.VisualStudio.Core.SolutionBuilder.VSWindowsTool.OutputWindowAdapter.Silent">
            <summary>
            Gets a virtual output window pane that does not show any output.
            </summary>
        </member>
        <member name="M:JetBrains.PsiFeatures.VisualStudio.Core.SolutionBuilder.VSWindowsTool.OutputWindowAdapter.CreatePane(System.Type)">
            <summary>
            Creates an output window pane according to the specified definition type.
            </summary>
            <param name="type">Pane definition type.</param>
            <returns>
            The newly created window pane.
            </returns>
            <remarks>
            The pane definition type should be a type deriving from WindowPaneDefinition.
            </remarks>
        </member>
        <member name="M:JetBrains.PsiFeatures.VisualStudio.Core.SolutionBuilder.VSWindowsTool.OutputWindowAdapter.GetPane(System.Type)">
            <summary>
            Gets the output window pane according to the specified definition type.
            </summary>
            <param name="type">Pane definition type.</param>
            <returns>
            The newly created window pane.
            </returns>
            <remarks>
            The pane definition type should be a type deriving from WindowPaneDefinition.
            </remarks>
        </member>
        <member name="M:JetBrains.PsiFeatures.VisualStudio.Core.SolutionBuilder.VSWindowsTool.OutputWindowAdapter.RemovePane(System.Type)">
            <summary>
            Deletes an output window pane according to the specified definition type.
            </summary>
            <param name="type">Pane definition type.</param>
            <returns>
            True, if the window pane is successfully deleted; otherwise, false.
            </returns>
            <remarks>
            The pane definition type should be a type deriving from WindowPaneDefinition.
            </remarks>
        </member>
        <member name="M:JetBrains.PsiFeatures.VisualStudio.Core.SolutionBuilder.VSWindowsTool.OutputWindowAdapter.CreatePaneDefinition(System.Type)">
            <summary>
            Creates a pane definition type instance.
            </summary>
            <param name="type">Pane definition type.</param>
            <returns>
            Pane definition instance.
            </returns>
        </member>
        <member name="M:JetBrains.PsiFeatures.VisualStudio.Core.SolutionBuilder.VSWindowsTool.OutputWindowAdapter.CreateWindowPane(JetBrains.PsiFeatures.VisualStudio.Core.SolutionBuilder.VSWindowsTool.OutputPaneDefinition)">
            <summary>
            Creates an output window pane by using the SVsOutputWindow service.
            </summary>
            <param name="paneDef">Pane definition instance.</param>
            <returns>HRESULT indicating the success or failure.</returns>
        </member>
        <member name="M:JetBrains.PsiFeatures.VisualStudio.Core.SolutionBuilder.VSWindowsTool.OutputWindowAdapter.DeleteWindowPane(JetBrains.PsiFeatures.VisualStudio.Core.SolutionBuilder.VSWindowsTool.OutputPaneDefinition)">
            <summary>
            Deletes an output window pane by using the SVsOutputWindow service.
            </summary>
            <param name="paneDef">Pane definition instance.</param>
            <returns>HRESULT indicating the success or failure.</returns>
        </member>
        <member name="M:JetBrains.PsiFeatures.VisualStudio.Core.SolutionBuilder.VSWindowsTool.OutputWindowAdapter.GetWindowPane(JetBrains.PsiFeatures.VisualStudio.Core.SolutionBuilder.VSWindowsTool.OutputPaneDefinition,Microsoft.VisualStudio.Shell.Interop.IVsOutputWindowPane@)">
            <summary>
            Gets an output window pane by using the SVsOutputWindow service.
            </summary>
            <param name="paneDef">Pane definition instance.</param>
            <param name="pane">Pane instance</param>
            <returns>HRESULT indicating the success or failure.</returns>
        </member>
        <member name="M:JetBrains.PsiFeatures.VisualStudio.Core.SolutionBuilder.VSWindowsTool.OutputWindowAdapter.HandleError(System.Type)">
            <summary>
            Handles the error related to the specified window pane definition type.
            </summary>
            <param name="type">Window pane definition type.</param>
            <returns>
            Output window pane to redirect the output to.
            </returns>
        </member>
        <member name="P:JetBrains.PsiFeatures.VisualStudio.Core.SolutionBuilder.VSWindowsTool.OutputWindowAdapter.OutputWindowInstance">
            <summary>
            Gets the SVsOutputWindow service instance.
            </summary>
        </member>
        <member name="T:JetBrains.PsiFeatures.VisualStudio.Core.SolutionBuilder.VSWindowsTool.OutputWindowAdapter.BuildPane">
            <summary>
            This class is a definition for the Build output window pane.
            </summary>
        </member>
        <member name="T:JetBrains.PsiFeatures.VisualStudio.Core.SolutionBuilder.VSWindowsTool.OutputWindowAdapter.DebugPane">
            <summary>
            This class is a definition for the Debug output window pane.
            </summary>
        </member>
        <member name="T:JetBrains.PsiFeatures.VisualStudio.Core.SolutionBuilder.VSWindowsTool.OutputWindowAdapter.GeneralPane">
            <summary>
            This class is a definition for the General output window pane.
            </summary>
        </member>
        <member name="T:JetBrains.PsiFeatures.VisualStudio.Core.SolutionBuilder.VSWindowsTool.OutputWindowAdapter.SilentPane">
            <summary>
            This class is a definition for the Silent virtual output window pane.
            </summary>
        </member>
        <member name="T:JetBrains.PsiFeatures.VisualStudio.Core.SolutionBuilder.VSWindowsTool.OutputWindowPaneAdapter">
            <summary>
            This class is a wrapper class around an IVsOutputWindowPane instance to manage
            output handling for the window pane.
            </summary>
        </member>
        <member name="M:JetBrains.PsiFeatures.VisualStudio.Core.SolutionBuilder.VSWindowsTool.OutputWindowPaneAdapter.#ctor(JetBrains.PsiFeatures.VisualStudio.Core.SolutionBuilder.VSWindowsTool.OutputPaneDefinition,Microsoft.VisualStudio.Shell.Interop.IVsOutputWindowPane)">
            <summary>
            Creates an output pane instance using the specified output pane definition and 
            IVsOutputWindowPane instance.
            </summary>
            <param name="paneDef">Pane definition instance</param>
            <param name="pane">Physical output window pane</param>
            <remarks>
            This constructor is to be used only by the OutputWindowAdapter class.
            </remarks>
        </member>
        <member name="P:JetBrains.PsiFeatures.VisualStudio.Core.SolutionBuilder.VSWindowsTool.OutputWindowPaneAdapter.DTEPane">
            <summary>
            represent DTE2 output pane 
            </summary>
        </member>
        <member name="P:JetBrains.PsiFeatures.VisualStudio.Core.SolutionBuilder.VSWindowsTool.OutputWindowPaneAdapter.IsVirtual">
            <summary>
            Checks if this output pane is virtual or not.
            </summary>
        </member>
        <member name="P:JetBrains.PsiFeatures.VisualStudio.Core.SolutionBuilder.VSWindowsTool.OutputWindowPaneAdapter.Name">
            <summary>
            Gets or sets the name of the output window pane.
            </summary>
        </member>
        <member name="P:JetBrains.PsiFeatures.VisualStudio.Core.SolutionBuilder.VSWindowsTool.OutputWindowPaneAdapter.ThreadSafe">
            <summary>
            Gets or sets the flag indicating if writes to the output window pane are 
            thread safe or not.
            </summary>
        </member>
        <member name="M:JetBrains.PsiFeatures.VisualStudio.Core.SolutionBuilder.VSWindowsTool.OutputWindowPaneAdapter.Activate">
            <summary>
            Activates this output window pane, shows the pane in the output window.
            </summary>
        </member>
        <member name="M:JetBrains.PsiFeatures.VisualStudio.Core.SolutionBuilder.VSWindowsTool.OutputWindowPaneAdapter.Hide">
            <summary>
            Hides this output window pane, undisplays it in the output window.
            </summary>
        </member>
        <member name="M:JetBrains.PsiFeatures.VisualStudio.Core.SolutionBuilder.VSWindowsTool.OutputWindowPaneAdapter.Clear">
            <summary>
            Clears the content of the output window pane.
            </summary>
        </member>
        <member name="M:JetBrains.PsiFeatures.VisualStudio.Core.SolutionBuilder.VSWindowsTool.OutputWindowPaneAdapter.Print(System.String)">
            <summary>
            Writes the specified string to the output of this window pane.
            </summary>
            <param name="output">String to send to the output.</param>
            <remarks>
            This operation is thread safe or not according to the ThreadSafe property. If
            the output window pane is silent, output is not send to any physical pane.
            </remarks>
        </member>
        <member name="M:JetBrains.PsiFeatures.VisualStudio.Core.SolutionBuilder.VSWindowsTool.OutputWindowPaneAdapter.Print(System.String,System.Object[])">
            <summary>
            Writes the specified formatted string to the output of this window pane.
            </summary>
            <param name="format">Format string to describe the output.</param>
            <param name="parameters">
            Parameters to be substituted into the format string.
            </param>
            <remarks>
            This operation is thread safe or not according to the ThreadSafe property. If
            the output window pane is silent, format is not send to any physical pane.
            </remarks>
        </member>
        <member name="M:JetBrains.PsiFeatures.VisualStudio.Core.SolutionBuilder.VSWindowsTool.OutputWindowPaneAdapter.Print(System.IFormatProvider,System.String,System.Object[])">
            <summary>
            Writes the specified formatted string using the specified provider to the 
            output of this window pane.
            </summary>
            <param name="provider">Format provider</param>
            <param name="format">Format string to describe the output.</param>
            <param name="parameters">
            Parameters to be substituted into the format string.
            </param>
            <remarks>
            This operation is thread safe or not according to the ThreadSafe property. If
            the output window pane is silent, format is not send to any physical pane.
            </remarks>
        </member>
        <member name="M:JetBrains.PsiFeatures.VisualStudio.Core.SolutionBuilder.VSWindowsTool.OutputWindowPaneAdapter.PrintLine(System.String)">
            <summary>
            Writes the specified string and a new line character to the output of this 
            window pane.
            </summary>
            <param name="output">String to send to the output.</param>
            <remarks>
            This operation is thread safe or not according to the ThreadSafe property. If
            the output window pane is silent, output is not send to any physical pane.
            </remarks>
        </member>
        <member name="M:JetBrains.PsiFeatures.VisualStudio.Core.SolutionBuilder.VSWindowsTool.OutputWindowPaneAdapter.AddErrorListItem(System.String)">
            <summary>
            Add specifiedn formatted string to output and parse the string 
            for check its line and other properties for putting it to the error list window
            </summary>
            <param name="output">>String to send to the output.</param>
        </member>
        <member name="M:JetBrains.PsiFeatures.VisualStudio.Core.SolutionBuilder.VSWindowsTool.OutputWindowPaneAdapter.PrintLine(System.String,System.Object[])">
            <summary>
            Writes the specified formatted string and a new line character to the output 
            of this window pane.
            </summary>
            <param name="format">Format string to describe the output.</param>
            <param name="parameters">
            Parameters to be substituted into the format string.
            </param>
            <remarks>
            This operation is thread safe or not according to the ThreadSafe property. If
            the output window pane is silent, format is not send to any physical pane.
            </remarks>
        </member>
        <member name="M:JetBrains.PsiFeatures.VisualStudio.Core.SolutionBuilder.VSWindowsTool.OutputWindowPaneAdapter.PrintLine(System.IFormatProvider,System.String,System.Object[])">
            <summary>
            Writes the specified formatted string and a new line character using the 
            specified provider to the output of this window pane.
            </summary>
            <param name="provider">Format provider</param>
            <param name="format">Format string to describe the output.</param>
            <param name="parameters">
            Parameters to be substituted into the format string.
            </param>
            <remarks>
            This operation is thread safe or not according to the ThreadSafe property. If
            the output window pane is silent, format is not send to any physical pane.
            </remarks>
        </member>
        <member name="M:JetBrains.PsiFeatures.VisualStudio.Core.SolutionBuilder.VSWindowsTool.OutputWindowPaneAdapter.OutputString(System.String)">
            <summary>
            Outputs the specified string to this window pane.
            </summary>
            <param name="output">String to send to the output.</param>
        </member>
        <member name="M:JetBrains.PsiFeatures.VisualStudio.Core.SolutionBuilder.VSWindowsTool.VSVirtualOutputImpl.OutputTaskItemStringEx2(System.String,Microsoft.VisualStudio.Shell.Interop.VSTASKPRIORITY,Microsoft.VisualStudio.Shell.Interop.VSTASKCATEGORY,System.String,System.Int32,System.String,System.UInt32,System.UInt32,System.String,System.String,System.String)">
            <summary>
            now not implemented interface
            cause the supported VS is 2005
            </summary>
        </member>
        <member name="T:JetBrains.PsiFeatures.VisualStudio.Core.MSTest.MSTestAccessorReferenceProvider.MsTestAccessorProjectHandler">
            <summary>
            For every '.accessor' file add and reference corresponding DLLs
            </summary>
        </member>
        <member name="F:JetBrains.PsiFeatures.VisualStudio.Core.ReSharperMisbehaves.AdvertiseSubmitFeedbackForm.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:JetBrains.PsiFeatures.VisualStudio.Core.ReSharperMisbehaves.AdvertiseSubmitFeedbackForm.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:JetBrains.PsiFeatures.VisualStudio.Core.ReSharperMisbehaves.AdvertiseSubmitFeedbackForm.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="T:JetBrains.PsiFeatures.VisualStudio.Core.Services.Core.SymbolIcons.VsPsiSymbolIconThemeSettingsLoader">
            <summary>
            Loads and publishes as the theme aspect the psi symbol icon theme settings.
            </summary>
        </member>
        <member name="T:JetBrains.PsiFeatures.VisualStudio.Core.TextControl.FormatSettings.EditorConfigToolWindowView">
            <summary>
            EditorConfigToolWindowView
            </summary>
        </member>
        <member name="M:JetBrains.PsiFeatures.VisualStudio.Core.TextControl.FormatSettings.EditorConfigToolWindowView.InitializeComponent">
            <summary>
            InitializeComponent
            </summary>
        </member>
        <member name="T:JetBrains.PsiFeatures.VisualStudio.Core.TextControl.Intellisense.IntellisenseIsDisabledIfVsContainsReadonlyRegions">
            <summary>
            Detect the situation when current text control contains readonly regions, thus R# completion should be disabled and fallbacked to VS completion.
            </summary>
            When VS debugger is standing at breakpoint and text control contains method calls from the current call stack, VS marks these calls as readonly regions.
            In such a case R# code completion couldn't be applied to the document while VS code completion is disabled by R#, so the user has no completion at all.
            This component is designed to trigger two actions:
            - disable R# code completion and parameter info <see cref="T:JetBrains.ReSharper.Feature.Services.CodeCompletion.IntellisenseManager"/>, <see cref="T:JetBrains.ReSharper.Feature.Services.ParameterInfo.ParameterInfoPopupController"/>;
            - enable VS code completion and parameter info.
        </member>
        <member name="M:JetBrains.PsiFeatures.VisualStudio.Core.TextControl.Intellisense.QuickInfoHighlighterItem.IsColorIdentifier(JetBrains.TextControl.DocumentMarkup.IHighlighter)">
            <summary>
            Try to determine whether the highlighter is a color identifier (whose tooltip contains element information, xml doc and exceptions).
            </summary>
        </member>
        <member name="T:JetBrains.PsiFeatures.VisualStudio.Core.TextControl.ReSharperCppFeatureSuggester.ReSharperCpp16x16">
             <summary>
            		<para>ReSharperCpp16x16 Themed Icon generated identifiers:</para>
            		<para>
            			<code>
                      `:,,,,,,""^~===;!;     
                      -",,,,"^~~==;!!//+-    
                 $$$$$$$$$$$$$$$$$$$$$$$$    
                 $$     `-\R$$$$$$$` $$$$_   
               .,$$  S$8w- "$$$$$``  ``$$r   
             ?yEE$$  =rr= `2$$$` $$` $$$$T,  
             "EEk$$  "r" `R$$``  ``$$$$$$iT  
              xkV$$  l$$T `1$$$` $$$$$$$$}C" 
              "a5$$$$$$$$$$$$$$$$$$$$$$$$IuF 
               lu$$$$$$$$$$$$$$$$$$$$$$$$jay~
               "x$$$$$$$$$$$$$$$$$$$$$$$$T77L
                T$$          $$$$$$$$$$$$    
                ,$$$$$$$$$$$$$$$$$$$$$$$$    
                 $$$$$$$$$$$$$$$$$$$$$$$$    
                 _?rrr++//!!==~~^"_          
                  /r++/!!!==~~^"",,`         
            </code>
            		</para>
            	<para>
             (DK) A copy-paste of JetBrains.ReSharper.CppProduct.Resources.ReSharperCppUIThemedIcons.ReSharperCpp16x16 (we cannot use it from here).
             Don't forget to change if the branding is changed.
            	</para>
            </summary>
        </member>
        <member name="P:JetBrains.PsiFeatures.VisualStudio.Core.UnitTesting.IVsDebuggerFacade.DebugMode">
            <summary>
            Current state of VS debugger. See <a href="http://msdn.microsoft.com/en-us/library/Microsoft.VisualStudio.Shell.Interop.DBGMODE.aspx">here</a>
            </summary>
        </member>
        <member name="P:JetBrains.PsiFeatures.VisualStudio.Core.UnitTesting.IVsDebuggerFacade.Debugger">
            <summary>
            Raw access to VS debugger. Must be lazy.
            </summary>
        </member>
        <member name="T:JetBrains.PsiFeatures.VisualStudio.Core.Src.ProjectModel.PropertiesExtender.WebProperties.UI.PathMappingControlThemedIcons">
             <summary>
            	<para>
            		<para>Autogenerated identifier classes and identifier objects to Themed Icons registered with <see cref="T:JetBrains.Application.Icons.IThemedIconManager"></see>.</para>
            		<para>Identifier classes should be used in attributes, XAML, or generic parameters. Where an <see cref="T:JetBrains.UI.Icons.IconId"></see> value is expected, use the identifier object in the <c>Id</c> field of the identifier class.</para>
            	</para>
            </summary>
            <remarks>
            	<para>This code was compile-time generated to support Themed Icons in the JetBrains application.</para>
            	<para>It has two primary goals: load the icons of this assembly to be registered with <see cref="T:JetBrains.Application.Icons.IThemedIconManager"></see> so that they were WPF-accessible and theme-sensitive; and emit early-bound accessors for referencing icons in codebehind in a compile-time-validated manner.</para>
            	<h1>XAML</h1>
            	<para>For performance reasons, the icons are not individually exposed with application resources. There is a custom markup extension to bind an image source in markup.</para>
            	<para>To use an icon from XAML, set an <see cref="T:System.Windows.Media.ImageSource"></see> property to the <see cref="T:System.CodeDom.CodeTypeReference"></see> markup extension, which takes an icon identifier class (nested in <see cref="T:JetBrains.PsiFeatures.VisualStudio.Core.Src.ProjectModel.PropertiesExtender.WebProperties.UI.PathMappingControlThemedIcons"></see> class) as a parameter.</para>
            	<para>Example:</para>
            	<code>&lt;Image Source="{icons:ThemedIcon myres:PathMappingControlThemedIcons+Trinity}" /&gt;</code>
            	<h1>Attributes</h1>
            	<para>Sometimes you have to reference an icon from a type attriute when you're defining objects in code. Typical examples are Options pages and Tool Windows.</para>
            	<para>To avoid the use of string IDs which are not validated very well, we've emitted identifier classes to be used with <c>typeof()</c> expression, one per each icon. Use the attribute overload which takes a <see cref="T:System.Type"></see> for an image, and choose your icon class from nested classes in the <see cref="T:JetBrains.PsiFeatures.VisualStudio.Core.Src.ProjectModel.PropertiesExtender.WebProperties.UI.PathMappingControlThemedIcons"></see> class.</para>
            	<para>Example:</para>
            	<code>[Item(Name="Sample", Icon=typeof(PathMappingControlThemedIcons.Trinity))]</code>
            	<h1>CodeBehind</h1>
            	<para>In codebehind, we have two distinct tasks: (a) specify some icon in the APIs and (b) render icon images onscreen.</para>
            	<para>On the APIs stage you should only manipulate icon identifier objects (of type <see cref="T:JetBrains.UI.Icons.IconId"></see>, statically defined in <see cref="T:JetBrains.PsiFeatures.VisualStudio.Core.Src.ProjectModel.PropertiesExtender.WebProperties.UI.PathMappingControlThemedIcons"></see> in <c>Id</c> fields). Icon identifier classes (nested in <see cref="T:JetBrains.PsiFeatures.VisualStudio.Core.Src.ProjectModel.PropertiesExtender.WebProperties.UI.PathMappingControlThemedIcons"></see>) should be turned into icon identifier objects as early as possible. Rendering is about getting an <see cref="T:System.Windows.Media.ImageSource"></see> to assign to WPF, or <see cref="T:System.Drawing.Bitmap"></see> to use with GDI+ / Windows Forms.</para>
            	<para>You should turn an identifier object into a rendered image as late as possible. The identifier is static and lightweight and does not depend on the current theme, while the image is themed and has to be loaded or generated/rasterized. You need an <see cref="T:JetBrains.Application.Icons.IThemedIconManager"></see> instance to get the image out of an icon identifier object. Once you got the image, you should take care to change it with theme changes — either by using a live image property, or by listening to the theme change event. See <see cref="T:JetBrains.Application.Icons.IThemedIconManager"></see> and its extensions for the related facilities.</para>
            	<para>Example:</para>
            	<code>// Getting IconId identifier object to use with APIs
            IconId iconid = PathMappingControlThemedIcons.Trinity.Id;</code>
            	<code>// Getting IconId out of an Icon Identifier Class type
            IconId iconid = new JetBrains.Application.Icons.CompiledIconsCs.CompiledIconCsId(typeof(PathMappingControlThemedIcons.Trinity));</code>
            	<code>// Getting image for screen rendering by IconId
            themediconmanager.Icons[icnoid]</code>
            	<code>// Getting image for screen rendering by Icon Identifier Class
            themediconmanager.GetIcon&lt;PathMappingControlThemedIcons.Trinity&gt;()</code>
            	<h1>Icons Origin</h1>
            	<para>This code was generated by a pre-compile build task from a set of input files which are XAML files adhering to a certain convention, as convenient for exporting them from the Illustrator workspace, plus separate PNG files with raster icons. In the projects, these files are designated with <c>ThemedIconsXamlV3</c> and <c>ThemedIconPng</c> build actions and do not themselves get into the output assembly. All of such files are processed, vector images for different themes of the same icon are split and combined into the single list of icons in this assembly. This list is then written into the genearted XAML file (compiled into BAML within assembly), and serves as the source for this generated code.</para>
            </remarks>
        </member>
        <member name="T:JetBrains.PsiFeatures.VisualStudio.Core.Src.ProjectModel.PropertiesExtender.WebProperties.UI.PathMappingControlThemedIcons.PathMappingRuleCreate">
             <summary>
            	<para>
            		<para>PathMappingRuleCreate Themed Icon generated identifiers:</para>
            		<para>— <see cref="T:JetBrains.PsiFeatures.VisualStudio.Core.Src.ProjectModel.PropertiesExtender.WebProperties.UI.PathMappingControlThemedIcons.PathMappingRuleCreate"></see> identifier class, for use in attributes, XAML, and generic parameters;</para>
            		<para>— <see cref="F:JetBrains.PsiFeatures.VisualStudio.Core.Src.ProjectModel.PropertiesExtender.WebProperties.UI.PathMappingControlThemedIcons.PathMappingRuleCreate.Id"></see> identifier object, as a field in the identifier class, for use where an <see cref="T:JetBrains.UI.Icons.IconId"></see> value is expected.</para>
            		<para>
            			<code>
                          _*_                
                          .:.                
                :r: `.-,~!+r+!~,-.` :r:      
                  -=!\rLr+rcLr?Lr/!=-        
                `."+r)~`` "|" ``^cr+".`      
                '^/|~`~T" "T" `..``..'`      
                _+rc,   '"_.``_====!Lt^      
             lr~+7zslttt;---` -!_```~t!-!l^  
                ,Lc|"    `` ``_=-```=t~      
                -=r{~ `-"=;!;=;!_```=[L======
                `'=Tlx=`_=-```````````````~JJ
                  :rc7=-^!_````````.......=JJ
                =u= `'--^!Lt}}t}~``.!oCJJJJJJ
                          `-` -=_``.=J"      
                          =u= -=_``.=J"      
                              -=rJJJJJ"      
            </code>
            		</para>
            	</para>
            </summary>
            <remarks>
            	<para>For details on Themed Icons and their use, see Remarks on the outer class.</para>
            </remarks>
            <example>
            	<code>&lt;Image Source="{icons:ThemedIcon myres:PathMappingControlThemedIcons+PathMappingRuleCreate}" /&gt;        &lt;!-- XAML --&gt;</code>
            </example>
            <example>
            	<code>[Item(Name="Sample", Icon=typeof(PathMappingControlThemedIcons.PathMappingRuleCreate))]        // C# Type attribute</code>
            </example>
            <example>
            	<code>IconId iconid = PathMappingControlThemedIcons.PathMappingRuleCreate.Id;        // IconId identifier object</code>
            </example>
            <example>
            	<code>themediconmanager.GetIcon&lt;PathMappingControlThemedIcons.PathMappingRuleCreate&gt;()        // Icon image for rendering</code>
            </example>
        </member>
        <member name="F:JetBrains.PsiFeatures.VisualStudio.Core.Src.ProjectModel.PropertiesExtender.WebProperties.UI.PathMappingControlThemedIcons.PathMappingRuleCreate.Id">
            <inheritdoc cref="T:JetBrains.PsiFeatures.VisualStudio.Core.Src.ProjectModel.PropertiesExtender.WebProperties.UI.PathMappingControlThemedIcons.PathMappingRuleCreate">identifier class</inheritdoc>
        </member>
        <member name="M:JetBrains.PsiFeatures.VisualStudio.Core.Src.ProjectModel.PropertiesExtender.WebProperties.UI.PathMappingControlThemedIcons.PathMappingRuleCreate.Load_Default">
            <summary>Loads the image for Themed Icon PathMappingRuleCreate theme aspect Default.</summary>
        </member>
        <member name="M:JetBrains.PsiFeatures.VisualStudio.Core.Src.ProjectModel.PropertiesExtender.WebProperties.UI.PathMappingControlThemedIcons.PathMappingRuleCreate.GetThemeImages">
            <summary>Returns the set of theme images for Themed Icon PathMappingRuleCreate.</summary>
        </member>
        <member name="T:JetBrains.PsiFeatures.VisualStudio.Core.Src.ProjectModel.PropertiesExtender.WebProperties.UI.PathMappingControlThemedIcons.PathMappingRuleDelete1">
             <summary>
            	<para>
            		<para>PathMappingRuleDelete1 Themed Icon generated identifiers:</para>
            		<para>— <see cref="T:JetBrains.PsiFeatures.VisualStudio.Core.Src.ProjectModel.PropertiesExtender.WebProperties.UI.PathMappingControlThemedIcons.PathMappingRuleDelete1"></see> identifier class, for use in attributes, XAML, and generic parameters;</para>
            		<para>— <see cref="F:JetBrains.PsiFeatures.VisualStudio.Core.Src.ProjectModel.PropertiesExtender.WebProperties.UI.PathMappingControlThemedIcons.PathMappingRuleDelete1.Id"></see> identifier object, as a field in the identifier class, for use where an <see cref="T:JetBrains.UI.Icons.IconId"></see> value is expected.</para>
            		<para>
            			<code>
                                             
                                             
                                             
                                             
                    `...``     ``.-"'        
                    `.` `.`````.` ."'        
                     ``.` `...` ."-`         
                       ``.`   ."-`           
                       ``.`   ."-`           
                     ``.` .""". ."-`         
                    `.` ."-```-". ."'        
                    '"""-`     `-"""'        
                                             
                                             
                                             
                                             
            </code>
            		</para>
            	</para>
            </summary>
            <remarks>
            	<para>For details on Themed Icons and their use, see Remarks on the outer class.</para>
            </remarks>
            <example>
            	<code>&lt;Image Source="{icons:ThemedIcon myres:PathMappingControlThemedIcons+PathMappingRuleDelete1}" /&gt;        &lt;!-- XAML --&gt;</code>
            </example>
            <example>
            	<code>[Item(Name="Sample", Icon=typeof(PathMappingControlThemedIcons.PathMappingRuleDelete1))]        // C# Type attribute</code>
            </example>
            <example>
            	<code>IconId iconid = PathMappingControlThemedIcons.PathMappingRuleDelete1.Id;        // IconId identifier object</code>
            </example>
            <example>
            	<code>themediconmanager.GetIcon&lt;PathMappingControlThemedIcons.PathMappingRuleDelete1&gt;()        // Icon image for rendering</code>
            </example>
        </member>
        <member name="F:JetBrains.PsiFeatures.VisualStudio.Core.Src.ProjectModel.PropertiesExtender.WebProperties.UI.PathMappingControlThemedIcons.PathMappingRuleDelete1.Id">
            <inheritdoc cref="T:JetBrains.PsiFeatures.VisualStudio.Core.Src.ProjectModel.PropertiesExtender.WebProperties.UI.PathMappingControlThemedIcons.PathMappingRuleDelete1">identifier class</inheritdoc>
        </member>
        <member name="M:JetBrains.PsiFeatures.VisualStudio.Core.Src.ProjectModel.PropertiesExtender.WebProperties.UI.PathMappingControlThemedIcons.PathMappingRuleDelete1.Load_Default">
            <summary>Loads the image for Themed Icon PathMappingRuleDelete1 theme aspect Default.</summary>
        </member>
        <member name="M:JetBrains.PsiFeatures.VisualStudio.Core.Src.ProjectModel.PropertiesExtender.WebProperties.UI.PathMappingControlThemedIcons.PathMappingRuleDelete1.GetThemeImages">
            <summary>Returns the set of theme images for Themed Icon PathMappingRuleDelete1.</summary>
        </member>
        <member name="T:JetBrains.PsiFeatures.VisualStudio.Core.Src.ProjectModel.PropertiesExtender.WebProperties.UI.PathMappingControlThemedIcons.PathMappingRuleDelete2">
             <summary>
            	<para>
            		<para>PathMappingRuleDelete2 Themed Icon generated identifiers:</para>
            		<para>— <see cref="T:JetBrains.PsiFeatures.VisualStudio.Core.Src.ProjectModel.PropertiesExtender.WebProperties.UI.PathMappingControlThemedIcons.PathMappingRuleDelete2"></see> identifier class, for use in attributes, XAML, and generic parameters;</para>
            		<para>— <see cref="F:JetBrains.PsiFeatures.VisualStudio.Core.Src.ProjectModel.PropertiesExtender.WebProperties.UI.PathMappingControlThemedIcons.PathMappingRuleDelete2.Id"></see> identifier object, as a field in the identifier class, for use where an <see cref="T:JetBrains.UI.Icons.IconId"></see> value is expected.</para>
            		<para>
            			<code>
                                             
                                             
                                             
                                             
                     ````       ``.-`        
                     `   ``   ``   -`        
                      ``   ```   -`          
                        ``     -`            
                        ``     -`            
                      ``   ---   -`          
                     `   -`   `-   -`        
                    `---`       `---`        
                                             
                                             
                                             
                                             
            </code>
            		</para>
            	</para>
            </summary>
            <remarks>
            	<para>For details on Themed Icons and their use, see Remarks on the outer class.</para>
            </remarks>
            <example>
            	<code>&lt;Image Source="{icons:ThemedIcon myres:PathMappingControlThemedIcons+PathMappingRuleDelete2}" /&gt;        &lt;!-- XAML --&gt;</code>
            </example>
            <example>
            	<code>[Item(Name="Sample", Icon=typeof(PathMappingControlThemedIcons.PathMappingRuleDelete2))]        // C# Type attribute</code>
            </example>
            <example>
            	<code>IconId iconid = PathMappingControlThemedIcons.PathMappingRuleDelete2.Id;        // IconId identifier object</code>
            </example>
            <example>
            	<code>themediconmanager.GetIcon&lt;PathMappingControlThemedIcons.PathMappingRuleDelete2&gt;()        // Icon image for rendering</code>
            </example>
        </member>
        <member name="F:JetBrains.PsiFeatures.VisualStudio.Core.Src.ProjectModel.PropertiesExtender.WebProperties.UI.PathMappingControlThemedIcons.PathMappingRuleDelete2.Id">
            <inheritdoc cref="T:JetBrains.PsiFeatures.VisualStudio.Core.Src.ProjectModel.PropertiesExtender.WebProperties.UI.PathMappingControlThemedIcons.PathMappingRuleDelete2">identifier class</inheritdoc>
        </member>
        <member name="M:JetBrains.PsiFeatures.VisualStudio.Core.Src.ProjectModel.PropertiesExtender.WebProperties.UI.PathMappingControlThemedIcons.PathMappingRuleDelete2.Load_Default">
            <summary>Loads the image for Themed Icon PathMappingRuleDelete2 theme aspect Default.</summary>
        </member>
        <member name="M:JetBrains.PsiFeatures.VisualStudio.Core.Src.ProjectModel.PropertiesExtender.WebProperties.UI.PathMappingControlThemedIcons.PathMappingRuleDelete2.GetThemeImages">
            <summary>Returns the set of theme images for Themed Icon PathMappingRuleDelete2.</summary>
        </member>
        <member name="T:JetBrains.PsiFeatures.VisualStudio.Core.Src.ProjectModel.PropertiesExtender.WebProperties.UI.PathMappingControlThemedIcons.PathMappingRuleIgnore">
             <summary>
            	<para>
            		<para>PathMappingRuleIgnore Themed Icon generated identifiers:</para>
            		<para>— <see cref="T:JetBrains.PsiFeatures.VisualStudio.Core.Src.ProjectModel.PropertiesExtender.WebProperties.UI.PathMappingControlThemedIcons.PathMappingRuleIgnore"></see> identifier class, for use in attributes, XAML, and generic parameters;</para>
            		<para>— <see cref="F:JetBrains.PsiFeatures.VisualStudio.Core.Src.ProjectModel.PropertiesExtender.WebProperties.UI.PathMappingControlThemedIcons.PathMappingRuleIgnore.Id"></see> identifier object, as a field in the identifier class, for use where an <see cref="T:JetBrains.UI.Icons.IconId"></see> value is expected.</para>
            		<para>
            			<code>
                                             
                                             
                                             
                                             
                                             
                                             
                   ```            ````       
                  `````    `````  `````      
                  `...` ```````   `...`      
                  `..--''-'.`     `-..`      
                   `.--_--`    ``---.`       
                    ``-___________-``        
                      ``.--___--.``          
                                             
                                             
                                             
            </code>
            		</para>
            	</para>
            </summary>
            <remarks>
            	<para>For details on Themed Icons and their use, see Remarks on the outer class.</para>
            </remarks>
            <example>
            	<code>&lt;Image Source="{icons:ThemedIcon myres:PathMappingControlThemedIcons+PathMappingRuleIgnore}" /&gt;        &lt;!-- XAML --&gt;</code>
            </example>
            <example>
            	<code>[Item(Name="Sample", Icon=typeof(PathMappingControlThemedIcons.PathMappingRuleIgnore))]        // C# Type attribute</code>
            </example>
            <example>
            	<code>IconId iconid = PathMappingControlThemedIcons.PathMappingRuleIgnore.Id;        // IconId identifier object</code>
            </example>
            <example>
            	<code>themediconmanager.GetIcon&lt;PathMappingControlThemedIcons.PathMappingRuleIgnore&gt;()        // Icon image for rendering</code>
            </example>
        </member>
        <member name="F:JetBrains.PsiFeatures.VisualStudio.Core.Src.ProjectModel.PropertiesExtender.WebProperties.UI.PathMappingControlThemedIcons.PathMappingRuleIgnore.Id">
            <inheritdoc cref="T:JetBrains.PsiFeatures.VisualStudio.Core.Src.ProjectModel.PropertiesExtender.WebProperties.UI.PathMappingControlThemedIcons.PathMappingRuleIgnore">identifier class</inheritdoc>
        </member>
        <member name="M:JetBrains.PsiFeatures.VisualStudio.Core.Src.ProjectModel.PropertiesExtender.WebProperties.UI.PathMappingControlThemedIcons.PathMappingRuleIgnore.Load_Default">
            <summary>Loads the image for Themed Icon PathMappingRuleIgnore theme aspect Default.</summary>
        </member>
        <member name="M:JetBrains.PsiFeatures.VisualStudio.Core.Src.ProjectModel.PropertiesExtender.WebProperties.UI.PathMappingControlThemedIcons.PathMappingRuleIgnore.GetThemeImages">
            <summary>Returns the set of theme images for Themed Icon PathMappingRuleIgnore.</summary>
        </member>
        <member name="T:JetBrains.PsiFeatures.VisualStudio.Core.Src.ProjectModel.PropertiesExtender.WebProperties.UI.PathMappingControlThemedIcons.PathMappingRuleSubstitute">
             <summary>
            	<para>
            		<para>PathMappingRuleSubstitute Themed Icon generated identifiers:</para>
            		<para>— <see cref="T:JetBrains.PsiFeatures.VisualStudio.Core.Src.ProjectModel.PropertiesExtender.WebProperties.UI.PathMappingControlThemedIcons.PathMappingRuleSubstitute"></see> identifier class, for use in attributes, XAML, and generic parameters;</para>
            		<para>— <see cref="F:JetBrains.PsiFeatures.VisualStudio.Core.Src.ProjectModel.PropertiesExtender.WebProperties.UI.PathMappingControlThemedIcons.PathMappingRuleSubstitute.Id"></see> identifier object, as a field in the identifier class, for use where an <see cref="T:JetBrains.UI.Icons.IconId"></see> value is expected.</para>
            		<para>
            			<code>
                                             
                              -!".`          
                              ,)J1!'`        
                    "7T|||))cLc), ~3!'`      
                    ~3~ `.'---------!I~      
                    ~F1333333333!-!3/-`      
                              ~333\-`        
                    `."!-     "7/,.          
                  `'^+)l^                    
                `'^+_ "lTLc))|||T7"          
                ~];.'-------'.` ~3~          
                `-!}\,*FC]1II3331F~          
                  `-!ltC~                    
                    .,/7"                    
                                             
                                             
            </code>
            		</para>
            	</para>
            </summary>
            <remarks>
            	<para>For details on Themed Icons and their use, see Remarks on the outer class.</para>
            </remarks>
            <example>
            	<code>&lt;Image Source="{icons:ThemedIcon myres:PathMappingControlThemedIcons+PathMappingRuleSubstitute}" /&gt;        &lt;!-- XAML --&gt;</code>
            </example>
            <example>
            	<code>[Item(Name="Sample", Icon=typeof(PathMappingControlThemedIcons.PathMappingRuleSubstitute))]        // C# Type attribute</code>
            </example>
            <example>
            	<code>IconId iconid = PathMappingControlThemedIcons.PathMappingRuleSubstitute.Id;        // IconId identifier object</code>
            </example>
            <example>
            	<code>themediconmanager.GetIcon&lt;PathMappingControlThemedIcons.PathMappingRuleSubstitute&gt;()        // Icon image for rendering</code>
            </example>
        </member>
        <member name="F:JetBrains.PsiFeatures.VisualStudio.Core.Src.ProjectModel.PropertiesExtender.WebProperties.UI.PathMappingControlThemedIcons.PathMappingRuleSubstitute.Id">
            <inheritdoc cref="T:JetBrains.PsiFeatures.VisualStudio.Core.Src.ProjectModel.PropertiesExtender.WebProperties.UI.PathMappingControlThemedIcons.PathMappingRuleSubstitute">identifier class</inheritdoc>
        </member>
        <member name="M:JetBrains.PsiFeatures.VisualStudio.Core.Src.ProjectModel.PropertiesExtender.WebProperties.UI.PathMappingControlThemedIcons.PathMappingRuleSubstitute.Load_Default">
            <summary>Loads the image for Themed Icon PathMappingRuleSubstitute theme aspect Default.</summary>
        </member>
        <member name="M:JetBrains.PsiFeatures.VisualStudio.Core.Src.ProjectModel.PropertiesExtender.WebProperties.UI.PathMappingControlThemedIcons.PathMappingRuleSubstitute.GetThemeImages">
            <summary>Returns the set of theme images for Themed Icon PathMappingRuleSubstitute.</summary>
        </member>
    </members>
</doc>
