<?xml version="1.0"?>
<doc>
    <assembly>
        <name>JetBrains.ReSharper.Diagramming.Features</name>
    </assembly>
    <members>
        <member name="M:JetBrains.ReSharper.Features.Diagramming.BuildScript.Compile.ObfuscationServerInfo.#ctor(System.String,System.String,System.Uri)">
            <inheritdoc />
        </member>
        <member name="M:JetBrains.ReSharper.Features.Diagramming.BuildScript.Compile.ObfuscationServerInfo.#ctor(System.String)">
            <inheritdoc />
        </member>
        <member name="T:JetBrains.ReSharper.Features.Diagramming.BuildScript.Compile.ObfuscateWhyWorksTransformSubplatformFilesForPackaging">
            Due to a license agreement with yFiles GmbH we MUST obfuscate the usage of yFiles public API
            including control flow obfuscation.
        </member>
        <member name="M:JetBrains.ReSharper.Features.Diagramming.BuildScript.Compile.ObfuscateWhyWorksTransformSubplatformFilesForPackaging.GetOurStrongNameKeyFile(JetBrains.Application.BuildScript.Solution.AllAssembliesOnSources)">
            <summary>Takes SNK from the current SP.</summary>
        </member>
        <member name="M:JetBrains.ReSharper.Features.Diagramming.BuildScript.Compile.ObfuscateWhyWorksTransformSubplatformFilesForPackaging.HideOriginalAssembliesFromCataloging(JetBrains.Application.BuildScript.PackageReferenceArtifact[],JetBrains.Util.ILogger)">
            <summary>
            What this transform does is take assemblies from a referenced package, patch them, and embed into the subplatform. Normally we're getting two (inexact) copies of such assemblies, the original and the patched. This yields an instruction to ignore the original.
            </summary>
            <returns></returns>
        </member>
        <member name="M:JetBrains.ReSharper.Features.Diagramming.BuildScript.Compile.ObfuscateWhyWorksTransformSubplatformFilesForPackaging.CollectReferencesOfSubAsAssemblies(JetBrains.Lifetimes.Lifetime,JetBrains.Application.BuildScript.Solution.SubplatformName,JetBrains.Application.BuildScript.Solution.AllAssembliesOnSources,JetBrains.Application.BuildScript.Solution.AllAssembliesOnEverything,System.Collections.Generic.IReadOnlyCollection{JetBrains.Application.BuildScript.Compile.SubplatformFileForPackaging},System.Collections.Generic.IReadOnlyCollection{JetBrains.Application.BuildScript.RetrievedPackageReferenceArtifact},System.Collections.Generic.IReadOnlyCollection{JetBrains.Application.BuildScript.InputPackage},JetBrains.Build.Running.IBuildTaskHost,JetBrains.Util.ILogger)">
            <summary>
            All DLLs possibly loadable in this sub.
            </summary>
        </member>
        <member name="M:JetBrains.ReSharper.Features.Diagramming.Architecture.ArchitectureGraphViewer.OpenFromSolution(JetBrains.ReSharper.Features.Diagramming.Core.ArchitectureDiagrams.IArchitecturePersistentGraph,JetBrains.ProjectModel.ISolution,System.Collections.Generic.List{JetBrains.ProjectModel.IProject})">
            <param name="persistentGraph">persistent graph to view</param>
            <param name="solution"></param>
            <param name="selectedProjects"></param>
        </member>
        <member name="T:JetBrains.ReSharper.Features.Diagramming.Architecture.Toolbox.ArchitectureGrid">
            <summary>
            Interaction logic for ArchitectureGrid.xaml
            </summary>
            <summary>
            ArchitectureGrid
            </summary>
        </member>
        <member name="M:JetBrains.ReSharper.Features.Diagramming.Architecture.Toolbox.ArchitectureGrid.InitializeComponent">
            <summary>
            InitializeComponent
            </summary>
        </member>
        <member name="M:JetBrains.ReSharper.Features.Diagramming.Architecture.Toolbox.ArchitectureToolboxDescriptor.CheckProjects(System.Collections.Generic.List{JetBrains.ProjectModel.IProject},System.Boolean)">
            <summary>
            checks only selected projects and displayes them in the graph
            </summary>
        </member>
        <member name="T:JetBrains.ReSharper.Features.Diagramming.Architecture.Toolbox.GridCollapseDirection">
            <summary>
              Specifies different collapse modes of a GridExpander.
            </summary>
        </member>
        <member name="F:JetBrains.ReSharper.Features.Diagramming.Architecture.Toolbox.GridCollapseDirection.None">
            <summary>
              The GridExpander cannot be collapsed or expanded.
            </summary>
        </member>
        <member name="F:JetBrains.ReSharper.Features.Diagramming.Architecture.Toolbox.GridCollapseDirection.Next">
            <summary>
              The column (or row) to the right (or below) the
              splitter's column, will be collapsed.
            </summary>
        </member>
        <member name="F:JetBrains.ReSharper.Features.Diagramming.Architecture.Toolbox.GridCollapseDirection.Previous">
            <summary>
              The column (or row) to the left (or above) the
              splitter's column, will be collapsed.
            </summary>
        </member>
        <member name="T:JetBrains.ReSharper.Features.Diagramming.Architecture.Toolbox.GridExpander">
            <summary>
              An updated version of the standard GridExpander control that includes a centered handle
              which allows complete collapsing and expanding of the appropriate grid column or row.
            </summary>
        </member>
        <member name="P:JetBrains.ReSharper.Features.Diagramming.Architecture.Toolbox.GridExpander.Direction">
            <summary>
              Gets or sets a value that indicates the direction in which the row/colum
              will be located that is to be expanded and collapsed.
            </summary>
        </member>
        <member name="F:JetBrains.ReSharper.Features.Diagramming.Architecture.Toolbox.GridExpander.DirectionProperty">
            <summary>
              Identifies the Direction dependency property
            </summary>
        </member>
        <member name="P:JetBrains.ReSharper.Features.Diagramming.Architecture.Toolbox.GridExpander.HandleStyle">
            <summary>
              Gets or sets the style that customizes the appearance of the vertical handle
              that is used to expand and collapse the GridExpander.
            </summary>
        </member>
        <member name="F:JetBrains.ReSharper.Features.Diagramming.Architecture.Toolbox.GridExpander.HandleStyleProperty">
            <summary>
              Identifies the HandleStyle dependency property
            </summary>
        </member>
        <member name="P:JetBrains.ReSharper.Features.Diagramming.Architecture.Toolbox.GridExpander.IsAnimated">
            <summary>
              Gets or sets a value that indicates if the collapse and
              expanding actions should be animated.
            </summary>
        </member>
        <member name="F:JetBrains.ReSharper.Features.Diagramming.Architecture.Toolbox.GridExpander.IsAnimatedProperty">
            <summary>
              Identifies the IsAnimated dependency property
            </summary>
        </member>
        <member name="P:JetBrains.ReSharper.Features.Diagramming.Architecture.Toolbox.GridExpander.IsCollapsed">
            <summary>
              Gets or sets a value that indicates if the target column is
              currently collapsed.
            </summary>
        </member>
        <member name="F:JetBrains.ReSharper.Features.Diagramming.Architecture.Toolbox.GridExpander.IsCollapsedProperty">
            <summary>
              Identifies the IsCollapsed dependency property
            </summary>
        </member>
        <member name="M:JetBrains.ReSharper.Features.Diagramming.Architecture.Toolbox.GridExpander.#ctor">
            <summary>
              Initializes a new instance of the GridExpander class,
              which inherits from System.Windows.Controls.GridExpander.
            </summary>
        </member>
        <member name="M:JetBrains.ReSharper.Features.Diagramming.Architecture.Toolbox.GridExpander.OnApplyTemplate">
            <summary>
              This method is called when the tempalte should be applied to the control.
            </summary>
        </member>
        <member name="M:JetBrains.ReSharper.Features.Diagramming.Architecture.Toolbox.GridExpander.OnIsCollapsedChanged(System.Boolean)">
            <summary>
              Handles the property change event of the IsCollapsed property.
            </summary>
            <param name="isCollapsed">The new value for the IsCollapsed property.</param>
        </member>
        <member name="M:JetBrains.ReSharper.Features.Diagramming.Architecture.Toolbox.GridExpander.OnDirectionChanged(JetBrains.ReSharper.Features.Diagramming.Architecture.Toolbox.GridCollapseDirection)">
            <summary>
              Handles the property change event of the Direction property.
            </summary>
            <param name="direction">The new value for the Direction property.</param>
        </member>
        <member name="M:JetBrains.ReSharper.Features.Diagramming.Architecture.Toolbox.GridExpander.OnCollapsed(System.EventArgs)">
            <summary>
              Raises the Collapsed event.
            </summary>
            <param name="e">Contains event arguments.</param>
        </member>
        <member name="M:JetBrains.ReSharper.Features.Diagramming.Architecture.Toolbox.GridExpander.OnExpanded(System.EventArgs)">
            <summary>
              Raises the Expanded event.
            </summary>
            <param name="e">Contains event arguments.</param>
        </member>
        <member name="M:JetBrains.ReSharper.Features.Diagramming.Architecture.Toolbox.GridExpander.Collapse">
            <summary>
              Collapses the target ColumnDefinition or RowDefinition.
            </summary>
        </member>
        <member name="M:JetBrains.ReSharper.Features.Diagramming.Architecture.Toolbox.GridExpander.Expand">
            <summary>
              Expands the target ColumnDefinition or RowDefinition.
            </summary>
        </member>
        <member name="M:JetBrains.ReSharper.Features.Diagramming.Architecture.Toolbox.GridExpander.GetCollapseDirection">
            <summary>
              Determine the collapse direction based on the horizontal and vertical alignments
            </summary>
        </member>
        <member name="M:JetBrains.ReSharper.Features.Diagramming.Architecture.Toolbox.GridExpander.GridExpanderButton_Checked(System.Object,System.Windows.RoutedEventArgs)">
            <summary>
              Handles the Checked event of either the Vertical or Horizontal
              GridExpanderHandle ToggleButton.
            </summary>
            <param name="sender">An instance of the ToggleButton that fired the event.</param>
            <param name="e">Contains event arguments for the routed event that fired.</param>
        </member>
        <member name="M:JetBrains.ReSharper.Features.Diagramming.Architecture.Toolbox.GridExpander.GridExpanderButton_Unchecked(System.Object,System.Windows.RoutedEventArgs)">
            <summary>
              Handles the Unchecked event of either the Vertical or Horizontal
              GridExpanderHandle ToggleButton.
            </summary>
            <param name="sender">An instance of the ToggleButton that fired the event.</param>
            <param name="e">Contains event arguments for the routed event that fired.</param>
        </member>
        <member name="M:JetBrains.ReSharper.Features.Diagramming.Architecture.Toolbox.GridExpander.OnIsCollapsedPropertyChanged(System.Windows.DependencyObject,System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>
              The IsCollapsed property porperty changed handler.
            </summary>
            <param name="d">GridExpander that changed IsCollapsed.</param>
            <param name="e">An instance of DependencyPropertyChangedEventArgs.</param>
        </member>
        <member name="M:JetBrains.ReSharper.Features.Diagramming.Architecture.Toolbox.GridExpander.OnDirectionPropertyChanged(System.Windows.DependencyObject,System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>
              The DirectionProperty property changed handler.
            </summary>
            <param name="d">GridExpander that changed IsCollapsed.</param>
            <param name="e">An instance of DependencyPropertyChangedEventArgs.</param>
        </member>
        <member name="M:JetBrains.ReSharper.Features.Diagramming.Architecture.Toolbox.GridExpander.AnimateCollapse(System.Object)">
            <summary>
              Uses DoubleAnimation and a StoryBoard to animated the collapsing
              of the specificed ColumnDefinition or RowDefinition.
            </summary>
            <param name="definition">The RowDefinition or ColumnDefintition that will be collapsed.</param>
        </member>
        <member name="M:JetBrains.ReSharper.Features.Diagramming.Architecture.Toolbox.GridExpander.AnimateExpand(System.Object)">
            <summary>
              Uses DoubleAnimation and a StoryBoard to animate the expansion
              of the specificed ColumnDefinition or RowDefinition.
            </summary>
            <param name="definition">The RowDefinition or ColumnDefintition that will be expanded.</param>
        </member>
        <member name="T:JetBrains.ReSharper.Features.Diagramming.Architecture.Toolbox.GridExpander.GridCollapseOrientation">
            <summary>
              An enumeration that specifies the direction the GridExpander will
              be collapased (Rows or Columns).
            </summary>
        </member>
        <member name="M:JetBrains.ReSharper.Features.Diagramming.Core.ArchitectureDiagrams.ArchitectureGraphExtentions.CreateEdgeFromProjectModel(JetBrains.ReSharper.Features.Diagramming.Core.ArchitectureDiagrams.Graph.IProjectModelGraph,JetBrains.ProjectModel.IProjectModelElement,JetBrains.ReSharper.Features.Diagramming.Core.ArchitectureDiagrams.IArchitectureElementBuilder,JetBrains.ProjectModel.IProject)">
            <summary>
            Creates Edge and correctly adds it to graph.
            </summary>
            <param name="graph"></param>
            <param name="element"></param>
            <param name="builder"></param>
            <param name="targetProject"></param>
            <returns>Return added edge, if something fails - return null</returns>
        </member>
        <member name="M:JetBrains.ReSharper.Features.Diagramming.Core.ArchitectureDiagrams.ArchitectureGraphExtentions.CreateNodeFromProjectModel(JetBrains.Application.UI.Diagramming.API.IDiagramGraph,JetBrains.ProjectModel.IProjectModelElement,JetBrains.ReSharper.Features.Diagramming.Core.ArchitectureDiagrams.IArchitectureElementBuilder)">
            <summary>
            Creates Node and correctly adds it to graph.
            </summary>
            <param name="graph"></param>
            <param name="element"></param>
            <param name="builder"></param>
            <returns>Return created node, if something fails - return null</returns>
        </member>
        <member name="M:JetBrains.ReSharper.Features.Diagramming.Core.ArchitectureDiagrams.Graph.ArchitecturePersistentGraph.RemoveEdge(JetBrains.Application.UI.Diagramming.API.IDiagramGraphEdge)">
            <summary>
            Remove edge from graph  and if edge.Source exist from edge.Source
            </summary>
        </member>
        <member name="M:JetBrains.ReSharper.Features.Diagramming.Core.Wrapper.CustomMouseHoverInputMode.OnHide">
            <summary>
              Called when the tooltip should be hidden.
            </summary>
        </member>
        <member name="P:JetBrains.ReSharper.Features.Diagramming.Core.Wrapper.MouseHoverEventArgs.Item">
            <summary>
            The item that is hovered, or null.
            </summary>
        </member>
        <member name="P:JetBrains.ReSharper.Features.Diagramming.Core.Wrapper.MouseHoverEventArgs.OldItem">
            <summary>
            The item that was previously hovered, or null.
            </summary>
        </member>
        <member name="T:JetBrains.ReSharper.Features.Diagramming.Core.Wrapper.MyReparentNodeHandler">
            <summary>
            Customized variant of the <see cref="T:yWorks.Controls.Input.IReparentNodeHandler"/>
            interface that uses the <see cref="T:yWorks.Graph.ITagOwner"/> tags associated with the nodes
            to determine which reparenting operations are allowed.
            </summary>
        </member>
        <member name="M:JetBrains.ReSharper.Features.Diagramming.Core.Wrapper.MyReparentNodeHandler.ShouldReparent(yWorks.Controls.Input.IInputModeContext,yWorks.Graph.INode)">
            <summary>
            Determines whether the user may detach the given node from its current parent in 
            order to reparent it.
            </summary>
            <param name="context">The context that provides information about the user input.</param>
            <param name="node">The node that is about to be detached from its current parent.</param>
            <returns>Whether the node may be detached and reparented.</returns>
        </member>
        <member name="M:JetBrains.ReSharper.Features.Diagramming.Core.Wrapper.MyReparentNodeHandler.IsValidParent(yWorks.Controls.Input.IInputModeContext,yWorks.Graph.INode,yWorks.Graph.INode)">
            <summary>
            Determines whether the provided node may be reparented to a <paramref name="newParent">new parent</paramref>.
            </summary>
            <param name="context">The context that provides information about the user input.</param>
            <param name="node">The node that will be reparented.</param>
            <param name="newParent">The potential new parent.</param>
            <returns>Whether <paramref name="newParent"/> is a valid new parent for <paramref name="node"/>.</returns>
        </member>
        <member name="T:JetBrains.ReSharper.Features.Diagramming.Core.Wrapper.UI.GraphControlWindowBase">
            <summary>
            GraphControlWindowBase
            </summary>
        </member>
        <member name="M:JetBrains.ReSharper.Features.Diagramming.Core.Wrapper.UI.GraphControlWindowBase.InitializeComponent">
            <summary>
            InitializeComponent
            </summary>
        </member>
        <member name="T:JetBrains.ReSharper.Features.Diagramming.Core.Wrapper.UI.NavigationArrows">
            <summary>
            NavigationArrows
            </summary>
        </member>
        <member name="M:JetBrains.ReSharper.Features.Diagramming.Core.Wrapper.UI.NavigationArrows.InitializeComponent">
            <summary>
            InitializeComponent
            </summary>
        </member>
        <member name="F:JetBrains.ReSharper.Features.Diagramming.Core.Wrapper.YFilesGraphWrapperBase.myIncrementalNodes">
            <summary>
            Null semantic: always make full layout update
            </summary>
        </member>
        <member name="M:JetBrains.ReSharper.Features.Diagramming.Core.Wrapper.YFilesGraphWrapperBase.RefreshLayoutIncremental">
            <summary>
            Relayouts the whole graph
            </summary>
        </member>
        <member name="M:JetBrains.ReSharper.Features.Diagramming.Types.AddOrNavigateDeclaredElementController.ExecuteItem(JetBrains.Application.UI.Controls.JetPopupMenu.Detail.JetPopupMenuItem,JetBrains.DataFlow.ISignal{System.Boolean})">
            <summary>
            Called when an item is to be executed.
            </summary>
        </member>
        <member name="T:JetBrains.ReSharper.Features.Diagramming.Types.DiagramTypeChooser">
            <summary>
            Customizes the <see cref="T:JetBrains.PsiFeatures.UIInteractive.Core.CompletionPicker.CompletionPickerEdit"/> for choosing types.
            </summary>
        </member>
        <member name="M:JetBrains.ReSharper.Features.Diagramming.Types.DiagramTypeChooser.TryGetTypeElement(System.String)">
            <summary>
            Tries to look up a declared element for its FQ Name in the current <see cref="P:JetBrains.ReSharper.Feature.Services.UI.CompletionPicker.DeclaredElementChooser.Language"/>.
            </summary>
        </member>
        <member name="M:JetBrains.ReSharper.Features.Diagramming.Types.DiagramTypeChooser.CreateCompletionController(JetBrains.Lifetimes.Lifetime,JetBrains.ProjectModel.ISolution,JetBrains.ReSharper.Feature.Services.Navigation.Goto.ProvidersAPI.LibrariesFlag,JetBrains.ReSharper.Features.Diagramming.Types.TypeDependenciesDiagramDescriptor,JetBrains.Application.UI.PopupLayout.IMainWindowPopupWindowContext)">
            <summary>
            Creates the chooser-specific completion controller.
            </summary>
            <param name="lifetime"></param>
            <param name="solution"></param>
            <param name="librariesFlag"></param>
            <param name="typeDependenciesDiagramDescriptor"></param>
            <param name="mainWindowPopupWindowContext"></param>
        </member>
        <member name="M:JetBrains.ReSharper.Features.Diagramming.Types.DiagramTypeChooser.InitCompletion(System.Func{JetBrains.ReSharper.Feature.Services.Navigation.Goto.ProvidersAPI.ICompletionGotoController})">
            <summary>
            Inits the plain completion support.
            </summary>
            <param name="FCreateCompletionController"></param>
        </member>
        <member name="P:JetBrains.ReSharper.Features.Diagramming.Types.MyCollapsibleNodeStyleDecorator.ButtonStyle">
            <summary>
            Gets or sets the style to use for the <see cref="T:System.Windows.Controls.Primitives.ToggleButton"/>.
            
            </summary>
            
            <remarks>
            The default value of <see langword="null"/> will make the implementation use the
                        style obtained from the <see cref="T:yWorks.Canvas.CanvasControl"/>
                        using the <see cref="F:yWorks.yFiles.UI.Drawing.CollapsibleNodeStyleDecoratorRenderer.CollapseButtonStyleKey"/>.
            
            </remarks>
        </member>
        <member name="P:JetBrains.ReSharper.Features.Diagramming.Types.MyCollapsibleNodeStyleDecorator.ButtonLocationParameter">
            <summary>
            An <see cref="T:yWorks.yFiles.UI.Model.ILabelModelParameter"/> that determines the placement of the button for toggling the
                        expanded state.
            
            </summary>
        </member>
        <member name="P:JetBrains.ReSharper.Features.Diagramming.Types.MyCollapsibleNodeStyleDecorator.Insets">
            <summary>
            Yields the insets to use for the <see cref="T:yWorks.yFiles.UI.Drawing.IInsetsProvider`1"/> that will be reported
                        by the <see cref="T:yWorks.yFiles.UI.Drawing.CollapsibleNodeStyleDecoratorRenderer"/>'s <see cref="T:yWorks.Support.ILookup"/>.
            
            </summary>
        </member>
        <member name="P:JetBrains.ReSharper.Features.Diagramming.Types.MyCollapsibleNodeStyleDecorator.Wrapped">
            <summary>
            The wrapped node style that will be used to perform the actual rendering of the node.
            
            </summary>
        </member>
        <member name="M:JetBrains.ReSharper.Features.Diagramming.Types.MyCollapsibleNodeStyleDecorator.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:yWorks.yFiles.UI.Drawing.CollapsibleNodeStyleDecorator"/> class.
            
            </summary>
            
            <remarks>
            The <see cref="P:yWorks.yFiles.UI.Drawing.CollapsibleNodeStyleDecorator.Wrapped"/> property will be initialized with a <see cref="T:yWorks.yFiles.UI.Drawing.ShapeNodeStyle"/>.
            
            </remarks>
        </member>
        <member name="M:JetBrains.ReSharper.Features.Diagramming.Types.MyCollapsibleNodeStyleDecorator.#ctor(yWorks.Graph.Styles.INodeStyle)">
            <summary>
            Initializes a new instance of the <see cref="T:yWorks.yFiles.UI.Drawing.CollapsibleNodeStyleDecorator"/> class.
                        using the provided style for the <see cref="P:yWorks.yFiles.UI.Drawing.CollapsibleNodeStyleDecorator.Wrapped"/> property.
            
            </summary>
            <param name="decoratedStyle">The decorated style.</param>
        </member>
        <member name="M:JetBrains.ReSharper.Features.Diagramming.Types.TypeDependenciesDiagramDescriptor.FullRefresh">
            <summary>
              rebuilds the store, creates a new graph, and relayouts all this
            </summary>
        </member>
        <member name="M:JetBrains.ReSharper.Features.Diagramming.Types.TypeDependenciesDiagramDescriptor.UpdateCanvas(System.Int32,System.Boolean)">
            <summary>
              updates the yfiles wrapper according to the myTypeDependenciesGraph graph
            </summary>
            <returns></returns>
        </member>
        <member name="M:JetBrains.ReSharper.Features.Diagramming.Types.TypeDependenciesDummyEdgeConverter.AddFirstSeparateEdge(yWorks.Graph.IFoldingEdgeFactory,yWorks.Graph.IFoldingView,yWorks.Graph.IEdge,yWorks.Graph.INode,System.Boolean,yWorks.Graph.INode,System.Boolean)">
            <summary>
            Adds the first separate edge to the source and target node pair using the <see cref="M:yWorks.yFiles.UI.Model.IAddDummyEdgeCallback.AddAsSeparateEdge(yWorks.yFiles.UI.Model.IPort,yWorks.yFiles.UI.Model.IPort)"/> method.
            
            </summary>
        </member>
        <member name="M:JetBrains.ReSharper.Features.Diagramming.Types.TypeDiagrams.Graph.AssemblyGroupNode.Equals(System.Object)">
            <summary>
            Determines whether the specified <see cref="T:System.Object"/> is equal to the current <see cref="T:System.Object"/>.
            </summary>
            <returns>
            true if the specified <see cref="T:System.Object"/> is equal to the current <see cref="T:System.Object"/>; otherwise, false.
            </returns>
            <param name="obj">The <see cref="T:System.Object"/> to compare with the current <see cref="T:System.Object"/>. </param>
        </member>
        <member name="M:JetBrains.ReSharper.Features.Diagramming.Types.TypeDiagrams.Graph.AssemblyGroupNode.GetHashCode">
            <summary>
            Serves as a hash function for a particular type. 
            </summary>
            <returns>
            A hash code for the current <see cref="T:System.Object"/>.
            </returns>
        </member>
        <member name="M:JetBrains.ReSharper.Features.Diagramming.Types.TypeDiagrams.Graph.Impl.TypesRelationEdge.Equals(System.Object)">
            <summary>
            Determines whether the specified <see cref="T:System.Object"/> is equal to the current <see cref="T:System.Object"/>.
            </summary>
            <returns>
            true if the specified <see cref="T:System.Object"/> is equal to the current <see cref="T:System.Object"/>; otherwise, false.
            </returns>
            <param name="obj">The <see cref="T:System.Object"/> to compare with the current <see cref="T:System.Object"/>. </param>
        </member>
        <member name="M:JetBrains.ReSharper.Features.Diagramming.Types.TypeDiagrams.Graph.Impl.TypesRelationEdge.GetHashCode">
            <summary>
            Serves as a hash function for a particular type. 
            </summary>
            <returns>
            A hash code for the current <see cref="T:System.Object"/>.
            </returns>
        </member>
        <member name="M:JetBrains.ReSharper.Features.Diagramming.Types.TypeDiagrams.Graph.ITypeElementNode.GetPsiSourceFile">
            <summary>
            gets cached psi source file, no readlock required
            </summary>
        </member>
        <member name="M:JetBrains.ReSharper.Features.Diagramming.Types.TypeDiagrams.Graph.ProjectFolderGroupNode.Equals(System.Object)">
            <summary>
            Determines whether the specified <see cref="T:System.Object"/> is equal to the current <see cref="T:System.Object"/>.
            </summary>
            <returns>
            true if the specified <see cref="T:System.Object"/> is equal to the current <see cref="T:System.Object"/>; otherwise, false.
            </returns>
            <param name="obj">The <see cref="T:System.Object"/> to compare with the current <see cref="T:System.Object"/>. </param>
        </member>
        <member name="M:JetBrains.ReSharper.Features.Diagramming.Types.TypeDiagrams.Graph.ProjectFolderGroupNode.GetHashCode">
            <summary>
            Serves as a hash function for a particular type. 
            </summary>
            <returns>
            A hash code for the current <see cref="T:System.Object"/>.
            </returns>
        </member>
        <member name="M:JetBrains.ReSharper.Features.Diagramming.Types.TypeDiagrams.NamespaceGroupNode.Equals(System.Object)">
            <summary>
            Determines whether the specified <see cref="T:System.Object"/> is equal to the current <see cref="T:System.Object"/>.
            </summary>
            <returns>
            true if the specified <see cref="T:System.Object"/> is equal to the current <see cref="T:System.Object"/>; otherwise, false.
            </returns>
            <param name="obj">The <see cref="T:System.Object"/> to compare with the current <see cref="T:System.Object"/>. </param>
        </member>
        <member name="M:JetBrains.ReSharper.Features.Diagramming.Types.TypeDiagrams.NamespaceGroupNode.GetHashCode">
            <summary>
            Serves as a hash function for a particular type. 
            </summary>
            <returns>
            A hash code for the current <see cref="T:System.Object"/>.
            </returns>
        </member>
        <member name="P:JetBrains.ReSharper.Features.Diagramming.Types.TypeElementsDependencies.TypeElementsDependenciesStore.DisplayTypeElements">
            <summary>
            these elements will be used while building the graph against this store
            </summary>
        </member>
        <member name="M:JetBrains.ReSharper.Features.Diagramming.Types.TypeElementsDependencies.TypeElementsDependenciesStore.AddDependency(JetBrains.ReSharper.Psi.ITypeElement,JetBrains.ReSharper.Features.Diagramming.Types.TypeElementsDependencies.TypeElementsDependency)">
            <summary>
            This method is thread safe
            </summary>
            <param name="sourceTypeElement"></param>
            <param name="dependency"></param>
        </member>
        <member name="P:JetBrains.ReSharper.Features.Diagramming.Types.TypeDependenciesDiagramWrapper.GraphControl">
            <summary>
            can be null in tests
            </summary>
        </member>
        <member name="M:JetBrains.ReSharper.Features.Diagramming.Types.TypesRelationsViewer.ShowTypesDependencies(System.Collections.Generic.ICollection{JetBrains.ReSharper.Psi.ITypeElement},JetBrains.ReSharper.Feature.Services.Diagrams.TypeDependenciesOptions)">
            <inheritdoc />
        </member>
        <member name="T:JetBrains.ReSharper.Features.Diagramming.Types.UI.TypeDependenciesControl">
            <summary>
            TypeDependenciesControl
            </summary>
        </member>
        <member name="M:JetBrains.ReSharper.Features.Diagramming.Types.UI.TypeDependenciesControl.InitializeComponent">
            <summary>
            InitializeComponent
            </summary>
        </member>
        <member name="T:JetBrains.ReSharper.Features.Diagramming.Resources.FeaturesDiagrammingThemedIcons">
             <summary>
            	<para>
            		<para>Autogenerated identifier classes and identifier objects to Themed Icons registered with <see cref="T:JetBrains.Application.Icons.IThemedIconManager"></see>.</para>
            		<para>Identifier classes should be used in attributes, XAML, or generic parameters. Where an <see cref="T:JetBrains.UI.Icons.IconId"></see> value is expected, use the identifier object in the <c>Id</c> field of the identifier class.</para>
            	</para>
            </summary>
            <remarks>
            	<para>This code was compile-time generated to support Themed Icons in the JetBrains application.</para>
            	<para>It has two primary goals: load the icons of this assembly to be registered with <see cref="T:JetBrains.Application.Icons.IThemedIconManager"></see> so that they were WPF-accessible and theme-sensitive; and emit early-bound accessors for referencing icons in codebehind in a compile-time-validated manner.</para>
            	<h1>XAML</h1>
            	<para>For performance reasons, the icons are not individually exposed with application resources. There is a custom markup extension to bind an image source in markup.</para>
            	<para>To use an icon from XAML, set an <see cref="T:System.Windows.Media.ImageSource"></see> property to the <see cref="T:System.CodeDom.CodeTypeReference"></see> markup extension, which takes an icon identifier class (nested in <see cref="T:JetBrains.ReSharper.Features.Diagramming.Resources.FeaturesDiagrammingThemedIcons"></see> class) as a parameter.</para>
            	<para>Example:</para>
            	<code>&lt;Image Source="{icons:ThemedIcon myres:FeaturesDiagrammingThemedIcons+Trinity}" /&gt;</code>
            	<h1>Attributes</h1>
            	<para>Sometimes you have to reference an icon from a type attriute when you're defining objects in code. Typical examples are Options pages and Tool Windows.</para>
            	<para>To avoid the use of string IDs which are not validated very well, we've emitted identifier classes to be used with <c>typeof()</c> expression, one per each icon. Use the attribute overload which takes a <see cref="T:System.Type"></see> for an image, and choose your icon class from nested classes in the <see cref="T:JetBrains.ReSharper.Features.Diagramming.Resources.FeaturesDiagrammingThemedIcons"></see> class.</para>
            	<para>Example:</para>
            	<code>[Item(Name="Sample", Icon=typeof(FeaturesDiagrammingThemedIcons.Trinity))]</code>
            	<h1>CodeBehind</h1>
            	<para>In codebehind, we have two distinct tasks: (a) specify some icon in the APIs and (b) render icon images onscreen.</para>
            	<para>On the APIs stage you should only manipulate icon identifier objects (of type <see cref="T:JetBrains.UI.Icons.IconId"></see>, statically defined in <see cref="T:JetBrains.ReSharper.Features.Diagramming.Resources.FeaturesDiagrammingThemedIcons"></see> in <c>Id</c> fields). Icon identifier classes (nested in <see cref="T:JetBrains.ReSharper.Features.Diagramming.Resources.FeaturesDiagrammingThemedIcons"></see>) should be turned into icon identifier objects as early as possible. Rendering is about getting an <see cref="T:System.Windows.Media.ImageSource"></see> to assign to WPF, or <see cref="T:System.Drawing.Bitmap"></see> to use with GDI+ / Windows Forms.</para>
            	<para>You should turn an identifier object into a rendered image as late as possible. The identifier is static and lightweight and does not depend on the current theme, while the image is themed and has to be loaded or generated/rasterized. You need an <see cref="T:JetBrains.Application.Icons.IThemedIconManager"></see> instance to get the image out of an icon identifier object. Once you got the image, you should take care to change it with theme changes — either by using a live image property, or by listening to the theme change event. See <see cref="T:JetBrains.Application.Icons.IThemedIconManager"></see> and its extensions for the related facilities.</para>
            	<para>Example:</para>
            	<code>// Getting IconId identifier object to use with APIs
            IconId iconid = FeaturesDiagrammingThemedIcons.Trinity.Id;</code>
            	<code>// Getting IconId out of an Icon Identifier Class type
            IconId iconid = new JetBrains.Application.Icons.CompiledIconsCs.CompiledIconCsId(typeof(FeaturesDiagrammingThemedIcons.Trinity));</code>
            	<code>// Getting image for screen rendering by IconId
            themediconmanager.Icons[icnoid]</code>
            	<code>// Getting image for screen rendering by Icon Identifier Class
            themediconmanager.GetIcon&lt;FeaturesDiagrammingThemedIcons.Trinity&gt;()</code>
            	<h1>Icons Origin</h1>
            	<para>This code was generated by a pre-compile build task from a set of input files which are XAML files adhering to a certain convention, as convenient for exporting them from the Illustrator workspace, plus separate PNG files with raster icons. In the projects, these files are designated with <c>ThemedIconsXamlV3</c> and <c>ThemedIconPng</c> build actions and do not themselves get into the output assembly. All of such files are processed, vector images for different themes of the same icon are split and combined into the single list of icons in this assembly. This list is then written into the genearted XAML file (compiled into BAML within assembly), and serves as the source for this generated code.</para>
            </remarks>
        </member>
        <member name="T:JetBrains.ReSharper.Features.Diagramming.Resources.FeaturesDiagrammingThemedIcons.Aggregation">
             <summary>
            	<para>
            		<para>Aggregation Themed Icon generated identifiers:</para>
            		<para>— <see cref="T:JetBrains.ReSharper.Features.Diagramming.Resources.FeaturesDiagrammingThemedIcons.Aggregation"></see> identifier class, for use in attributes, XAML, and generic parameters;</para>
            		<para>— <see cref="F:JetBrains.ReSharper.Features.Diagramming.Resources.FeaturesDiagrammingThemedIcons.Aggregation.Id"></see> identifier object, as a field in the identifier class, for use where an <see cref="T:JetBrains.UI.Icons.IconId"></see> value is expected.</para>
            		<para>
            			<code>
               uuuuuuuuuuuu      uuuuuuuuuuuu
               22````````22      22````````22
               yy``RRRRRRRRRRRRRRRRRRRRRR``yy
               kk``GG        GG        GG``kk
               hh``bb``CCCC``bb``CCCC``bb``hh
               444466--\\\\--66--\\\\--664444
                   KK""""""""KK""""""""KK    
                   VVVVVVVVVVVVVVVVVVVVVV    
                   55        55        55    
               DDDDuu``CCCC``uu``CCCC``uuDDDD
               DD..xx--\\\\--xx--\\\\--xx..DD
               88''}}""""""""}}""""""""}}''88
               NN--llllllllllllllllllllll--NN
               $$--------$$      $$--------$$
               QQQQQQQQQQQQ      QQQQQQQQQQQQ
                                             
            </code>
            		</para>
            	</para>
            </summary>
            <remarks>
            	<para>For details on Themed Icons and their use, see Remarks on the outer class.</para>
            </remarks>
            <example>
            	<code>&lt;Image Source="{icons:ThemedIcon myres:FeaturesDiagrammingThemedIcons+Aggregation}" /&gt;        &lt;!-- XAML --&gt;</code>
            </example>
            <example>
            	<code>[Item(Name="Sample", Icon=typeof(FeaturesDiagrammingThemedIcons.Aggregation))]        // C# Type attribute</code>
            </example>
            <example>
            	<code>IconId iconid = FeaturesDiagrammingThemedIcons.Aggregation.Id;        // IconId identifier object</code>
            </example>
            <example>
            	<code>themediconmanager.GetIcon&lt;FeaturesDiagrammingThemedIcons.Aggregation&gt;()        // Icon image for rendering</code>
            </example>
        </member>
        <member name="F:JetBrains.ReSharper.Features.Diagramming.Resources.FeaturesDiagrammingThemedIcons.Aggregation.Id">
            <inheritdoc cref="T:JetBrains.ReSharper.Features.Diagramming.Resources.FeaturesDiagrammingThemedIcons.Aggregation">identifier class</inheritdoc>
        </member>
        <member name="M:JetBrains.ReSharper.Features.Diagramming.Resources.FeaturesDiagrammingThemedIcons.Aggregation.Load_Color">
            <summary>Loads the image for Themed Icon Aggregation theme aspect Color.</summary>
        </member>
        <member name="M:JetBrains.ReSharper.Features.Diagramming.Resources.FeaturesDiagrammingThemedIcons.Aggregation.Load_Gray">
            <summary>Loads the image for Themed Icon Aggregation theme aspect Gray.</summary>
        </member>
        <member name="M:JetBrains.ReSharper.Features.Diagramming.Resources.FeaturesDiagrammingThemedIcons.Aggregation.Load_GrayDark">
            <summary>Loads the image for Themed Icon Aggregation theme aspect GrayDark.</summary>
        </member>
        <member name="M:JetBrains.ReSharper.Features.Diagramming.Resources.FeaturesDiagrammingThemedIcons.Aggregation.GetThemeImages">
            <summary>Returns the set of theme images for Themed Icon Aggregation.</summary>
        </member>
        <member name="T:JetBrains.ReSharper.Features.Diagramming.Resources.FeaturesDiagrammingThemedIcons.GroupingFolder">
             <summary>
            	<para>
            		<para>GroupingFolder Themed Icon generated identifiers:</para>
            		<para>— <see cref="T:JetBrains.ReSharper.Features.Diagramming.Resources.FeaturesDiagrammingThemedIcons.GroupingFolder"></see> identifier class, for use in attributes, XAML, and generic parameters;</para>
            		<para>— <see cref="F:JetBrains.ReSharper.Features.Diagramming.Resources.FeaturesDiagrammingThemedIcons.GroupingFolder.Id"></see> identifier object, as a field in the identifier class, for use where an <see cref="T:JetBrains.UI.Icons.IconId"></see> value is expected.</para>
            		<para>
            			<code>
                                             
                               :*************
                             ,\;'          LL
               ??????????????+' _iVVVVVVV  ??
               TT`````````````_sPPPPPPPPP``TT
               ||``PPPPPPPPPPPPPPPPPPPPPP``||
               vv--aa      aaaaaa      aa--vv
               CC..aa  aa  aaaaaa  aa  aa..CC
               YY''yy``````yyyyyy``````yy''YY
               ZZ__EEEEEEEE      EEEEEEEE__ZZ
               jj__eeeeeeee  aa  eeeeeeee__jj
               aa::uuuuuuuu``````uuuuuuuu::aa
               PP""ZZZZZZZZZZZZZZZZZZZZZZ""PP
               KK~~~~~~~~~~~~~~~~~~~~~~~~~~KK
               GGGGGGGGGGGGGGGGGGGGGGGGGGGGGG
                                             
            </code>
            		</para>
            	</para>
            </summary>
            <remarks>
            	<para>For details on Themed Icons and their use, see Remarks on the outer class.</para>
            </remarks>
            <example>
            	<code>&lt;Image Source="{icons:ThemedIcon myres:FeaturesDiagrammingThemedIcons+GroupingFolder}" /&gt;        &lt;!-- XAML --&gt;</code>
            </example>
            <example>
            	<code>[Item(Name="Sample", Icon=typeof(FeaturesDiagrammingThemedIcons.GroupingFolder))]        // C# Type attribute</code>
            </example>
            <example>
            	<code>IconId iconid = FeaturesDiagrammingThemedIcons.GroupingFolder.Id;        // IconId identifier object</code>
            </example>
            <example>
            	<code>themediconmanager.GetIcon&lt;FeaturesDiagrammingThemedIcons.GroupingFolder&gt;()        // Icon image for rendering</code>
            </example>
        </member>
        <member name="F:JetBrains.ReSharper.Features.Diagramming.Resources.FeaturesDiagrammingThemedIcons.GroupingFolder.Id">
            <inheritdoc cref="T:JetBrains.ReSharper.Features.Diagramming.Resources.FeaturesDiagrammingThemedIcons.GroupingFolder">identifier class</inheritdoc>
        </member>
        <member name="M:JetBrains.ReSharper.Features.Diagramming.Resources.FeaturesDiagrammingThemedIcons.GroupingFolder.Load_Color">
            <summary>Loads the image for Themed Icon GroupingFolder theme aspect Color.</summary>
        </member>
        <member name="M:JetBrains.ReSharper.Features.Diagramming.Resources.FeaturesDiagrammingThemedIcons.GroupingFolder.Load_Gray">
            <summary>Loads the image for Themed Icon GroupingFolder theme aspect Gray.</summary>
        </member>
        <member name="M:JetBrains.ReSharper.Features.Diagramming.Resources.FeaturesDiagrammingThemedIcons.GroupingFolder.Load_GrayDark">
            <summary>Loads the image for Themed Icon GroupingFolder theme aspect GrayDark.</summary>
        </member>
        <member name="M:JetBrains.ReSharper.Features.Diagramming.Resources.FeaturesDiagrammingThemedIcons.GroupingFolder.GetThemeImages">
            <summary>Returns the set of theme images for Themed Icon GroupingFolder.</summary>
        </member>
        <member name="T:JetBrains.ReSharper.Features.Diagramming.Resources.FeaturesDiagrammingThemedIcons.GroupingNamespace">
             <summary>
            	<para>
            		<para>GroupingNamespace Themed Icon generated identifiers:</para>
            		<para>— <see cref="T:JetBrains.ReSharper.Features.Diagramming.Resources.FeaturesDiagrammingThemedIcons.GroupingNamespace"></see> identifier class, for use in attributes, XAML, and generic parameters;</para>
            		<para>— <see cref="F:JetBrains.ReSharper.Features.Diagramming.Resources.FeaturesDiagrammingThemedIcons.GroupingNamespace.Id"></see> identifier object, as a field in the identifier class, for use where an <see cref="T:JetBrains.UI.Icons.IconId"></see> value is expected.</para>
            		<para>
            			<code>
                 .!JuKK            KKut*-    
                !Ki_`KK            KK`_|Kr   
               =Kr -tEEEEEEEEEE    KK{_ /K*  
               JK- lKkk      kk     `Ko `Ko  
               KK  KKVV``aa``VV      KK  KK  
              `KK  KKSS......SSSSSSSSSS  KK` 
             rk{,``KKyyyyyyyyyy      yy``,{kr
             KK``KKKK        aa``aa``aaKK``KK
             sK|-``KK5555555555......55``-|Ks
              -KK``KKoo      oooooooooo``KK- 
               KK``KKoo``aa``oo      KK``KK  
               FK:`xKuu......uu      Ky`-K5  
               ;Kr.~SIIIIIIIIII    KKk;./Kr  
               `LKT,'KK            KK.,LK7`  
                 _LoKKK            KKK2)"    
                                             
            </code>
            		</para>
            	</para>
            </summary>
            <remarks>
            	<para>For details on Themed Icons and their use, see Remarks on the outer class.</para>
            </remarks>
            <example>
            	<code>&lt;Image Source="{icons:ThemedIcon myres:FeaturesDiagrammingThemedIcons+GroupingNamespace}" /&gt;        &lt;!-- XAML --&gt;</code>
            </example>
            <example>
            	<code>[Item(Name="Sample", Icon=typeof(FeaturesDiagrammingThemedIcons.GroupingNamespace))]        // C# Type attribute</code>
            </example>
            <example>
            	<code>IconId iconid = FeaturesDiagrammingThemedIcons.GroupingNamespace.Id;        // IconId identifier object</code>
            </example>
            <example>
            	<code>themediconmanager.GetIcon&lt;FeaturesDiagrammingThemedIcons.GroupingNamespace&gt;()        // Icon image for rendering</code>
            </example>
        </member>
        <member name="F:JetBrains.ReSharper.Features.Diagramming.Resources.FeaturesDiagrammingThemedIcons.GroupingNamespace.Id">
            <inheritdoc cref="T:JetBrains.ReSharper.Features.Diagramming.Resources.FeaturesDiagrammingThemedIcons.GroupingNamespace">identifier class</inheritdoc>
        </member>
        <member name="M:JetBrains.ReSharper.Features.Diagramming.Resources.FeaturesDiagrammingThemedIcons.GroupingNamespace.Load_Color">
            <summary>Loads the image for Themed Icon GroupingNamespace theme aspect Color.</summary>
        </member>
        <member name="M:JetBrains.ReSharper.Features.Diagramming.Resources.FeaturesDiagrammingThemedIcons.GroupingNamespace.Load_Gray">
            <summary>Loads the image for Themed Icon GroupingNamespace theme aspect Gray.</summary>
        </member>
        <member name="M:JetBrains.ReSharper.Features.Diagramming.Resources.FeaturesDiagrammingThemedIcons.GroupingNamespace.Load_GrayDark">
            <summary>Loads the image for Themed Icon GroupingNamespace theme aspect GrayDark.</summary>
        </member>
        <member name="M:JetBrains.ReSharper.Features.Diagramming.Resources.FeaturesDiagrammingThemedIcons.GroupingNamespace.GetThemeImages">
            <summary>Returns the set of theme images for Themed Icon GroupingNamespace.</summary>
        </member>
        <member name="T:JetBrains.ReSharper.Features.Diagramming.Resources.FeaturesDiagrammingThemedIcons.GroupingNone">
             <summary>
            	<para>
            		<para>GroupingNone Themed Icon generated identifiers:</para>
            		<para>— <see cref="T:JetBrains.ReSharper.Features.Diagramming.Resources.FeaturesDiagrammingThemedIcons.GroupingNone"></see> identifier class, for use in attributes, XAML, and generic parameters;</para>
            		<para>— <see cref="F:JetBrains.ReSharper.Features.Diagramming.Resources.FeaturesDiagrammingThemedIcons.GroupingNone.Id"></see> identifier object, as a field in the identifier class, for use where an <see cref="T:JetBrains.UI.Icons.IconId"></see> value is expected.</para>
            		<para>
            			<code>
                                             
                                             
                 kkkkkkkkkk    kkkkkkkkkk    
                 yy      yy    yy      yy    
                 ee``ee``ee    ee``ee``ee    
                 oo``````oo    oo``````oo    
                 1111111111    1111111111    
                                             
                                             
                 kkkkkkkkkk    kkkkkkkkkk    
                 yy      yy    yy      yy    
                 ee``ee``ee    ee``ee``ee    
                 oo``````oo    oo``````oo    
                 1111111111    1111111111    
                                             
                                             
            </code>
            		</para>
            	</para>
            </summary>
            <remarks>
            	<para>For details on Themed Icons and their use, see Remarks on the outer class.</para>
            </remarks>
            <example>
            	<code>&lt;Image Source="{icons:ThemedIcon myres:FeaturesDiagrammingThemedIcons+GroupingNone}" /&gt;        &lt;!-- XAML --&gt;</code>
            </example>
            <example>
            	<code>[Item(Name="Sample", Icon=typeof(FeaturesDiagrammingThemedIcons.GroupingNone))]        // C# Type attribute</code>
            </example>
            <example>
            	<code>IconId iconid = FeaturesDiagrammingThemedIcons.GroupingNone.Id;        // IconId identifier object</code>
            </example>
            <example>
            	<code>themediconmanager.GetIcon&lt;FeaturesDiagrammingThemedIcons.GroupingNone&gt;()        // Icon image for rendering</code>
            </example>
        </member>
        <member name="F:JetBrains.ReSharper.Features.Diagramming.Resources.FeaturesDiagrammingThemedIcons.GroupingNone.Id">
            <inheritdoc cref="T:JetBrains.ReSharper.Features.Diagramming.Resources.FeaturesDiagrammingThemedIcons.GroupingNone">identifier class</inheritdoc>
        </member>
        <member name="M:JetBrains.ReSharper.Features.Diagramming.Resources.FeaturesDiagrammingThemedIcons.GroupingNone.Load_Color">
            <summary>Loads the image for Themed Icon GroupingNone theme aspect Color.</summary>
        </member>
        <member name="M:JetBrains.ReSharper.Features.Diagramming.Resources.FeaturesDiagrammingThemedIcons.GroupingNone.Load_Gray">
            <summary>Loads the image for Themed Icon GroupingNone theme aspect Gray.</summary>
        </member>
        <member name="M:JetBrains.ReSharper.Features.Diagramming.Resources.FeaturesDiagrammingThemedIcons.GroupingNone.Load_GrayDark">
            <summary>Loads the image for Themed Icon GroupingNone theme aspect GrayDark.</summary>
        </member>
        <member name="M:JetBrains.ReSharper.Features.Diagramming.Resources.FeaturesDiagrammingThemedIcons.GroupingNone.GetThemeImages">
            <summary>Returns the set of theme images for Themed Icon GroupingNone.</summary>
        </member>
        <member name="T:JetBrains.ReSharper.Features.Diagramming.Resources.FeaturesDiagrammingThemedIcons.Return">
             <summary>
            	<para>
            		<para>Return Themed Icon generated identifiers:</para>
            		<para>— <see cref="T:JetBrains.ReSharper.Features.Diagramming.Resources.FeaturesDiagrammingThemedIcons.Return"></see> identifier class, for use in attributes, XAML, and generic parameters;</para>
            		<para>— <see cref="F:JetBrains.ReSharper.Features.Diagramming.Resources.FeaturesDiagrammingThemedIcons.Return.Id"></see> identifier object, as a field in the identifier class, for use where an <see cref="T:JetBrains.UI.Icons.IconId"></see> value is expected.</para>
            		<para>
            			<code>
                                             
                        -~=/+))+/=~-         
                     `~c+"-``  ``-,/c=`      
                    -cr.            `\):     
                   _T/````.^+??+~'````;T"    
                   r7_```,Tr_``_/7^```'7T    
                   ii````(i`     i7````ii    
               JJ=`JJ....JJ`~7J  JJ....JJ    
               llclll....llicll  ll....ll    
               tt-^)t----t)^-tt  tt----tt    
               }}---~----~---}}  }}----}}    
               +CL"________"LCr  CC____CC    
                .+xc^____^cxr-   xx____xx    
                  .+1|~~|1?-     11111111    
                    .+33L-                   
                                             
            </code>
            		</para>
            	</para>
            </summary>
            <remarks>
            	<para>For details on Themed Icons and their use, see Remarks on the outer class.</para>
            </remarks>
            <example>
            	<code>&lt;Image Source="{icons:ThemedIcon myres:FeaturesDiagrammingThemedIcons+Return}" /&gt;        &lt;!-- XAML --&gt;</code>
            </example>
            <example>
            	<code>[Item(Name="Sample", Icon=typeof(FeaturesDiagrammingThemedIcons.Return))]        // C# Type attribute</code>
            </example>
            <example>
            	<code>IconId iconid = FeaturesDiagrammingThemedIcons.Return.Id;        // IconId identifier object</code>
            </example>
            <example>
            	<code>themediconmanager.GetIcon&lt;FeaturesDiagrammingThemedIcons.Return&gt;()        // Icon image for rendering</code>
            </example>
        </member>
        <member name="F:JetBrains.ReSharper.Features.Diagramming.Resources.FeaturesDiagrammingThemedIcons.Return.Id">
            <inheritdoc cref="T:JetBrains.ReSharper.Features.Diagramming.Resources.FeaturesDiagrammingThemedIcons.Return">identifier class</inheritdoc>
        </member>
        <member name="M:JetBrains.ReSharper.Features.Diagramming.Resources.FeaturesDiagrammingThemedIcons.Return.Load_Color">
            <summary>Loads the image for Themed Icon Return theme aspect Color.</summary>
        </member>
        <member name="M:JetBrains.ReSharper.Features.Diagramming.Resources.FeaturesDiagrammingThemedIcons.Return.Load_Gray">
            <summary>Loads the image for Themed Icon Return theme aspect Gray.</summary>
        </member>
        <member name="M:JetBrains.ReSharper.Features.Diagramming.Resources.FeaturesDiagrammingThemedIcons.Return.Load_GrayDark">
            <summary>Loads the image for Themed Icon Return theme aspect GrayDark.</summary>
        </member>
        <member name="M:JetBrains.ReSharper.Features.Diagramming.Resources.FeaturesDiagrammingThemedIcons.Return.GetThemeImages">
            <summary>Returns the set of theme images for Themed Icon Return.</summary>
        </member>
        <member name="T:JetBrains.ReSharper.Features.Diagramming.Resources.FeaturesDiagrammingThemedIcons.TypeLayout">
             <summary>
            	<para>
            		<para>TypeLayout Themed Icon generated identifiers:</para>
            		<para>— <see cref="T:JetBrains.ReSharper.Features.Diagramming.Resources.FeaturesDiagrammingThemedIcons.TypeLayout"></see> identifier class, for use in attributes, XAML, and generic parameters;</para>
            		<para>— <see cref="F:JetBrains.ReSharper.Features.Diagramming.Resources.FeaturesDiagrammingThemedIcons.TypeLayout.Id"></see> identifier object, as a field in the identifier class, for use where an <see cref="T:JetBrains.UI.Icons.IconId"></see> value is expected.</para>
            		<para>
            			<code>
                                             
               bbbbbbbbbbbbbb8888888888888888
               OO------------WW~~~~~~~~~~~~WW
               DD____________00;;;;;;;;;;;;00
               88,,,,,,,,,,,,$$************$$
               NNNNNNNN####  ##  ####$$$$$$$$
                       ##,,,,,,,,,,##        
                       ##""""""""""##        
                       ##~~~~~~~~~~##        
                       ##==========##        
                       ##;;;;;;;;;;##        
                       ##!!!!!!!!!!##        
                       ##\\\\\\\\\\##        
                       ##rrrrrrrrrr##        
                       ##############        
                                             
            </code>
            		</para>
            	</para>
            </summary>
            <remarks>
            	<para>For details on Themed Icons and their use, see Remarks on the outer class.</para>
            </remarks>
            <example>
            	<code>&lt;Image Source="{icons:ThemedIcon myres:FeaturesDiagrammingThemedIcons+TypeLayout}" /&gt;        &lt;!-- XAML --&gt;</code>
            </example>
            <example>
            	<code>[Item(Name="Sample", Icon=typeof(FeaturesDiagrammingThemedIcons.TypeLayout))]        // C# Type attribute</code>
            </example>
            <example>
            	<code>IconId iconid = FeaturesDiagrammingThemedIcons.TypeLayout.Id;        // IconId identifier object</code>
            </example>
            <example>
            	<code>themediconmanager.GetIcon&lt;FeaturesDiagrammingThemedIcons.TypeLayout&gt;()        // Icon image for rendering</code>
            </example>
        </member>
        <member name="F:JetBrains.ReSharper.Features.Diagramming.Resources.FeaturesDiagrammingThemedIcons.TypeLayout.Id">
            <inheritdoc cref="T:JetBrains.ReSharper.Features.Diagramming.Resources.FeaturesDiagrammingThemedIcons.TypeLayout">identifier class</inheritdoc>
        </member>
        <member name="M:JetBrains.ReSharper.Features.Diagramming.Resources.FeaturesDiagrammingThemedIcons.TypeLayout.Load_Color">
            <summary>Loads the image for Themed Icon TypeLayout theme aspect Color.</summary>
        </member>
        <member name="M:JetBrains.ReSharper.Features.Diagramming.Resources.FeaturesDiagrammingThemedIcons.TypeLayout.Load_Gray">
            <summary>Loads the image for Themed Icon TypeLayout theme aspect Gray.</summary>
        </member>
        <member name="M:JetBrains.ReSharper.Features.Diagramming.Resources.FeaturesDiagrammingThemedIcons.TypeLayout.Load_GrayDark">
            <summary>Loads the image for Themed Icon TypeLayout theme aspect GrayDark.</summary>
        </member>
        <member name="M:JetBrains.ReSharper.Features.Diagramming.Resources.FeaturesDiagrammingThemedIcons.TypeLayout.GetThemeImages">
            <summary>Returns the set of theme images for Themed Icon TypeLayout.</summary>
        </member>
        <member name="T:JetBrains.Diagramming.Resources.DiagrammingThemedIcons">
             <summary>
            	<para>
            		<para>Autogenerated identifier classes and identifier objects to Themed Icons registered with <see cref="T:JetBrains.Application.Icons.IThemedIconManager"></see>.</para>
            		<para>Identifier classes should be used in attributes, XAML, or generic parameters. Where an <see cref="T:JetBrains.UI.Icons.IconId"></see> value is expected, use the identifier object in the <c>Id</c> field of the identifier class.</para>
            	</para>
            </summary>
            <remarks>
            	<para>This code was compile-time generated to support Themed Icons in the JetBrains application.</para>
            	<para>It has two primary goals: load the icons of this assembly to be registered with <see cref="T:JetBrains.Application.Icons.IThemedIconManager"></see> so that they were WPF-accessible and theme-sensitive; and emit early-bound accessors for referencing icons in codebehind in a compile-time-validated manner.</para>
            	<h1>XAML</h1>
            	<para>For performance reasons, the icons are not individually exposed with application resources. There is a custom markup extension to bind an image source in markup.</para>
            	<para>To use an icon from XAML, set an <see cref="T:System.Windows.Media.ImageSource"></see> property to the <see cref="T:System.CodeDom.CodeTypeReference"></see> markup extension, which takes an icon identifier class (nested in <see cref="T:JetBrains.Diagramming.Resources.DiagrammingThemedIcons"></see> class) as a parameter.</para>
            	<para>Example:</para>
            	<code>&lt;Image Source="{icons:ThemedIcon myres:DiagrammingThemedIcons+Trinity}" /&gt;</code>
            	<h1>Attributes</h1>
            	<para>Sometimes you have to reference an icon from a type attriute when you're defining objects in code. Typical examples are Options pages and Tool Windows.</para>
            	<para>To avoid the use of string IDs which are not validated very well, we've emitted identifier classes to be used with <c>typeof()</c> expression, one per each icon. Use the attribute overload which takes a <see cref="T:System.Type"></see> for an image, and choose your icon class from nested classes in the <see cref="T:JetBrains.Diagramming.Resources.DiagrammingThemedIcons"></see> class.</para>
            	<para>Example:</para>
            	<code>[Item(Name="Sample", Icon=typeof(DiagrammingThemedIcons.Trinity))]</code>
            	<h1>CodeBehind</h1>
            	<para>In codebehind, we have two distinct tasks: (a) specify some icon in the APIs and (b) render icon images onscreen.</para>
            	<para>On the APIs stage you should only manipulate icon identifier objects (of type <see cref="T:JetBrains.UI.Icons.IconId"></see>, statically defined in <see cref="T:JetBrains.Diagramming.Resources.DiagrammingThemedIcons"></see> in <c>Id</c> fields). Icon identifier classes (nested in <see cref="T:JetBrains.Diagramming.Resources.DiagrammingThemedIcons"></see>) should be turned into icon identifier objects as early as possible. Rendering is about getting an <see cref="T:System.Windows.Media.ImageSource"></see> to assign to WPF, or <see cref="T:System.Drawing.Bitmap"></see> to use with GDI+ / Windows Forms.</para>
            	<para>You should turn an identifier object into a rendered image as late as possible. The identifier is static and lightweight and does not depend on the current theme, while the image is themed and has to be loaded or generated/rasterized. You need an <see cref="T:JetBrains.Application.Icons.IThemedIconManager"></see> instance to get the image out of an icon identifier object. Once you got the image, you should take care to change it with theme changes — either by using a live image property, or by listening to the theme change event. See <see cref="T:JetBrains.Application.Icons.IThemedIconManager"></see> and its extensions for the related facilities.</para>
            	<para>Example:</para>
            	<code>// Getting IconId identifier object to use with APIs
            IconId iconid = DiagrammingThemedIcons.Trinity.Id;</code>
            	<code>// Getting IconId out of an Icon Identifier Class type
            IconId iconid = new JetBrains.Application.Icons.CompiledIconsCs.CompiledIconCsId(typeof(DiagrammingThemedIcons.Trinity));</code>
            	<code>// Getting image for screen rendering by IconId
            themediconmanager.Icons[icnoid]</code>
            	<code>// Getting image for screen rendering by Icon Identifier Class
            themediconmanager.GetIcon&lt;DiagrammingThemedIcons.Trinity&gt;()</code>
            	<h1>Icons Origin</h1>
            	<para>This code was generated by a pre-compile build task from a set of input files which are XAML files adhering to a certain convention, as convenient for exporting them from the Illustrator workspace, plus separate PNG files with raster icons. In the projects, these files are designated with <c>ThemedIconsXamlV3</c> and <c>ThemedIconPng</c> build actions and do not themselves get into the output assembly. All of such files are processed, vector images for different themes of the same icon are split and combined into the single list of icons in this assembly. This list is then written into the genearted XAML file (compiled into BAML within assembly), and serves as the source for this generated code.</para>
            </remarks>
        </member>
        <member name="T:JetBrains.Diagramming.Resources.DiagrammingThemedIcons.ArchScrollDown">
             <summary>
            	<para>
            		<para>ArchScrollDown Themed Icon generated identifiers:</para>
            		<para>— <see cref="T:JetBrains.Diagramming.Resources.DiagrammingThemedIcons.ArchScrollDown"></see> identifier class, for use in attributes, XAML, and generic parameters;</para>
            		<para>— <see cref="F:JetBrains.Diagramming.Resources.DiagrammingThemedIcons.ArchScrollDown.Id"></see> identifier object, as a field in the identifier class, for use where an <see cref="T:JetBrains.UI.Icons.IconId"></see> value is expected.</para>
            		<para>
            			<code>
                                             
                                             
                                             
                   LLL~`          `"?LL      
                   cc.!c~`      `"L!.cc      
                   ||  -\)~`  `^c\-  ||      
                   TT    -+T=~|+-    TT      
                   77``````_rr_``````77      
                   !i\-............-\i*      
                    ./l+_''''''''_+l+'       
                      .\}r,----,r}r-         
                        .*FL^^LFr-           
                          .+11?-             
                                             
                                             
                                             
            </code>
            		</para>
            	</para>
            </summary>
            <remarks>
            	<para>For details on Themed Icons and their use, see Remarks on the outer class.</para>
            </remarks>
            <example>
            	<code>&lt;Image Source="{icons:ThemedIcon myres:DiagrammingThemedIcons+ArchScrollDown}" /&gt;        &lt;!-- XAML --&gt;</code>
            </example>
            <example>
            	<code>[Item(Name="Sample", Icon=typeof(DiagrammingThemedIcons.ArchScrollDown))]        // C# Type attribute</code>
            </example>
            <example>
            	<code>IconId iconid = DiagrammingThemedIcons.ArchScrollDown.Id;        // IconId identifier object</code>
            </example>
            <example>
            	<code>themediconmanager.GetIcon&lt;DiagrammingThemedIcons.ArchScrollDown&gt;()        // Icon image for rendering</code>
            </example>
        </member>
        <member name="F:JetBrains.Diagramming.Resources.DiagrammingThemedIcons.ArchScrollDown.Id">
            <inheritdoc cref="T:JetBrains.Diagramming.Resources.DiagrammingThemedIcons.ArchScrollDown">identifier class</inheritdoc>
        </member>
        <member name="M:JetBrains.Diagramming.Resources.DiagrammingThemedIcons.ArchScrollDown.Load_Color">
            <summary>Loads the image for Themed Icon ArchScrollDown theme aspect Color.</summary>
        </member>
        <member name="M:JetBrains.Diagramming.Resources.DiagrammingThemedIcons.ArchScrollDown.Load_Gray">
            <summary>Loads the image for Themed Icon ArchScrollDown theme aspect Gray.</summary>
        </member>
        <member name="M:JetBrains.Diagramming.Resources.DiagrammingThemedIcons.ArchScrollDown.Load_GrayDark">
            <summary>Loads the image for Themed Icon ArchScrollDown theme aspect GrayDark.</summary>
        </member>
        <member name="M:JetBrains.Diagramming.Resources.DiagrammingThemedIcons.ArchScrollDown.GetThemeImages">
            <summary>Returns the set of theme images for Themed Icon ArchScrollDown.</summary>
        </member>
        <member name="T:JetBrains.Diagramming.Resources.DiagrammingThemedIcons.ArchScrollUp">
             <summary>
            	<para>
            		<para>ArchScrollUp Themed Icon generated identifiers:</para>
            		<para>— <see cref="T:JetBrains.Diagramming.Resources.DiagrammingThemedIcons.ArchScrollUp"></see> identifier class, for use in attributes, XAML, and generic parameters;</para>
            		<para>— <see cref="F:JetBrains.Diagramming.Resources.DiagrammingThemedIcons.ArchScrollUp.Id"></see> identifier object, as a field in the identifier class, for use where an <see cref="T:JetBrains.UI.Icons.IconId"></see> value is expected.</para>
            		<para>
            			<code>
                                             
                                             
                                             
                          `"?L~`             
                        `"L!..!c~`           
                      `^c\-    -\)~`         
                    `~|+-        -+T=`       
                   ~Tr_````````````_rT=      
                   ii......-\\-......ii      
                   ll''''_+l+/l+_''''ll      
                   }}--,r}r-  .\}r,--}}      
                   FF^LFr-      .*FL^FF      
                   111?-          .+111      
                                             
                                             
                                             
            </code>
            		</para>
            	</para>
            </summary>
            <remarks>
            	<para>For details on Themed Icons and their use, see Remarks on the outer class.</para>
            </remarks>
            <example>
            	<code>&lt;Image Source="{icons:ThemedIcon myres:DiagrammingThemedIcons+ArchScrollUp}" /&gt;        &lt;!-- XAML --&gt;</code>
            </example>
            <example>
            	<code>[Item(Name="Sample", Icon=typeof(DiagrammingThemedIcons.ArchScrollUp))]        // C# Type attribute</code>
            </example>
            <example>
            	<code>IconId iconid = DiagrammingThemedIcons.ArchScrollUp.Id;        // IconId identifier object</code>
            </example>
            <example>
            	<code>themediconmanager.GetIcon&lt;DiagrammingThemedIcons.ArchScrollUp&gt;()        // Icon image for rendering</code>
            </example>
        </member>
        <member name="F:JetBrains.Diagramming.Resources.DiagrammingThemedIcons.ArchScrollUp.Id">
            <inheritdoc cref="T:JetBrains.Diagramming.Resources.DiagrammingThemedIcons.ArchScrollUp">identifier class</inheritdoc>
        </member>
        <member name="M:JetBrains.Diagramming.Resources.DiagrammingThemedIcons.ArchScrollUp.Load_Color">
            <summary>Loads the image for Themed Icon ArchScrollUp theme aspect Color.</summary>
        </member>
        <member name="M:JetBrains.Diagramming.Resources.DiagrammingThemedIcons.ArchScrollUp.Load_Gray">
            <summary>Loads the image for Themed Icon ArchScrollUp theme aspect Gray.</summary>
        </member>
        <member name="M:JetBrains.Diagramming.Resources.DiagrammingThemedIcons.ArchScrollUp.Load_GrayDark">
            <summary>Loads the image for Themed Icon ArchScrollUp theme aspect GrayDark.</summary>
        </member>
        <member name="M:JetBrains.Diagramming.Resources.DiagrammingThemedIcons.ArchScrollUp.GetThemeImages">
            <summary>Returns the set of theme images for Themed Icon ArchScrollUp.</summary>
        </member>
        <member name="T:JetBrains.Diagramming.Resources.DiagrammingThemedIcons.CollapseGraph">
             <summary>
            	<para>
            		<para>CollapseGraph Themed Icon generated identifiers:</para>
            		<para>— <see cref="T:JetBrains.Diagramming.Resources.DiagrammingThemedIcons.CollapseGraph"></see> identifier class, for use in attributes, XAML, and generic parameters;</para>
            		<para>— <see cref="F:JetBrains.Diagramming.Resources.DiagrammingThemedIcons.CollapseGraph.Id"></see> identifier object, as a field in the identifier class, for use where an <see cref="T:JetBrains.UI.Icons.IconId"></see> value is expected.</para>
            		<para>
            			<code>
                                             
                 EEEEEEEEEEEEEEEEEEEEEEEEEE  
                 UU                      UU  
                 66  ,,,,,,,,,,,,,,,,,,  66  
                 ww``__XXXXXX__XXXXXX__``ww  
                 dd``--OO  OO--OO  OO--``dd  
                 GG``..888888..888888..``GG  
                 OO..``````````````````..OO  
                 RR..``XXXXXX``XXXXXX``..RR  
                 DD--  OO  OO  OO  OO  --DD  
                 DD--  888888  888888  --DD  
                 88--                  --88  
                 %%______________________%%  
                 NNNNNNNNNNNNNNNNNNNNNNNNNN  
                                             
                                             
            </code>
            		</para>
            	</para>
            </summary>
            <remarks>
            	<para>For details on Themed Icons and their use, see Remarks on the outer class.</para>
            </remarks>
            <example>
            	<code>&lt;Image Source="{icons:ThemedIcon myres:DiagrammingThemedIcons+CollapseGraph}" /&gt;        &lt;!-- XAML --&gt;</code>
            </example>
            <example>
            	<code>[Item(Name="Sample", Icon=typeof(DiagrammingThemedIcons.CollapseGraph))]        // C# Type attribute</code>
            </example>
            <example>
            	<code>IconId iconid = DiagrammingThemedIcons.CollapseGraph.Id;        // IconId identifier object</code>
            </example>
            <example>
            	<code>themediconmanager.GetIcon&lt;DiagrammingThemedIcons.CollapseGraph&gt;()        // Icon image for rendering</code>
            </example>
        </member>
        <member name="F:JetBrains.Diagramming.Resources.DiagrammingThemedIcons.CollapseGraph.Id">
            <inheritdoc cref="T:JetBrains.Diagramming.Resources.DiagrammingThemedIcons.CollapseGraph">identifier class</inheritdoc>
        </member>
        <member name="M:JetBrains.Diagramming.Resources.DiagrammingThemedIcons.CollapseGraph.Load_Color">
            <summary>Loads the image for Themed Icon CollapseGraph theme aspect Color.</summary>
        </member>
        <member name="M:JetBrains.Diagramming.Resources.DiagrammingThemedIcons.CollapseGraph.Load_Gray">
            <summary>Loads the image for Themed Icon CollapseGraph theme aspect Gray.</summary>
        </member>
        <member name="M:JetBrains.Diagramming.Resources.DiagrammingThemedIcons.CollapseGraph.Load_GrayDark">
            <summary>Loads the image for Themed Icon CollapseGraph theme aspect GrayDark.</summary>
        </member>
        <member name="M:JetBrains.Diagramming.Resources.DiagrammingThemedIcons.CollapseGraph.GetThemeImages">
            <summary>Returns the set of theme images for Themed Icon CollapseGraph.</summary>
        </member>
        <member name="T:JetBrains.Diagramming.Resources.DiagrammingThemedIcons.ExpandGraph">
             <summary>
            	<para>
            		<para>ExpandGraph Themed Icon generated identifiers:</para>
            		<para>— <see cref="T:JetBrains.Diagramming.Resources.DiagrammingThemedIcons.ExpandGraph"></see> identifier class, for use in attributes, XAML, and generic parameters;</para>
            		<para>— <see cref="F:JetBrains.Diagramming.Resources.DiagrammingThemedIcons.ExpandGraph.Id"></see> identifier object, as a field in the identifier class, for use where an <see cref="T:JetBrains.UI.Icons.IconId"></see> value is expected.</para>
            		<para>
            			<code>
             PPPPPPPPPPPPPP    PPPPPPPPPPPPPP
             44          44    44          44
             dd``------``dd6666dd``------``dd
             OO..``````..OO    OO..``````..OO
             DD--      --DD8888DD--      --DD
             88__________88    88__________88
             WWWWWWWWWWWWWW    WWWWWWWWWWWWWW
                 99  99            99  99    
                 DD  DD            DD  DD    
             PPPPPPPPPPPPPP    PPPPPPPPPPPPPP
             44          44    44          44
             dd``------``dd6666dd``------``dd
             OO..``````..OO    OO..``````..OO
             DD--      --DD8888DD--      --DD
             88__________88    88__________88
             WWWWWWWWWWWWWW    WWWWWWWWWWWWWW
            </code>
            		</para>
            	</para>
            </summary>
            <remarks>
            	<para>For details on Themed Icons and their use, see Remarks on the outer class.</para>
            </remarks>
            <example>
            	<code>&lt;Image Source="{icons:ThemedIcon myres:DiagrammingThemedIcons+ExpandGraph}" /&gt;        &lt;!-- XAML --&gt;</code>
            </example>
            <example>
            	<code>[Item(Name="Sample", Icon=typeof(DiagrammingThemedIcons.ExpandGraph))]        // C# Type attribute</code>
            </example>
            <example>
            	<code>IconId iconid = DiagrammingThemedIcons.ExpandGraph.Id;        // IconId identifier object</code>
            </example>
            <example>
            	<code>themediconmanager.GetIcon&lt;DiagrammingThemedIcons.ExpandGraph&gt;()        // Icon image for rendering</code>
            </example>
        </member>
        <member name="F:JetBrains.Diagramming.Resources.DiagrammingThemedIcons.ExpandGraph.Id">
            <inheritdoc cref="T:JetBrains.Diagramming.Resources.DiagrammingThemedIcons.ExpandGraph">identifier class</inheritdoc>
        </member>
        <member name="M:JetBrains.Diagramming.Resources.DiagrammingThemedIcons.ExpandGraph.Load_Color">
            <summary>Loads the image for Themed Icon ExpandGraph theme aspect Color.</summary>
        </member>
        <member name="M:JetBrains.Diagramming.Resources.DiagrammingThemedIcons.ExpandGraph.Load_Gray">
            <summary>Loads the image for Themed Icon ExpandGraph theme aspect Gray.</summary>
        </member>
        <member name="M:JetBrains.Diagramming.Resources.DiagrammingThemedIcons.ExpandGraph.Load_GrayDark">
            <summary>Loads the image for Themed Icon ExpandGraph theme aspect GrayDark.</summary>
        </member>
        <member name="M:JetBrains.Diagramming.Resources.DiagrammingThemedIcons.ExpandGraph.GetThemeImages">
            <summary>Returns the set of theme images for Themed Icon ExpandGraph.</summary>
        </member>
        <member name="T:JetBrains.Diagramming.Resources.DiagrammingThemedIcons.GraphDiff">
             <summary>
            	<para>
            		<para>GraphDiff Themed Icon generated identifiers:</para>
            		<para>— <see cref="T:JetBrains.Diagramming.Resources.DiagrammingThemedIcons.GraphDiff"></see> identifier class, for use in attributes, XAML, and generic parameters;</para>
            		<para>— <see cref="F:JetBrains.Diagramming.Resources.DiagrammingThemedIcons.GraphDiff.Id"></see> identifier object, as a field in the identifier class, for use where an <see cref="T:JetBrains.UI.Icons.IconId"></see> value is expected.</para>
            		<para>
            			<code>
             EEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEE
             UU        UU        UU        UU
             66``----``66``----``66``----``66
             bb..    ..bb..    ..bb..    ..bb
             HH--------HH--------HH--------HH
             OOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOO
             RR        RR        RR        RR
             DD``----``DD``----``DD``----``DD
             88..    ..88..    ..88..    ..88
             88--------88--------88--------88
             MMMMMMMMMMRRRRRRRRRRRRRRRRRRRRRR
                       DD........DD........DD
                       88--____--88--____--88
                       MM__    __MM__    __MM
                       $$::::::::$$::::::::$$
                       QQQQQQQQQQQQQQQQQQQQQQ
            </code>
            		</para>
            	</para>
            </summary>
            <remarks>
            	<para>For details on Themed Icons and their use, see Remarks on the outer class.</para>
            </remarks>
            <example>
            	<code>&lt;Image Source="{icons:ThemedIcon myres:DiagrammingThemedIcons+GraphDiff}" /&gt;        &lt;!-- XAML --&gt;</code>
            </example>
            <example>
            	<code>[Item(Name="Sample", Icon=typeof(DiagrammingThemedIcons.GraphDiff))]        // C# Type attribute</code>
            </example>
            <example>
            	<code>IconId iconid = DiagrammingThemedIcons.GraphDiff.Id;        // IconId identifier object</code>
            </example>
            <example>
            	<code>themediconmanager.GetIcon&lt;DiagrammingThemedIcons.GraphDiff&gt;()        // Icon image for rendering</code>
            </example>
        </member>
        <member name="F:JetBrains.Diagramming.Resources.DiagrammingThemedIcons.GraphDiff.Id">
            <inheritdoc cref="T:JetBrains.Diagramming.Resources.DiagrammingThemedIcons.GraphDiff">identifier class</inheritdoc>
        </member>
        <member name="M:JetBrains.Diagramming.Resources.DiagrammingThemedIcons.GraphDiff.Load_Color">
            <summary>Loads the image for Themed Icon GraphDiff theme aspect Color.</summary>
        </member>
        <member name="M:JetBrains.Diagramming.Resources.DiagrammingThemedIcons.GraphDiff.Load_Gray">
            <summary>Loads the image for Themed Icon GraphDiff theme aspect Gray.</summary>
        </member>
        <member name="M:JetBrains.Diagramming.Resources.DiagrammingThemedIcons.GraphDiff.Load_GrayDark">
            <summary>Loads the image for Themed Icon GraphDiff theme aspect GrayDark.</summary>
        </member>
        <member name="M:JetBrains.Diagramming.Resources.DiagrammingThemedIcons.GraphDiff.GetThemeImages">
            <summary>Returns the set of theme images for Themed Icon GraphDiff.</summary>
        </member>
        <member name="T:JetBrains.Diagramming.Resources.DiagrammingThemedIcons.MetricDisplay">
             <summary>
            	<para>
            		<para>MetricDisplay Themed Icon generated identifiers:</para>
            		<para>— <see cref="T:JetBrains.Diagramming.Resources.DiagrammingThemedIcons.MetricDisplay"></see> identifier class, for use in attributes, XAML, and generic parameters;</para>
            		<para>— <see cref="F:JetBrains.Diagramming.Resources.DiagrammingThemedIcons.MetricDisplay.Id"></see> identifier object, as a field in the identifier class, for use where an <see cref="T:JetBrains.UI.Icons.IconId"></see> value is expected.</para>
            		<para>
            			<code>
                         "\)tj665{)+^        
                      ^lRZr="-``-,=+yRC~     
                    +#X+-            ./EDT`  
                  `6D\  ``````````````  =RG' 
                 `w8~`````'ZD``.tiot-````,DO`
                 L%|`````-XT8``````a}`````/%}
                 6M".```_O;~M`````.9T````.-MD
                 bN,-..~R!.~$....-oI.....--N8
                 70)--'NRuukQu_'"Hc'''''--+02
                 ,$8__-----=g--+$Gooo---_~D8-
                `DN!:::_--------------_:*D%: 
               `O$L"""""",___----___,^cX$k'  
              `6Qi^^^^^^=?TL*;^^=*LiX$Hc'    
              SQI~~~\lkDQHu6RMQQ%Ok1r'       
             CgP)ub$$kc"`                    
             gggD3/-                         
            </code>
            		</para>
            	</para>
            </summary>
            <remarks>
            	<para>For details on Themed Icons and their use, see Remarks on the outer class.</para>
            </remarks>
            <example>
            	<code>&lt;Image Source="{icons:ThemedIcon myres:DiagrammingThemedIcons+MetricDisplay}" /&gt;        &lt;!-- XAML --&gt;</code>
            </example>
            <example>
            	<code>[Item(Name="Sample", Icon=typeof(DiagrammingThemedIcons.MetricDisplay))]        // C# Type attribute</code>
            </example>
            <example>
            	<code>IconId iconid = DiagrammingThemedIcons.MetricDisplay.Id;        // IconId identifier object</code>
            </example>
            <example>
            	<code>themediconmanager.GetIcon&lt;DiagrammingThemedIcons.MetricDisplay&gt;()        // Icon image for rendering</code>
            </example>
        </member>
        <member name="F:JetBrains.Diagramming.Resources.DiagrammingThemedIcons.MetricDisplay.Id">
            <inheritdoc cref="T:JetBrains.Diagramming.Resources.DiagrammingThemedIcons.MetricDisplay">identifier class</inheritdoc>
        </member>
        <member name="M:JetBrains.Diagramming.Resources.DiagrammingThemedIcons.MetricDisplay.Load_Color">
            <summary>Loads the image for Themed Icon MetricDisplay theme aspect Color.</summary>
        </member>
        <member name="M:JetBrains.Diagramming.Resources.DiagrammingThemedIcons.MetricDisplay.Load_Gray">
            <summary>Loads the image for Themed Icon MetricDisplay theme aspect Gray.</summary>
        </member>
        <member name="M:JetBrains.Diagramming.Resources.DiagrammingThemedIcons.MetricDisplay.Load_GrayDark">
            <summary>Loads the image for Themed Icon MetricDisplay theme aspect GrayDark.</summary>
        </member>
        <member name="M:JetBrains.Diagramming.Resources.DiagrammingThemedIcons.MetricDisplay.GetThemeImages">
            <summary>Returns the set of theme images for Themed Icon MetricDisplay.</summary>
        </member>
        <member name="T:JetBrains.Diagramming.Resources.DiagrammingThemedIcons.PossiblePaths">
             <summary>
            	<para>
            		<para>PossiblePaths Themed Icon generated identifiers:</para>
            		<para>— <see cref="T:JetBrains.Diagramming.Resources.DiagrammingThemedIcons.PossiblePaths"></see> identifier class, for use in attributes, XAML, and generic parameters;</para>
            		<para>— <see cref="F:JetBrains.Diagramming.Resources.DiagrammingThemedIcons.PossiblePaths.Id"></see> identifier object, as a field in the identifier class, for use where an <see cref="T:JetBrains.UI.Icons.IconId"></see> value is expected.</para>
            		<para>
            			<code>
             EEEEEEEEEEEEEE                  
             XX  EE  EE  XX      EEEEEEEEEE  
             ww9999999999wwXXXXXX99      99  
             GG``GGGGGG``GG``GG``GG``````GG  
             RRDDDDDDDDDDRRDDDDDDDD''''''DD  
             DD--88--88--DD      8888888888  
             %%%%%%%%%%%%%%        DD__DD    
                 bb  bb           .D#_,DA    
                 RRRRRR           |Dt_+DC    
                 88''88         `}Dl:~bA'    
               EEEEEEEEEE   `-~}mE+_!bA_     
               99      99DDDdZ5|~,+oDt.      
               GG``````GG___^=/ru#S+.        
               DD''''''DDDDDwSCT/.           
               8888888888                    
                                             
            </code>
            		</para>
            	</para>
            </summary>
            <remarks>
            	<para>For details on Themed Icons and their use, see Remarks on the outer class.</para>
            </remarks>
            <example>
            	<code>&lt;Image Source="{icons:ThemedIcon myres:DiagrammingThemedIcons+PossiblePaths}" /&gt;        &lt;!-- XAML --&gt;</code>
            </example>
            <example>
            	<code>[Item(Name="Sample", Icon=typeof(DiagrammingThemedIcons.PossiblePaths))]        // C# Type attribute</code>
            </example>
            <example>
            	<code>IconId iconid = DiagrammingThemedIcons.PossiblePaths.Id;        // IconId identifier object</code>
            </example>
            <example>
            	<code>themediconmanager.GetIcon&lt;DiagrammingThemedIcons.PossiblePaths&gt;()        // Icon image for rendering</code>
            </example>
        </member>
        <member name="F:JetBrains.Diagramming.Resources.DiagrammingThemedIcons.PossiblePaths.Id">
            <inheritdoc cref="T:JetBrains.Diagramming.Resources.DiagrammingThemedIcons.PossiblePaths">identifier class</inheritdoc>
        </member>
        <member name="M:JetBrains.Diagramming.Resources.DiagrammingThemedIcons.PossiblePaths.Load_Color">
            <summary>Loads the image for Themed Icon PossiblePaths theme aspect Color.</summary>
        </member>
        <member name="M:JetBrains.Diagramming.Resources.DiagrammingThemedIcons.PossiblePaths.Load_Gray">
            <summary>Loads the image for Themed Icon PossiblePaths theme aspect Gray.</summary>
        </member>
        <member name="M:JetBrains.Diagramming.Resources.DiagrammingThemedIcons.PossiblePaths.Load_GrayDark">
            <summary>Loads the image for Themed Icon PossiblePaths theme aspect GrayDark.</summary>
        </member>
        <member name="M:JetBrains.Diagramming.Resources.DiagrammingThemedIcons.PossiblePaths.GetThemeImages">
            <summary>Returns the set of theme images for Themed Icon PossiblePaths.</summary>
        </member>
        <member name="T:JetBrains.Diagramming.Resources.DiagrammingThemedIcons.SaveGraph">
             <summary>
            	<para>
            		<para>SaveGraph Themed Icon generated identifiers:</para>
            		<para>— <see cref="T:JetBrains.Diagramming.Resources.DiagrammingThemedIcons.SaveGraph"></see> identifier class, for use in attributes, XAML, and generic parameters;</para>
            		<para>— <see cref="F:JetBrains.Diagramming.Resources.DiagrammingThemedIcons.SaveGraph.Id"></see> identifier object, as a field in the identifier class, for use where an <see cref="T:JetBrains.UI.Icons.IconId"></see> value is expected.</para>
            		<para>
            			<code>
                 IIIIIIIIIIIIIIIIIIIIII1/`   
                 uu~~~~~~``````tttt``~~*tu/` 
                 jj~~~~~~``````tttt``~~~~+Yo*
                 aa~~~~~~``````tttt``~~~~~~aa
                 VV~~~~~~````````````~~~~~~VV
                 EE======............======EE
                 UU========================UU
             EEEEEEEEEEEEEEEEEE============66
             XX``````XX``````XX        ====ww
             99``DD``99``DD``99        ====bb
             HH------HH------HH        ====GG
             AAAAAAAAAAAAAAAAAA        ====##
             RR``````RR``````RR--------====RR
             DD``DD``DD``DD``DDDDDDDDDDDDDDDD
             88------88------88              
             WWWWWWWWWWWWWWWWWW              
            </code>
            		</para>
            	</para>
            </summary>
            <remarks>
            	<para>For details on Themed Icons and their use, see Remarks on the outer class.</para>
            </remarks>
            <example>
            	<code>&lt;Image Source="{icons:ThemedIcon myres:DiagrammingThemedIcons+SaveGraph}" /&gt;        &lt;!-- XAML --&gt;</code>
            </example>
            <example>
            	<code>[Item(Name="Sample", Icon=typeof(DiagrammingThemedIcons.SaveGraph))]        // C# Type attribute</code>
            </example>
            <example>
            	<code>IconId iconid = DiagrammingThemedIcons.SaveGraph.Id;        // IconId identifier object</code>
            </example>
            <example>
            	<code>themediconmanager.GetIcon&lt;DiagrammingThemedIcons.SaveGraph&gt;()        // Icon image for rendering</code>
            </example>
        </member>
        <member name="F:JetBrains.Diagramming.Resources.DiagrammingThemedIcons.SaveGraph.Id">
            <inheritdoc cref="T:JetBrains.Diagramming.Resources.DiagrammingThemedIcons.SaveGraph">identifier class</inheritdoc>
        </member>
        <member name="M:JetBrains.Diagramming.Resources.DiagrammingThemedIcons.SaveGraph.Load_Color">
            <summary>Loads the image for Themed Icon SaveGraph theme aspect Color.</summary>
        </member>
        <member name="M:JetBrains.Diagramming.Resources.DiagrammingThemedIcons.SaveGraph.Load_Gray">
            <summary>Loads the image for Themed Icon SaveGraph theme aspect Gray.</summary>
        </member>
        <member name="M:JetBrains.Diagramming.Resources.DiagrammingThemedIcons.SaveGraph.Load_GrayDark">
            <summary>Loads the image for Themed Icon SaveGraph theme aspect GrayDark.</summary>
        </member>
        <member name="M:JetBrains.Diagramming.Resources.DiagrammingThemedIcons.SaveGraph.GetThemeImages">
            <summary>Returns the set of theme images for Themed Icon SaveGraph.</summary>
        </member>
        <member name="T:JetBrains.Diagramming.Resources.DiagrammingThemedIcons.ScrollLeft">
             <summary>
            	<para>
            		<para>ScrollLeft Themed Icon generated identifiers:</para>
            		<para>— <see cref="T:JetBrains.Diagramming.Resources.DiagrammingThemedIcons.ScrollLeft"></see> identifier class, for use in attributes, XAML, and generic parameters;</para>
            		<para>— <see cref="F:JetBrains.Diagramming.Resources.DiagrammingThemedIcons.ScrollLeft.Id"></see> identifier object, as a field in the identifier class, for use where an <see cref="T:JetBrains.UI.Icons.IconId"></see> value is expected.</para>
            		<para>
            			<code>
                                             
                                             
                                             
                          `"ccccccccccc      
                        `^c\-      `=|!      
                      `~|+-      .;T/.       
                    `~Tr_``````-!7/'         
                   ~7r,``````-/i+'           
                   /l+_......"LJ;`           
                    ./tr,------~)t!`         
                      .+FL"______=T{!`       
                        .+xc~::::::;zC!      
                          .+IIIIIIIIIII      
                                             
                                             
                                             
            </code>
            		</para>
            	</para>
            </summary>
            <remarks>
            	<para>For details on Themed Icons and their use, see Remarks on the outer class.</para>
            </remarks>
            <example>
            	<code>&lt;Image Source="{icons:ThemedIcon myres:DiagrammingThemedIcons+ScrollLeft}" /&gt;        &lt;!-- XAML --&gt;</code>
            </example>
            <example>
            	<code>[Item(Name="Sample", Icon=typeof(DiagrammingThemedIcons.ScrollLeft))]        // C# Type attribute</code>
            </example>
            <example>
            	<code>IconId iconid = DiagrammingThemedIcons.ScrollLeft.Id;        // IconId identifier object</code>
            </example>
            <example>
            	<code>themediconmanager.GetIcon&lt;DiagrammingThemedIcons.ScrollLeft&gt;()        // Icon image for rendering</code>
            </example>
        </member>
        <member name="F:JetBrains.Diagramming.Resources.DiagrammingThemedIcons.ScrollLeft.Id">
            <inheritdoc cref="T:JetBrains.Diagramming.Resources.DiagrammingThemedIcons.ScrollLeft">identifier class</inheritdoc>
        </member>
        <member name="M:JetBrains.Diagramming.Resources.DiagrammingThemedIcons.ScrollLeft.Load_Color">
            <summary>Loads the image for Themed Icon ScrollLeft theme aspect Color.</summary>
        </member>
        <member name="M:JetBrains.Diagramming.Resources.DiagrammingThemedIcons.ScrollLeft.Load_Gray">
            <summary>Loads the image for Themed Icon ScrollLeft theme aspect Gray.</summary>
        </member>
        <member name="M:JetBrains.Diagramming.Resources.DiagrammingThemedIcons.ScrollLeft.Load_GrayDark">
            <summary>Loads the image for Themed Icon ScrollLeft theme aspect GrayDark.</summary>
        </member>
        <member name="M:JetBrains.Diagramming.Resources.DiagrammingThemedIcons.ScrollLeft.GetThemeImages">
            <summary>Returns the set of theme images for Themed Icon ScrollLeft.</summary>
        </member>
        <member name="T:JetBrains.Diagramming.Resources.DiagrammingThemedIcons.ScrollRight">
             <summary>
            	<para>
            		<para>ScrollRight Themed Icon generated identifiers:</para>
            		<para>— <see cref="T:JetBrains.Diagramming.Resources.DiagrammingThemedIcons.ScrollRight"></see> identifier class, for use in attributes, XAML, and generic parameters;</para>
            		<para>— <see cref="F:JetBrains.Diagramming.Resources.DiagrammingThemedIcons.ScrollRight.Id"></see> identifier object, as a field in the identifier class, for use where an <see cref="T:JetBrains.UI.Icons.IconId"></see> value is expected.</para>
            		<para>
            			<code>
                                             
                                             
                                             
                   ccccccccccc~`             
                   =|=`      -\)~`           
                    `;T;.      -+T=`         
                      `!7!-``````_r7=`       
                        `!i/-``````,rs=      
                        `~sL"......_+l+      
                      `=l)~------,rt+-       
                    `=}T=______"LFr-         
                   =Fz;::::::~cxr-           
                   IIIIIIIIIIIL-             
                                             
                                             
                                             
            </code>
            		</para>
            	</para>
            </summary>
            <remarks>
            	<para>For details on Themed Icons and their use, see Remarks on the outer class.</para>
            </remarks>
            <example>
            	<code>&lt;Image Source="{icons:ThemedIcon myres:DiagrammingThemedIcons+ScrollRight}" /&gt;        &lt;!-- XAML --&gt;</code>
            </example>
            <example>
            	<code>[Item(Name="Sample", Icon=typeof(DiagrammingThemedIcons.ScrollRight))]        // C# Type attribute</code>
            </example>
            <example>
            	<code>IconId iconid = DiagrammingThemedIcons.ScrollRight.Id;        // IconId identifier object</code>
            </example>
            <example>
            	<code>themediconmanager.GetIcon&lt;DiagrammingThemedIcons.ScrollRight&gt;()        // Icon image for rendering</code>
            </example>
        </member>
        <member name="F:JetBrains.Diagramming.Resources.DiagrammingThemedIcons.ScrollRight.Id">
            <inheritdoc cref="T:JetBrains.Diagramming.Resources.DiagrammingThemedIcons.ScrollRight">identifier class</inheritdoc>
        </member>
        <member name="M:JetBrains.Diagramming.Resources.DiagrammingThemedIcons.ScrollRight.Load_Color">
            <summary>Loads the image for Themed Icon ScrollRight theme aspect Color.</summary>
        </member>
        <member name="M:JetBrains.Diagramming.Resources.DiagrammingThemedIcons.ScrollRight.Load_Gray">
            <summary>Loads the image for Themed Icon ScrollRight theme aspect Gray.</summary>
        </member>
        <member name="M:JetBrains.Diagramming.Resources.DiagrammingThemedIcons.ScrollRight.Load_GrayDark">
            <summary>Loads the image for Themed Icon ScrollRight theme aspect GrayDark.</summary>
        </member>
        <member name="M:JetBrains.Diagramming.Resources.DiagrammingThemedIcons.ScrollRight.GetThemeImages">
            <summary>Returns the set of theme images for Themed Icon ScrollRight.</summary>
        </member>
        <member name="T:JetBrains.Diagramming.Resources.DiagrammingThemedIcons.TransitiveEdges">
             <summary>
            	<para>
            		<para>TransitiveEdges Themed Icon generated identifiers:</para>
            		<para>— <see cref="T:JetBrains.Diagramming.Resources.DiagrammingThemedIcons.TransitiveEdges"></see> identifier class, for use in attributes, XAML, and generic parameters;</para>
            		<para>— <see cref="F:JetBrains.Diagramming.Resources.DiagrammingThemedIcons.TransitiveEdges.Id"></see> identifier object, as a field in the identifier class, for use where an <see cref="T:JetBrains.UI.Icons.IconId"></see> value is expected.</para>
            		<para>
            			<code>
                                             
               EEEEEEEEEE        EEEEEEEEEE  
               44      44ZZZZZZZZ44      44  
               GG``````GG````````GG``````GG  
               DD''''''DD88888888DD''''''DD  
               8888888888        8888888888  
                 KK  KK            OO``OO    
                 bb``bb           `R#`'RH    
                 RR``RR           TD}./Dx    
                 88--88         `18{-"RR'    
               EEEEEEEEEE   `-=38b+-!DD_     
               44      440008#6l~:?Z0a'      
               GG``````GG___^!+TUBbL'        
               DD''''''DDQQQ8GV[r'           
               8888888888                    
                                             
            </code>
            		</para>
            	</para>
            </summary>
            <remarks>
            	<para>For details on Themed Icons and their use, see Remarks on the outer class.</para>
            </remarks>
            <example>
            	<code>&lt;Image Source="{icons:ThemedIcon myres:DiagrammingThemedIcons+TransitiveEdges}" /&gt;        &lt;!-- XAML --&gt;</code>
            </example>
            <example>
            	<code>[Item(Name="Sample", Icon=typeof(DiagrammingThemedIcons.TransitiveEdges))]        // C# Type attribute</code>
            </example>
            <example>
            	<code>IconId iconid = DiagrammingThemedIcons.TransitiveEdges.Id;        // IconId identifier object</code>
            </example>
            <example>
            	<code>themediconmanager.GetIcon&lt;DiagrammingThemedIcons.TransitiveEdges&gt;()        // Icon image for rendering</code>
            </example>
        </member>
        <member name="F:JetBrains.Diagramming.Resources.DiagrammingThemedIcons.TransitiveEdges.Id">
            <inheritdoc cref="T:JetBrains.Diagramming.Resources.DiagrammingThemedIcons.TransitiveEdges">identifier class</inheritdoc>
        </member>
        <member name="M:JetBrains.Diagramming.Resources.DiagrammingThemedIcons.TransitiveEdges.Load_Color">
            <summary>Loads the image for Themed Icon TransitiveEdges theme aspect Color.</summary>
        </member>
        <member name="M:JetBrains.Diagramming.Resources.DiagrammingThemedIcons.TransitiveEdges.Load_Gray">
            <summary>Loads the image for Themed Icon TransitiveEdges theme aspect Gray.</summary>
        </member>
        <member name="M:JetBrains.Diagramming.Resources.DiagrammingThemedIcons.TransitiveEdges.Load_GrayDark">
            <summary>Loads the image for Themed Icon TransitiveEdges theme aspect GrayDark.</summary>
        </member>
        <member name="M:JetBrains.Diagramming.Resources.DiagrammingThemedIcons.TransitiveEdges.GetThemeImages">
            <summary>Returns the set of theme images for Themed Icon TransitiveEdges.</summary>
        </member>
        <member name="T:JetBrains.Diagramming.Resources.DiagrammingThemedIcons.ZoomIn">
             <summary>
            	<para>
            		<para>ZoomIn Themed Icon generated identifiers:</para>
            		<para>— <see cref="T:JetBrains.Diagramming.Resources.DiagrammingThemedIcons.ZoomIn"></see> identifier class, for use in attributes, XAML, and generic parameters;</para>
            		<para>— <see cref="F:JetBrains.Diagramming.Resources.DiagrammingThemedIcons.ZoomIn.Id"></see> identifier object, as a field in the identifier class, for use where an <see cref="T:JetBrains.UI.Icons.IconId"></see> value is expected.</para>
            		<para>
            			<code>
                                             
                                             
                                             
                         IIIIIIII            
                         xx    xx            
                         FF    FF            
                   tttttttt````tttttttt      
                   ll````````````````ll      
                   ii................ii      
                   77777777----77777777      
                         TT____TT            
                         ||::::||            
                         cccccccc            
                                             
                                             
                                             
            </code>
            		</para>
            	</para>
            </summary>
            <remarks>
            	<para>For details on Themed Icons and their use, see Remarks on the outer class.</para>
            </remarks>
            <example>
            	<code>&lt;Image Source="{icons:ThemedIcon myres:DiagrammingThemedIcons+ZoomIn}" /&gt;        &lt;!-- XAML --&gt;</code>
            </example>
            <example>
            	<code>[Item(Name="Sample", Icon=typeof(DiagrammingThemedIcons.ZoomIn))]        // C# Type attribute</code>
            </example>
            <example>
            	<code>IconId iconid = DiagrammingThemedIcons.ZoomIn.Id;        // IconId identifier object</code>
            </example>
            <example>
            	<code>themediconmanager.GetIcon&lt;DiagrammingThemedIcons.ZoomIn&gt;()        // Icon image for rendering</code>
            </example>
        </member>
        <member name="F:JetBrains.Diagramming.Resources.DiagrammingThemedIcons.ZoomIn.Id">
            <inheritdoc cref="T:JetBrains.Diagramming.Resources.DiagrammingThemedIcons.ZoomIn">identifier class</inheritdoc>
        </member>
        <member name="M:JetBrains.Diagramming.Resources.DiagrammingThemedIcons.ZoomIn.Load_Color">
            <summary>Loads the image for Themed Icon ZoomIn theme aspect Color.</summary>
        </member>
        <member name="M:JetBrains.Diagramming.Resources.DiagrammingThemedIcons.ZoomIn.Load_Gray">
            <summary>Loads the image for Themed Icon ZoomIn theme aspect Gray.</summary>
        </member>
        <member name="M:JetBrains.Diagramming.Resources.DiagrammingThemedIcons.ZoomIn.Load_GrayDark">
            <summary>Loads the image for Themed Icon ZoomIn theme aspect GrayDark.</summary>
        </member>
        <member name="M:JetBrains.Diagramming.Resources.DiagrammingThemedIcons.ZoomIn.GetThemeImages">
            <summary>Returns the set of theme images for Themed Icon ZoomIn.</summary>
        </member>
        <member name="T:JetBrains.Diagramming.Resources.DiagrammingThemedIcons.ZoomOut">
             <summary>
            	<para>
            		<para>ZoomOut Themed Icon generated identifiers:</para>
            		<para>— <see cref="T:JetBrains.Diagramming.Resources.DiagrammingThemedIcons.ZoomOut"></see> identifier class, for use in attributes, XAML, and generic parameters;</para>
            		<para>— <see cref="F:JetBrains.Diagramming.Resources.DiagrammingThemedIcons.ZoomOut.Id"></see> identifier object, as a field in the identifier class, for use where an <see cref="T:JetBrains.UI.Icons.IconId"></see> value is expected.</para>
            		<para>
            			<code>
                                             
                                             
                                             
                                             
                                             
                                             
                   }}}}}}}}}}}}}}}}}}}}      
                   ii                ii      
                   ||''''''''''''''''||      
                   LLLLLLLLLLLLLLLLLLLL      
                                             
                                             
                                             
                                             
                                             
                                             
            </code>
            		</para>
            	</para>
            </summary>
            <remarks>
            	<para>For details on Themed Icons and their use, see Remarks on the outer class.</para>
            </remarks>
            <example>
            	<code>&lt;Image Source="{icons:ThemedIcon myres:DiagrammingThemedIcons+ZoomOut}" /&gt;        &lt;!-- XAML --&gt;</code>
            </example>
            <example>
            	<code>[Item(Name="Sample", Icon=typeof(DiagrammingThemedIcons.ZoomOut))]        // C# Type attribute</code>
            </example>
            <example>
            	<code>IconId iconid = DiagrammingThemedIcons.ZoomOut.Id;        // IconId identifier object</code>
            </example>
            <example>
            	<code>themediconmanager.GetIcon&lt;DiagrammingThemedIcons.ZoomOut&gt;()        // Icon image for rendering</code>
            </example>
        </member>
        <member name="F:JetBrains.Diagramming.Resources.DiagrammingThemedIcons.ZoomOut.Id">
            <inheritdoc cref="T:JetBrains.Diagramming.Resources.DiagrammingThemedIcons.ZoomOut">identifier class</inheritdoc>
        </member>
        <member name="M:JetBrains.Diagramming.Resources.DiagrammingThemedIcons.ZoomOut.Load_Color">
            <summary>Loads the image for Themed Icon ZoomOut theme aspect Color.</summary>
        </member>
        <member name="M:JetBrains.Diagramming.Resources.DiagrammingThemedIcons.ZoomOut.Load_Gray">
            <summary>Loads the image for Themed Icon ZoomOut theme aspect Gray.</summary>
        </member>
        <member name="M:JetBrains.Diagramming.Resources.DiagrammingThemedIcons.ZoomOut.Load_GrayDark">
            <summary>Loads the image for Themed Icon ZoomOut theme aspect GrayDark.</summary>
        </member>
        <member name="M:JetBrains.Diagramming.Resources.DiagrammingThemedIcons.ZoomOut.GetThemeImages">
            <summary>Returns the set of theme images for Themed Icon ZoomOut.</summary>
        </member>
    </members>
</doc>
